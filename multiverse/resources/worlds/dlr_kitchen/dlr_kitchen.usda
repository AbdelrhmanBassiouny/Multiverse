#usda 1.0
(
    defaultPrim = "dlr_kitchen"
    metersPerUnit = 1
    upAxis = "Z"
)

def Mujoco "mujoco" (
    prepend apiSchemas = ["MujocoOptionAPI"]
)
{
    string mujoco:model = "dlr_kitchen"
    float mujoco:option:timestep = 0.002

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "Kitchenette"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Kitchenette.stl@
            }

            def MujocoMesh "UCX_Kitchenette_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_001.stl@
            }

            def MujocoMesh "UCX_Kitchenette_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_002.stl@
            }

            def MujocoMesh "UCX_Kitchenette_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_003.stl@
            }

            def MujocoMesh "UCX_Kitchenette_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_004.stl@
            }

            def MujocoMesh "UCX_Kitchenette_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_005.stl@
            }

            def MujocoMesh "UCX_Kitchenette_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_006.stl@
            }

            def MujocoMesh "UCX_Kitchenette_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_007.stl@
            }

            def MujocoMesh "UCX_Kitchenette_008"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_008.stl@
            }

            def MujocoMesh "UCX_Kitchenette_009"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_009.stl@
            }

            def MujocoMesh "UCX_Kitchenette_010"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_010.stl@
            }

            def MujocoMesh "UCX_Kitchenette_011"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_011.stl@
            }

            def MujocoMesh "UCX_Kitchenette_012"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_012.stl@
            }

            def MujocoMesh "UCX_Kitchenette_013"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_013.stl@
            }

            def MujocoMesh "UCX_Kitchenette_014"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_014.stl@
            }

            def MujocoMesh "UCX_Kitchenette_015"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_015.stl@
            }

            def MujocoMesh "UCX_Kitchenette_016"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_016.stl@
            }

            def MujocoMesh "Drawer_02"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_02.stl@
            }

            def MujocoMesh "UCX_Drawer_02_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_001.stl@
            }

            def MujocoMesh "UCX_Drawer_02_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_002.stl@
            }

            def MujocoMesh "UCX_Drawer_02_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_003.stl@
            }

            def MujocoMesh "UCX_Drawer_02_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_004.stl@
            }

            def MujocoMesh "UCX_Drawer_02_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_005.stl@
            }

            def MujocoMesh "UCX_Drawer_02_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_006.stl@
            }

            def MujocoMesh "UCX_Drawer_02_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_007.stl@
            }

            def MujocoMesh "DrawerHandle"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
            }

            def MujocoMesh "UCX_DrawerHandle_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
            }

            def MujocoMesh "UCX_DrawerHandle_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
            }

            def MujocoMesh "UCX_DrawerHandle_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
            }

            def MujocoMesh "Drawer_03"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_03.stl@
            }

            def MujocoMesh "UCX_Drawer_03_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_001.stl@
            }

            def MujocoMesh "UCX_Drawer_03_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_002.stl@
            }

            def MujocoMesh "UCX_Drawer_03_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_003.stl@
            }

            def MujocoMesh "UCX_Drawer_03_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_004.stl@
            }

            def MujocoMesh "UCX_Drawer_03_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_005.stl@
            }

            def MujocoMesh "UCX_Drawer_03_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_006.stl@
            }

            def MujocoMesh "UCX_Drawer_03_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_007.stl@
            }

            def MujocoMesh "OvenDoor"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/OvenDoor.stl@
            }

            def MujocoMesh "UCX_OvenDoor_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDoor_001.stl@
            }

            def MujocoMesh "OvenDoorHandle"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/OvenDoorHandle.stl@
            }

            def MujocoMesh "UCX_OvenDoorHandle_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_001.stl@
            }

            def MujocoMesh "UCX_OvenDoorHandle_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_002.stl@
            }

            def MujocoMesh "UCX_OvenDoorHandle_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_003.stl@
            }

            def MujocoMesh "OvenDrawer"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/OvenDrawer.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_001.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_002.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_003.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_004.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_005.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_006.stl@
            }

            def MujocoMesh "UCX_OvenDrawer_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_007.stl@
            }

            def MujocoMesh "Drawer_04"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_04.stl@
            }

            def MujocoMesh "UCX_Drawer_04_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_001.stl@
            }

            def MujocoMesh "UCX_Drawer_04_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_002.stl@
            }

            def MujocoMesh "UCX_Drawer_04_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_003.stl@
            }

            def MujocoMesh "UCX_Drawer_04_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_004.stl@
            }

            def MujocoMesh "UCX_Drawer_04_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_005.stl@
            }

            def MujocoMesh "UCX_Drawer_04_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_006.stl@
            }

            def MujocoMesh "UCX_Drawer_04_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_007.stl@
            }

            def MujocoMesh "Drawer_05"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_05.stl@
            }

            def MujocoMesh "UCX_Drawer_05_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_001.stl@
            }

            def MujocoMesh "UCX_Drawer_05_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_002.stl@
            }

            def MujocoMesh "UCX_Drawer_05_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_003.stl@
            }

            def MujocoMesh "UCX_Drawer_05_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_004.stl@
            }

            def MujocoMesh "UCX_Drawer_05_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_005.stl@
            }

            def MujocoMesh "UCX_Drawer_05_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_006.stl@
            }

            def MujocoMesh "UCX_Drawer_05_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_007.stl@
            }

            def MujocoMesh "Drawer_06"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_06.stl@
            }

            def MujocoMesh "UCX_Drawer_06_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_001.stl@
            }

            def MujocoMesh "UCX_Drawer_06_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_002.stl@
            }

            def MujocoMesh "UCX_Drawer_06_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_003.stl@
            }

            def MujocoMesh "UCX_Drawer_06_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_004.stl@
            }

            def MujocoMesh "UCX_Drawer_06_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_005.stl@
            }

            def MujocoMesh "UCX_Drawer_06_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_006.stl@
            }

            def MujocoMesh "UCX_Drawer_06_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_007.stl@
            }

            def MujocoMesh "Drawer_01"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Drawer_01.stl@
            }

            def MujocoMesh "UCX_Drawer_01_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_001.stl@
            }

            def MujocoMesh "UCX_Drawer_01_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_002.stl@
            }

            def MujocoMesh "UCX_Drawer_01_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_003.stl@
            }

            def MujocoMesh "UCX_Drawer_01_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_004.stl@
            }

            def MujocoMesh "UCX_Drawer_01_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_005.stl@
            }

            def MujocoMesh "UCX_Drawer_01_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_006.stl@
            }

            def MujocoMesh "UCX_Drawer_01_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_007.stl@
            }

            def MujocoMesh "Fridge"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/Fridge.stl@
            }

            def MujocoMesh "UCX_Fridge_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_001.stl@
            }

            def MujocoMesh "UCX_Fridge_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_002.stl@
            }

            def MujocoMesh "UCX_Fridge_003"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_003.stl@
            }

            def MujocoMesh "UCX_Fridge_004"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_004.stl@
            }

            def MujocoMesh "UCX_Fridge_005"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_005.stl@
            }

            def MujocoMesh "UCX_Fridge_006"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_006.stl@
            }

            def MujocoMesh "UCX_Fridge_007"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_007.stl@
            }

            def MujocoMesh "UCX_Fridge_008"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_Fridge_008.stl@
            }

            def MujocoMesh "FridgeDoor"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/FridgeDoor.stl@
            }

            def MujocoMesh "UCX_FridgeDoor_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_FridgeDoor_001.stl@
            }

            def MujocoMesh "FridgeDoorHandle"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/FridgeDoorHandle.stl@
            }

            def MujocoMesh "UCX_FridgeDoorHandle_001"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_001.stl@
            }

            def MujocoMesh "UCX_FridgeDoorHandle_002"
            {
                asset mujoco:mesh:file = @./dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_002.stl@
            }
        }

        def MujocoMaterial "materials"
        {
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}

def Xform "dlr_kitchen"
{
    def Mesh "floor"(
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI"]
    )
    {
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float3[] extent = [(-0.5, -0.5, 0), (0.5, 0.5, 0)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.5, -0.5, 0), (0.5, -0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (10, 10, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "kitchenette" (
        prepend apiSchemas = ["MujocoBodyAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (2.4647, 3.96584, 0.786209)
        quatf mujoco:body:quat = (0.70710546, 0, 0, 0.7071081)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (2.4646999835968018, 3.9658401012420654, 0.786208987236023, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_kitchenette_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Kitchenette.usda@</Kitchenette>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Kitchenette>
            point3f mujoco:geom:pos = (0.013878751, 0.0070037437, -0.3109071)
            quatf mujoco:geom:quat = (0.70325214, 0.7102856, -0.021851059, 0.021292178)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Kitchenette.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5807812, -0.061018523, -0.0010954839)
            point3f urdf:visual:origin:xyz = (0.013878751, 0.0070037437, -0.3109071)
            matrix4d xformOp:transform = ( (0.9981383486288771, -0.0010934449263179345, 0.06098066394039561, 0), (-0.06098852565139065, -0.009917915236157926, 0.9980891917540442, 0), (-0.00048655450673084147, -0.9999502184286799, -0.009966139129597096, 0), (0.01387875066650412, 0.00700374350402546, -0.31090708224646507, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_001.usda@</UCX_Kitchenette_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_001>
            point3f mujoco:geom:pos = (-0.020835012, -0.8877913, -0.28469467)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, -0.8877913, -0.28469467)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.02083501219749451, -0.8877912759780884, -0.2846946697682142, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_002.usda@</UCX_Kitchenette_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_002>
            point3f mujoco:geom:pos = (-0.02988443, -0.0010682791, 0.12630552)
            quatf mujoco:geom:quat = (0.5, 0.5, -0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.02988443, -0.0010682791, 0.12630552)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0, 1.0000000000000027, 0), (-1.0000000000000027, -2.6645352591003757e-15, 0, 0), (0, -1.0000000000000027, -2.6645352591003757e-15, 0), (-0.029884429648518545, -0.0010682791471484756, 0.1263055205345154, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_003.usda@</UCX_Kitchenette_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_003>
            point3f mujoco:geom:pos = (0.029360503, -0.0010682791, -0.732209)
            quatf mujoco:geom:quat = (0.5, 0.5, -0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.029360503, -0.0010682791, -0.732209)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0, 1.0000000000000027, 0), (-1.0000000000000027, -2.6645352591003757e-15, 0, 0), (0, -1.0000000000000027, -2.6645352591003757e-15, 0), (0.029360502958297723, -0.0010682791471484428, -0.732209041714668, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_004.usda@</UCX_Kitchenette_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_004>
            point3f mujoco:geom:pos = (0.27216503, 0.014695749, -0.28469458)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.27216503, 0.014695749, -0.28469458)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.2721650302410125, 0.014695748686789745, -0.28469457663595676, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_005.usda@</UCX_Kitchenette_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_005>
            point3f mujoco:geom:pos = (-0.020835012, 0.31219628, -0.28469467)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, 0.31219628, -0.28469467)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.02083501219749451, 0.312196284532547, -0.28469466976821417, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_006.usda@</UCX_Kitchenette_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_006>
            point3f mujoco:geom:pos = (-0.020835012, -0.2828039, -0.28469467)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, -0.2828039, -0.28469467)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.020835012197494503, -0.2828038930892944, -0.28469466976821417, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_007.usda@</UCX_Kitchenette_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_007>
            point3f mujoco:geom:pos = (0.0046520233, -0.23630384, -0.2506871)
            quatf mujoco:geom:quat = (0.5, 0.5, 0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.0046520233, -0.23630384, -0.2506871)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 1.0000000000000027, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.0046520233154296875, -0.23630383983254433, -0.25068709626793856, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_7" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_008.usda@</UCX_Kitchenette_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_008>
            point3f mujoco:geom:pos = (0.0046520233, 0.2656961, -0.2506871)
            quatf mujoco:geom:quat = (0.5, 0.5, 0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.0046520233, 0.2656961, -0.2506871)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 1.0000000000000027, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.00465202331542969, 0.2656960990279913, -0.25068709626793867, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_8" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_009.usda@</UCX_Kitchenette_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_009>
            point3f mujoco:geom:pos = (-0.020667762, 0.014696181, 0.043964867)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.020667762, 0.014696181, 0.043964867)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (-0.020667761564254757, 0.01469618082046509, 0.04396486654877663, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_9" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_010.usda@</UCX_Kitchenette_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_010>
            point3f mujoco:geom:pos = (-0.32192555, 0.01455313, 0.043964867)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.32192555, 0.01455313, 0.043964867)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.32192555069923395, 0.014553129673004147, 0.04396486654877662, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_10" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_011.usda@</UCX_Kitchenette_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_011>
            point3f mujoco:geom:pos = (0.0046520084, 0.014696181, -0.048288614)
            quatf mujoco:geom:quat = (0.5, 0.5, -0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.0046520084, 0.014696181, -0.048288614)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0, 1.0000000000000027, 0), (-1.0000000000000027, -2.6645352591003757e-15, 0, 0), (0, -1.0000000000000027, -2.6645352591003757e-15, 0), (0.004652008414268495, 0.014696180820465086, -0.048288613557815545, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_11" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_012.usda@</UCX_Kitchenette_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_012>
            point3f mujoco:geom:pos = (0.0046520084, 0.014696181, -0.4580366)
            quatf mujoco:geom:quat = (0.5, 0.5, -0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.0046520084, 0.014696181, -0.4580366)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0, 1.0000000000000027, 0), (-1.0000000000000027, -2.6645352591003757e-15, 0, 0), (0, -1.0000000000000027, -2.6645352591003757e-15, 0), (0.004652008414268495, 0.014696180820465086, -0.4580366015434265, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_12" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_013.usda@</UCX_Kitchenette_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_013>
            point3f mujoco:geom:pos = (-0.3377905, 0.23469609, 0.047811788)
            quatf mujoco:geom:quat = (1, 0, -0.000002388373, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, -0.000004776746, 0)
            point3f urdf:collision:origin:xyz = (-0.3377905, 0.23469609, 0.047811788)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9999999999885913, 0, 0.000004776746131203339, 0), (0, 1, 0, 0), (-0.000004776746131203339, 0, 0.9999999999885913, 0), (-0.33779048162027697, 0.23469609017230206, 0.04781178674776584, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_13" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_014.usda@</UCX_Kitchenette_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_014>
            point3f mujoco:geom:pos = (-0.33756486, -0.2053039, 0.047811784)
            quatf mujoco:geom:quat = (1, 0, -0.000002383161, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, -0.000004766322, 0)
            point3f urdf:collision:origin:xyz = (-0.33756486, -0.2053039, 0.047811784)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9999999999886411, 0, 0.000004766322231968877, 0), (0, 1, 0, 0), (-0.000004766322231968877, 0, 0.9999999999886411, 0), (-0.33756484838221984, -0.20530390744644061, 0.04781178272800442, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_14" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_015.usda@</UCX_Kitchenette_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_015>
            point3f mujoco:geom:pos = (-0.020835012, 0.9076964, -0.28469467)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.020835012, 0.9076964, -0.28469467)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.020835012197494514, 0.9076964110136254, -0.2846946697682169, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_kitchenette_collision_15" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Kitchenette_016.usda@</UCX_Kitchenette_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Kitchenette_016>
            point3f mujoco:geom:pos = (-0.03407277, 0.014845118, 0.14729089)
            quatf mujoco:geom:quat = (0.5, 0.5, -0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (-0.03407277, 0.014845118, 0.14729089)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Kitchenette_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0, 1.0000000000000027, 0), (-1.0000000000000027, -2.6645352591003757e-15, 0, 0), (0, -1.0000000000000027, -2.6645352591003757e-15, 0), (-0.03407277073711163, 0.014845117926597595, 0.14729088544845584, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsPrismaticJoint "drawer_02_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.1102179e-16, -1.3877829e-16, 1.3877788e-16)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_02>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.616, -0.157)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_02>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.616, -0.157)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_03_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.11020774e-16, -4.1633403e-16, 1.110223e-16)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_03>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.097, 0.616, -0.522)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_03>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.097, 0.616, -0.522)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsRevoluteJoint "oven_door_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, -1, 0)
            point3f mujoco:joint:pos = (-3.4688353e-18, 1.6653347e-16, 1.110223e-16)
            float2 mujoco:joint:range = (0, 1.5708001)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/oven_door>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.316, 0.004, -0.486)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, 0.7071068, 0, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 90.00021
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (0, -1, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/oven_door>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 1.5708001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.316, 0.004, -0.486)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsPrismaticJoint "oven_drawer_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (-1.3876666e-17, 3.0531138e-16, 1.110223e-16)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/oven_drawer>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.016, -0.557)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/oven_drawer>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.016, -0.557)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_04_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.1102179e-16, -1.3877829e-16, 6.938894e-17)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_04>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, -0.584, 0.043)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_04>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, -0.584, 0.043)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_05_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.1102179e-16, -1.3877829e-16, 1.3877788e-16)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_05>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, -0.584, -0.157)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_05>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, -0.584, -0.157)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_06_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.1102241e-16, 2.7755167e-17, 1.110223e-16)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_06>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.097, -0.584, -0.522)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_06>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.097, -0.584, -0.522)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }

        def PhysicsPrismaticJoint "drawer_01_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (1.1102179e-16, -1.3877829e-16, 6.938894e-17)
            float2 mujoco:joint:range = (0, 0.4)
            uniform token mujoco:joint:type = "slide"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/kitchenette>
            rel physics:body1 = </dlr_kitchen/drawer_01>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.148, 0.616, 0.043)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 0.4
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </dlr_kitchen/drawer_01>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 0.4
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.148, 0.616, 0.043)
            prepend rel urdf:joint:parent = </dlr_kitchen/kitchenette>
            uniform token urdf:joint:type = "prismatic"
        }
    }

    def Xform "drawer_02" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.148, 0.616, -0.157)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (-0.00015154186, 0.9979493, 0.00036479053, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (-3.1412406, 0.12810287, 0.00075366016)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (1.8487005358594701, 3.817837814639344, 0.6292089819908142, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_02_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_02.usda@</Drawer_02>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_02>
            point3f mujoco:geom:pos = (0.0783289, -0.00081354217, -0.042875934)
            quatf mujoco:geom:quat = (-0.000080393074, 0.69936985, 0.00008428103, 0.71475995)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_02.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.00036907566, -1.5490309, 3.1414564)
            point3f urdf:visual:origin:xyz = (0.0783289, -0.00081354217, -0.042875934)
            matrix4d xformOp:transform = ( (-0.021763655257776682, 0.000002963720635495469, 0.9997631436000459, 0), (0.0002328107216676863, -0.9999999728673323, 0.000008032435375496377, 0), (0.9997631164976019, 0.00023293039411267295, 0.021763653977275643, 0), (0.07832889941293775, -0.0008135421890515424, -0.04287593466559746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_001.usda@</UCX_Drawer_02_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_001>
            point3f mujoco:geom:pos = (0.11408047, 1.4901161e-8, -0.08638661)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11408046493306714, 1.490116119107794e-8, -0.08638660982251169, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_002.usda@</UCX_Drawer_02_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_002>
            point3f mujoco:geom:pos = (-0.17442794, -0.0008446574, -0.037919834)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.17442794516682625, -0.0008446574211120618, -0.03791983367409557, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_003.usda@</UCX_Drawer_02_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_003>
            point3f mujoco:geom:pos = (0.3939415, -0.00080162287, -0.019886844)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.39394149929285055, -0.0008016228675842246, -0.0198868441657396, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_004.usda@</UCX_Drawer_02_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_004>
            point3f mujoco:geom:pos = (0.110905446, -0.2778017, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, -0.2778016924858094, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_005.usda@</UCX_Drawer_02_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_005>
            point3f mujoco:geom:pos = (0.110905446, 0.27619833, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, 0.2761983275413514, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_006.usda@</UCX_Drawer_02_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_006>
            point3f mujoco:geom:pos = (0.11090545, -0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812316832966, 0.07764292415450552, 0), (0, -0.07764292415450824, 0.9969812316832966, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.110905455231806, -0.27502388073402395, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_02_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_02_007.usda@</UCX_Drawer_02_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_02_007>
            point3f mujoco:geom:pos = (0.11090545, 0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_02_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.886579864025407e-15, 0.9969812314452702, -0.07764292721090843, 0), (0, 0.07764292721090549, 0.9969812314452702, 0), (1.0000000000000029, 0, -2.886579864025407e-15, 0), (0.110905455231806, 0.2750238832175578, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_02_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.209939, 0.00117, 0.025767)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_02_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_02_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_02_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_02_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_03" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.097, 0.616, -0.522)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.009161649, -0.00032812098, -0.07310583)
        float3 physics:diagonalInertia = (0.38564655, 0.4764746, 0.6430068)
        float physics:mass = 7.7570677
        quatf physics:principalAxes = (-0.00045902783, 0.99140584, 0.0021758887, -0.13080314)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.38564655
        float urdf:link:inertial:inertia:iyy = 0.4764746
        float urdf:link:inertial:inertia:izz = 0.6430068
        float urdf:link:inertial:mass = 7.7570677
        float3 urdf:link:inertial:origin:rpy = (-3.140061, 0.26235533, 0.004591594)
        point3f urdf:link:inertial:origin:xyz = (-0.009161649, -0.00032812098, -0.07310583)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (1.8487003467044145, 3.8688378136853188, 0.26420897245407104, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_03_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_03.usda@</Drawer_03>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_03>
            point3f mujoco:geom:pos = (-0.017179955, -0.0015816335, -0.051238645)
            quatf mujoco:geom:quat = (-0.0003178315, 0.77714485, 0.00030794967, 0.62932163)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_03.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-3.1410809, -1.3613602, 0.00037808242)
            point3f urdf:visual:origin:xyz = (-0.017179955, -0.0015816335, -0.051238645)
            matrix4d xformOp:transform = ( (0.20790840316215742, 0.00007860651695774202, 0.978148296382294, 0), (0.0008786794583579285, -0.9999996083002887, -0.00010640345364392552, 0), (0.9781479048778757, 0.0008816009873969684, -0.20790839079443413, 0), (-0.01717995555558453, -0.0015816334839649242, -0.051238643544647716, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_001.usda@</UCX_Drawer_03_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_001>
            point3f mujoco:geom:pos = (0.060115878, 0.27502388, -0.113864854)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772117, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, 0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812297046073, -0.07764294956204398, 0), (0, 0.07764294956204143, 0.9969812297046073, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.060115876311833356, 0.2750238832279094, -0.11386485557006647, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_002.usda@</UCX_Drawer_03_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_002>
            point3f mujoco:geom:pos = (0.060115878, -0.27502388, -0.113864854)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772118, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, -0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812291035434, 0.07764295728006199, 0), (0, -0.07764295728006476, 0.9969812291035434, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.06011587631183335, -0.27502388074437545, -0.11386485557006647, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_003.usda@</UCX_Drawer_03_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_003>
            point3f mujoco:geom:pos = (0.06011587, 0.27619833, 0.04391294)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06011587, 0.27619833, 0.04391294)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.060115869157016895, 0.27619832754135126, 0.043912939727306345, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_004.usda@</UCX_Drawer_03_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_004>
            point3f mujoco:geom:pos = (0.06011587, -0.2778017, 0.043912943)
            quatf mujoco:geom:quat = (0.5, 0.5, 0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.06011587, -0.2778017, 0.043912943)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 1.0000000000000027, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.06011586915701843, -0.2778016924858093, 0.043912943452597046, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_005.usda@</UCX_Drawer_03_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_005>
            point3f mujoco:geom:pos = (0.34315193, -0.00036489964, -0.047587022)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.34315193, -0.00036489964, -0.047587022)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.34315192699432373, -0.0003648996353149465, -0.04758702148683586, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_006.usda@</UCX_Drawer_03_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_006>
            point3f mujoco:geom:pos = (-0.22521752, -0.0008446574, 0.026221953)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.22521752, -0.0008446574, 0.026221953)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.2252175211906433, -0.0008446574211120572, 0.02622195426374671, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_03_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_03_007.usda@</UCX_Drawer_03_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_03_007>
            point3f mujoco:geom:pos = (0.06329089, 1.4901161e-8, -0.14908701)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06329089, 1.4901161e-8, -0.14908701)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_03_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.0632908851839605, 1.4901161196041164e-8, -0.14908701181411746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_03_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.260729, 0.00044, 0.189908)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.26072901487350464, 0.0004400000034365803, 0.1899079978466034, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_03_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_03_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_03_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_03_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "oven_door" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "PhysxRigidBodyAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.316, 0.004, -0.486)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.006090462, 0.010207861, 0.23177263)
        float3 physics:diagonalInertia = (0.09859467, 0.24083796, 0.33928758)
        float physics:mass = 3.3539793
        quatf physics:principalAxes = (0, 0.70710677, 0, -0.70710677)
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 1
        float urdf:link:inertial:inertia:ixx = 0.09859467
        float urdf:link:inertial:inertia:iyy = 0.24083796
        float urdf:link:inertial:inertia:izz = 0.33928758
        float urdf:link:inertial:mass = 3.3539793
        float3 urdf:link:inertial:origin:rpy = (-3.1415927, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-0.006090462, 0.010207861, 0.23177263)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (2.460701155426477, 3.649840071865014, 0.3002089858055115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_oven_door_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/OvenDoor.usda@</OvenDoor>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/OvenDoor>
            point3f mujoco:geom:pos = (-0.006090501, 0.010207848, 0.2317725)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/OvenDoor.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:visual:origin:xyz = (-0.006090501, 0.010207848, 0.2317725)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.0060905006442231666, 0.010207847304653832, 0.23177249807744715, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_door_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDoor_001.usda@</UCX_OvenDoor_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDoor_001>
            point3f mujoco:geom:pos = (-0.006090462, 0.010207862, 0.23427261)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.006090462, 0.010207862, 0.23427261)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDoor_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.0060904622077941895, 0.010207861661911012, 0.23427261901088067, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "oven_door_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.046933, 0.01596, 0.415079)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (-0.0016785798, 0.000032943914, -0.0061250348)
            float3 physics:diagonalInertia = (0.000051665415, 0.0070423284, 0.007072341)
            float physics:mass = 0.276021
            quatf physics:principalAxes = (0.37975428, 0.5964576, -0.37989986, 0.5964069)
            float urdf:link:inertial:inertia:ixx = 0.000051665415
            float urdf:link:inertial:inertia:iyy = 0.0070423284
            float urdf:link:inertial:inertia:izz = 0.007072341
            float urdf:link:inertial:mass = 0.276021
            float3 urdf:link:inertial:origin:rpy = (-2.4731195, -1.5705783, -1.802598)
            point3f urdf:link:inertial:origin:xyz = (-0.0016785798, 0.000032943914, -0.0061250348)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.046932999044656754, 0.015960000455379486, 0.4150789976119995, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_oven_door_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/OvenDoorHandle.usda@</OvenDoorHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/OvenDoorHandle>
                point3f mujoco:geom:pos = (0.004211772, 0.0022791715, -0.004971042)
                quatf mujoco:geom:quat = (0.5192747, 0.00004600161, 0.000067053355, 0.85460734)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/OvenDoorHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.00016238354, -0.000008988402, 2.0495884)
                point3f urdf:visual:origin:xyz = (0.004211772, 0.0022791715, -0.004971042)
                matrix4d xformOp:transform = ( (-0.46070751899762263, 0.8875520164239774, 0.000008988402052601514, 0), (-0.8875520040857277, -0.46070751423761336, 0.0001623835341673198, 0), (0.00014826485755087856, 0.0000668336408969765, 0.9999999867753981, 0), (0.004211771797291637, 0.0022791714771639277, -0.004971041843841434, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_door_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDoorHandle_001.usda@</UCX_OvenDoorHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDoorHandle_001>
                point3f mujoco:geom:pos = (0.01523653, 0.00763711, 0.22170116)
                quatf mujoco:geom:quat = (0.35202837, 0.35202837, 0.6132504, 0.6132504)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (1.5707964, -1.110223e-15, 2.0993721)
                point3f urdf:collision:origin:xyz = (0.01523653, 0.00763711, 0.22170116)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.5043041237001564, 0.8635261147290366, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (0.8635261147290366, 0.5043041237001538, -2.6645352591003757e-15, 0), (0.015236530079940658, 0.00763711026655826, 0.2217011600158629, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_door_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDoorHandle_002.usda@</UCX_OvenDoorHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDoorHandle_002>
                point3f mujoco:geom:pos = (0.01523653, 0.00763711, -0.23288307)
                quatf mujoco:geom:quat = (0.35202837, 0.35202837, 0.6132504, 0.6132504)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (1.5707964, -1.110223e-15, 2.0993721)
                point3f urdf:collision:origin:xyz = (0.01523653, 0.00763711, -0.23288307)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.5043041237001553, 0.8635261147290373, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (0.8635261147290373, 0.5043041237001527, -2.6645352591003757e-15, 0), (0.015236530079947618, 0.007637110266561245, -0.23288306227281053, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_door_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDoorHandle_003.usda@</UCX_OvenDoorHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDoorHandle_003>
                point3f mujoco:geom:pos = (-0.005733653, -0.0017900086, -0.005442649)
                quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
                point3f urdf:collision:origin:xyz = (-0.005733653, -0.0017900086, -0.005442649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDoorHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.005733652833307263, -0.0017900086471730955, -0.0054426493338182455, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "oven_drawer" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.148, 0.016, -0.557)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.07058255, -0.009504064, -0.06355084)
        float3 physics:diagonalInertia = (0.24297307, 0.30771157, 0.49120617)
        float physics:mass = 5.9858694
        quatf physics:principalAxes = (0.996713, 0.00115112, 0.064003, -0.049653813)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.24297307
        float urdf:link:inertial:inertia:iyy = 0.30771157
        float urdf:link:inertial:inertia:izz = 0.49120617
        float urdf:link:inertial:mass = 5.9858694
        float3 urdf:link:inertial:origin:rpy = (-0.00409485, 0.1280492, -0.099815354)
        point3f urdf:link:inertial:origin:xyz = (0.07058255, -0.009504064, -0.06355084)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (2.448700531757524, 3.8178400399929684, 0.22920900583267212, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_oven_drawer_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/OvenDrawer.usda@</OvenDrawer>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/OvenDrawer>
            point3f mujoco:geom:pos = (0.0783289, -0.00081354217, -0.042875934)
            quatf mujoco:geom:quat = (-0.000080393074, 0.69936985, 0.00008428103, 0.71475995)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/OvenDrawer.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.00036907566, -1.5490309, 3.1414564)
            point3f urdf:visual:origin:xyz = (0.0783289, -0.00081354217, -0.042875934)
            matrix4d xformOp:transform = ( (-0.021763655257776682, 0.000002963720635495469, 0.9997631436000459, 0), (0.0002328107216676863, -0.9999999728673323, 0.000008032435375496377, 0), (0.9997631164976019, 0.00023293039411267295, 0.021763653977275643, 0), (0.07832889941293775, -0.0008135421890515424, -0.04287593466559746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_001.usda@</UCX_OvenDrawer_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_001>
            point3f mujoco:geom:pos = (0.11408047, -0.0019999892, -0.086386606)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, -0.0019999892, -0.086386606)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11408046493306719, -0.0019999891519546465, -0.08638660982251165, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_002.usda@</UCX_OvenDrawer_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_002>
            point3f mujoco:geom:pos = (-0.17442794, -0.0008446574, -0.042919833)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.042919833)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.17442794516682622, -0.0008446574211120543, -0.04291983298026028, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_003.usda@</UCX_OvenDrawer_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_003>
            point3f mujoco:geom:pos = (0.3939415, -0.00080162287, -0.019886844)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.39394149929285055, -0.0008016228675842246, -0.0198868441657396, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_004.usda@</UCX_OvenDrawer_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_004>
            point3f mujoco:geom:pos = (0.110905446, -0.2778017, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, -0.2778016924858094, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_005.usda@</UCX_OvenDrawer_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_005>
            point3f mujoco:geom:pos = (0.110905446, 0.27419832, 0.03661313)
            quatf mujoco:geom:quat = (0.5, 0.5, 0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27419832, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 1.0000000000000027, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.11090544750914, 0.2741983234882355, 0.036613129079341895, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_006.usda@</UCX_OvenDrawer_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_006>
            point3f mujoco:geom:pos = (0.11090545, -0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812316832966, 0.07764292415450552, 0), (0, -0.07764292415450824, 0.9969812316832966, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.110905455231806, -0.27502388073402395, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_oven_drawer_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_OvenDrawer_007.usda@</UCX_OvenDrawer_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_OvenDrawer_007>
            point3f mujoco:geom:pos = (0.11090546, 0.27292284, -0.052538224)
            quatf mujoco:geom:quat = (0.51862246, 0.48065656, 0.51862246, 0.48065656)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07595011, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090546, 0.27292284, -0.052538224)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_OvenDrawer_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9971171764601013, -0.07587711386340878, 0), (0, 0.07587711386340601, 0.9971171764601013, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.1109054580400419, 0.27292285566734226, -0.0525382222091997, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "oven_drawer_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.209939, 0.00117, 0.025767)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_oven_drawer_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_drawer_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_drawer_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_oven_drawer_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_04" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.148, -0.584, 0.043)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (-0.00015154186, 0.9979493, 0.00036479053, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (-3.1412406, 0.12810287, 0.00075366016)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (3.048700523930288, 3.8178422653465787, 0.8292089886963367, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_04_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_04.usda@</Drawer_04>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_04>
            point3f mujoco:geom:pos = (0.0783289, -0.00081354217, -0.042875934)
            quatf mujoco:geom:quat = (-0.000080393074, 0.69936985, 0.00008428103, 0.71475995)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_04.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.00036907566, -1.5490309, 3.1414564)
            point3f urdf:visual:origin:xyz = (0.0783289, -0.00081354217, -0.042875934)
            matrix4d xformOp:transform = ( (-0.021763655257776682, 0.000002963720635495469, 0.9997631436000459, 0), (0.0002328107216676863, -0.9999999728673323, 0.000008032435375496377, 0), (0.9997631164976019, 0.00023293039411267295, 0.021763653977275643, 0), (0.07832889941293775, -0.0008135421890515424, -0.04287593466559746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_001.usda@</UCX_Drawer_04_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_001>
            point3f mujoco:geom:pos = (0.11408047, 1.4901161e-8, -0.08638661)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11408046493306714, 1.490116119107794e-8, -0.08638660982251169, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_002.usda@</UCX_Drawer_04_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_002>
            point3f mujoco:geom:pos = (-0.17442794, -0.0008446574, -0.037919834)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.17442794516682625, -0.0008446574211120618, -0.03791983367409557, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_003.usda@</UCX_Drawer_04_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_003>
            point3f mujoco:geom:pos = (0.3939415, -0.00080162287, -0.019886844)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.39394149929285055, -0.0008016228675842246, -0.0198868441657396, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_004.usda@</UCX_Drawer_04_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_004>
            point3f mujoco:geom:pos = (0.110905446, -0.2778017, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, -0.2778016924858094, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_005.usda@</UCX_Drawer_04_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_005>
            point3f mujoco:geom:pos = (0.110905446, 0.27619833, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, 0.2761983275413514, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_006.usda@</UCX_Drawer_04_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_006>
            point3f mujoco:geom:pos = (0.11090545, -0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812316832966, 0.07764292415450552, 0), (0, -0.07764292415450824, 0.9969812316832966, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.110905455231806, -0.27502388073402395, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_04_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_04_007.usda@</UCX_Drawer_04_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_04_007>
            point3f mujoco:geom:pos = (0.11090545, 0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_04_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.886579864025407e-15, 0.9969812314452702, -0.07764292721090843, 0), (0, 0.07764292721090549, 0.9969812314452702, 0), (1.0000000000000029, 0, -2.886579864025407e-15, 0), (0.110905455231806, 0.2750238832175578, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_04_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.209939, 0.00117, 0.025767)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_04_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_04_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_04_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_04_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_05" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.148, -0.584, -0.157)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (-0.00015154186, 0.9979493, 0.00036479053, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (-3.1412406, 0.12810287, 0.00075366016)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (3.048700523930288, 3.8178422653465787, 0.6292089819908142, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_05_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_05.usda@</Drawer_05>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_05>
            point3f mujoco:geom:pos = (0.0783289, -0.00081354217, -0.042875934)
            quatf mujoco:geom:quat = (-0.000080393074, 0.69936985, 0.00008428103, 0.71475995)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_05.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.00036907566, -1.5490309, 3.1414564)
            point3f urdf:visual:origin:xyz = (0.0783289, -0.00081354217, -0.042875934)
            matrix4d xformOp:transform = ( (-0.021763655257776682, 0.000002963720635495469, 0.9997631436000459, 0), (0.0002328107216676863, -0.9999999728673323, 0.000008032435375496377, 0), (0.9997631164976019, 0.00023293039411267295, 0.021763653977275643, 0), (0.07832889941293775, -0.0008135421890515424, -0.04287593466559746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_001.usda@</UCX_Drawer_05_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_001>
            point3f mujoco:geom:pos = (0.11408047, 1.4901161e-8, -0.08638661)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11408046493306714, 1.490116119107794e-8, -0.08638660982251169, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_002.usda@</UCX_Drawer_05_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_002>
            point3f mujoco:geom:pos = (-0.17442794, -0.0008446574, -0.037919834)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.17442794516682625, -0.0008446574211120618, -0.03791983367409557, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_003.usda@</UCX_Drawer_05_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_003>
            point3f mujoco:geom:pos = (0.3939415, -0.00080162287, -0.019886844)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.39394149929285055, -0.0008016228675842246, -0.0198868441657396, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_004.usda@</UCX_Drawer_05_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_004>
            point3f mujoco:geom:pos = (0.110905446, -0.2778017, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, -0.2778016924858094, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_005.usda@</UCX_Drawer_05_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_005>
            point3f mujoco:geom:pos = (0.110905446, 0.27619833, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, 0.2761983275413514, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_006.usda@</UCX_Drawer_05_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_006>
            point3f mujoco:geom:pos = (0.11090545, -0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812316832966, 0.07764292415450552, 0), (0, -0.07764292415450824, 0.9969812316832966, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.110905455231806, -0.27502388073402395, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_05_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_05_007.usda@</UCX_Drawer_05_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_05_007>
            point3f mujoco:geom:pos = (0.11090545, 0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_05_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.886579864025407e-15, 0.9969812314452702, -0.07764292721090843, 0), (0, 0.07764292721090549, 0.9969812314452702, 0), (1.0000000000000029, 0, -2.886579864025407e-15, 0), (0.110905455231806, 0.2750238832175578, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_05_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.209939, 0.00117, 0.025767)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_05_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_05_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_05_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_05_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_06" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.097, -0.584, -0.522)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.009161649, -0.00032812098, -0.07310583)
        float3 physics:diagonalInertia = (0.38564655, 0.4764746, 0.6430068)
        float physics:mass = 7.7570677
        quatf physics:principalAxes = (-0.00045902783, 0.99140584, 0.0021758887, -0.13080314)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.38564655
        float urdf:link:inertial:inertia:iyy = 0.4764746
        float urdf:link:inertial:inertia:izz = 0.6430068
        float urdf:link:inertial:mass = 7.7570677
        float3 urdf:link:inertial:origin:rpy = (-3.140061, 0.26235533, 0.004591594)
        point3f urdf:link:inertial:origin:xyz = (-0.009161649, -0.00032812098, -0.07310583)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (3.0487003347752317, 3.8688422643925535, 0.26420897245407104, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_06_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_06.usda@</Drawer_06>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_06>
            point3f mujoco:geom:pos = (-0.017179955, -0.0015816335, -0.051238645)
            quatf mujoco:geom:quat = (-0.0003178315, 0.77714485, 0.00030794967, 0.62932163)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_06.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-3.1410809, -1.3613602, 0.00037808242)
            point3f urdf:visual:origin:xyz = (-0.017179955, -0.0015816335, -0.051238645)
            matrix4d xformOp:transform = ( (0.20790840316215742, 0.00007860651695774202, 0.978148296382294, 0), (0.0008786794583579285, -0.9999996083002887, -0.00010640345364392552, 0), (0.9781479048778757, 0.0008816009873969684, -0.20790839079443413, 0), (-0.01717995555558453, -0.0015816334839649242, -0.051238643544647716, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_001.usda@</UCX_Drawer_06_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_001>
            point3f mujoco:geom:pos = (0.060115878, 0.27502388, -0.113864854)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772117, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, 0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812297046073, -0.07764294956204398, 0), (0, 0.07764294956204143, 0.9969812297046073, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.060115876311833356, 0.2750238832279094, -0.11386485557006647, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_002.usda@</UCX_Drawer_06_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_002>
            point3f mujoco:geom:pos = (0.060115878, -0.27502388, -0.113864854)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772118, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.060115878, -0.27502388, -0.113864854)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812291035434, 0.07764295728006199, 0), (0, -0.07764295728006476, 0.9969812291035434, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.06011587631183335, -0.27502388074437545, -0.11386485557006647, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_003.usda@</UCX_Drawer_06_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_003>
            point3f mujoco:geom:pos = (0.06011587, 0.27619833, 0.04391294)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06011587, 0.27619833, 0.04391294)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.060115869157016895, 0.27619832754135126, 0.043912939727306345, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_004.usda@</UCX_Drawer_06_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_004>
            point3f mujoco:geom:pos = (0.06011587, -0.2778017, 0.043912943)
            quatf mujoco:geom:quat = (0.5, 0.5, 0.5, 0.5)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -1.3322676e-15, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.06011587, -0.2778017, 0.043912943)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 1.0000000000000027, 0, 0), (0, -2.6645352591003757e-15, 1.0000000000000027, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.06011586915701843, -0.2778016924858093, 0.043912943452597046, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_005.usda@</UCX_Drawer_06_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_005>
            point3f mujoco:geom:pos = (0.34315193, -0.00036489964, -0.047587022)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.34315193, -0.00036489964, -0.047587022)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.34315192699432373, -0.0003648996353149465, -0.04758702148683586, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_006.usda@</UCX_Drawer_06_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_006>
            point3f mujoco:geom:pos = (-0.22521752, -0.0008446574, 0.026221953)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.22521752, -0.0008446574, 0.026221953)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.2252175211906433, -0.0008446574211120572, 0.02622195426374671, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_06_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_06_007.usda@</UCX_Drawer_06_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_06_007>
            point3f mujoco:geom:pos = (0.06329089, 1.4901161e-8, -0.14908701)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.06329089, 1.4901161e-8, -0.14908701)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_06_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.0632908851839605, 1.4901161196041164e-8, -0.14908701181411746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_06_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.260729, 0.00044, 0.189908)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.26072901487350464, 0.0004400000034365803, 0.1899079978466034, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_06_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_06_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_06_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_06_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "drawer_01" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.148, 0.616, 0.043)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.07188069, -0.00024757386, -0.0628738)
        float3 physics:diagonalInertia = (0.25961867, 0.3152993, 0.51445603)
        float physics:mass = 6.1831446
        quatf physics:principalAxes = (-0.00015154186, 0.9979493, 0.00036479053, -0.06400771)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.25961867
        float urdf:link:inertial:inertia:iyy = 0.3152993
        float urdf:link:inertial:inertia:izz = 0.51445603
        float urdf:link:inertial:mass = 6.1831446
        float3 urdf:link:inertial:origin:rpy = (-3.1412406, 0.12810287, 0.00075366016)
        point3f urdf:link:inertial:origin:xyz = (0.07188069, -0.00024757386, -0.0628738)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (1.8487005358594701, 3.817837814639344, 0.8292089886963367, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_drawer_01_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Drawer_01.usda@</Drawer_01>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Drawer_01>
            point3f mujoco:geom:pos = (0.0783289, -0.00081354217, -0.042875934)
            quatf mujoco:geom:quat = (-0.000080393074, 0.69936985, 0.00008428103, 0.71475995)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Drawer_01.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.00036907566, -1.5490309, 3.1414564)
            point3f urdf:visual:origin:xyz = (0.0783289, -0.00081354217, -0.042875934)
            matrix4d xformOp:transform = ( (-0.021763655257776682, 0.000002963720635495469, 0.9997631436000459, 0), (0.0002328107216676863, -0.9999999728673323, 0.000008032435375496377, 0), (0.9997631164976019, 0.00023293039411267295, 0.021763653977275643, 0), (0.07832889941293775, -0.0008135421890515424, -0.04287593466559746, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_001.usda@</UCX_Drawer_01_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_001>
            point3f mujoco:geom:pos = (0.11408047, 1.4901161e-8, -0.08638661)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.11408047, 1.4901161e-8, -0.08638661)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11408046493306714, 1.490116119107794e-8, -0.08638660982251169, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_002.usda@</UCX_Drawer_01_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_002>
            point3f mujoco:geom:pos = (-0.17442794, -0.0008446574, -0.037919834)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.17442794, -0.0008446574, -0.037919834)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (-0.17442794516682625, -0.0008446574211120618, -0.03791983367409557, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_003.usda@</UCX_Drawer_01_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_003>
            point3f mujoco:geom:pos = (0.3939415, -0.00080162287, -0.019886844)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.3939415, -0.00080162287, -0.019886844)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -1.3322676295501878e-15, 1.0000000000000013, 0), (0, -1.0000000000000013, -1.3322676295501878e-15, 0), (0.39394149929285055, -0.0008016228675842246, -0.0198868441657396, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_004.usda@</UCX_Drawer_01_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_004>
            point3f mujoco:geom:pos = (0.110905446, -0.2778017, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, -0.2778017, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, -0.2778016924858094, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_005.usda@</UCX_Drawer_01_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_005>
            point3f mujoco:geom:pos = (0.110905446, 0.27619833, 0.03661313)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.110905446, 0.27619833, 0.03661313)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.11090544750913997, 0.2761983275413514, 0.03661312907934188, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_006.usda@</UCX_Drawer_01_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_006>
            point3f mujoco:geom:pos = (0.11090545, -0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.4801971, 0.5190479, 0.4801971, 0.5190479)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, -0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, -0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.6645352591003757e-15, 0.9969812316832966, 0.07764292415450552, 0), (0, -0.07764292415450824, 0.9969812316832966, 0), (1.0000000000000027, 0, -2.6645352591003757e-15, 0), (0.110905455231806, -0.27502388073402395, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_drawer_01_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Drawer_01_007.usda@</UCX_Drawer_01_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Drawer_01_007>
            point3f mujoco:geom:pos = (0.11090545, 0.27502388, -0.051164474)
            quatf mujoco:geom:quat = (0.5190479, 0.4801971, 0.5190479, 0.4801971)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (1.5707964, 0.07772115, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.11090545, 0.27502388, -0.051164474)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Drawer_01_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-2.886579864025407e-15, 0.9969812314452702, -0.07764292721090843, 0), (0, 0.07764292721090549, 0.9969812314452702, 0), (1.0000000000000029, 0, -2.886579864025407e-15, 0), (0.110905455231806, 0.2750238832175578, -0.051164472898562456, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "drawer_01_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.209939, 0.00117, 0.025767)
            quatf mujoco:body:quat = (-0.70710546, 0.7071081, 0, 0)
            point3f physics:centerOfMass = (0.0026534921, 0.0012064726, -0.000007335149)
            float3 physics:diagonalInertia = (0.000008702245, 0.00096747087, 0.00096945825)
            float physics:mass = 0.083983034
            quatf physics:principalAxes = (0.46460304, 0.53304553, -0.46460944, 0.5330521)
            float urdf:link:inertial:inertia:ixx = 0.000008702245
            float urdf:link:inertial:inertia:iyy = 0.00096747087
            float urdf:link:inertial:inertia:izz = 0.00096945825
            float urdf:link:inertial:mass = 0.083983034
            float3 urdf:link:inertial:origin:rpy = (-1.4908065, -1.5707834, -3.0845902)
            point3f urdf:link:inertial:origin:xyz = (0.0026534921, 0.0012064726, -0.000007335149)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, -0.000003708922732492681, -0.999999999993122, 0), (0, 0.999999999993122, -0.000003708922732492681, 0), (-0.20993900299072266, 0.0011699999449774623, 0.025767000392079353, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_drawer_01_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/DrawerHandle.usda@</DrawerHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/DrawerHandle>
                point3f mujoco:geom:pos = (0.009243701, 6.64619e-8, 0.000033159642)
                quatf mujoco:geom:quat = (0.70704997, 0.000003021659, 0.0000072032626, 0.7071636)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/DrawerHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0.0000144606975, 0.0000059125186, 1.570957)
                point3f urdf:visual:origin:xyz = (0.009243701, 6.64619e-8, 0.000033159642)
                matrix4d xformOp:transform = ( (-0.00016061868679906333, 0.9999999870833414, -0.000005912518747999167, 0), (-0.9999999869962781, -0.00016061860128613326, 0.000014460697611552638, 0), (0.000014459747764277349, 0.000005914841329374951, 0.9999999998779652, 0), (0.009243700366988102, 6.646189930536695e-8, 0.000033159642949065826, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_01_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_001.usda@</UCX_DrawerHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_001>
                point3f mujoco:geom:pos = (0.000002346933, 0.0012064725, 9.834766e-7)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0.000002346933, 0.0012064725, 9.834766e-7)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0000023469328880311084, 0.0012064724578522148, 9.834766387960368e-7, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_01_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_002.usda@</UCX_DrawerHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_002>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064725, 0.15946051)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064725, 0.15946051)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522146, 0.15946051105856895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_drawer_01_handle_collision_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_DrawerHandle_003.usda@</UCX_DrawerHandle_003>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_DrawerHandle_003>
                point3f mujoco:geom:pos = (0.0180117, 0.0012064724, -0.15945649)
                quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
                point3f urdf:collision:origin:xyz = (0.0180117, 0.0012064724, -0.15945649)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_DrawerHandle_003.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.018011700594797727, 0.0012064724578522144, -0.15945649147033694, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "fridge" (
        prepend apiSchemas = ["MujocoBodyAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (1.1965, 3.9037, 0.926806)
        quatf mujoco:body:quat = (0.70710546, 0, 0, 0.7071081)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (1.1964999437332153, 3.903700113296509, 0.9268059730529785, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_fridge_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/Fridge.usda@</Fridge>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Fridge>
            point3f mujoco:geom:pos = (0.011897856, -0.00034987726, 0.019825317)
            quatf mujoco:geom:quat = (0.7331608, 0.01451731, 0.015284529, 0.6797285)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/Fridge.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.04207827, 0.0026763796, 1.4952532)
            point3f urdf:visual:origin:xyz = (0.011897856, -0.00034987726, 0.019825317)
            matrix4d xformOp:transform = ( (0.07547104681837169, 0.9971444018300671, -0.0026763764867866607, 0), (-0.9962568408216487, 0.07551677591191708, 0.04206570660216986, 0), (0.04214769517078831, -0.0005083845288448713, 0.9991112617406337, 0), (0.011897856387751387, -0.000349877259820969, 0.019825316680961484, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_001.usda@</UCX_Fridge_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_001>
            point3f mujoco:geom:pos = (0.04630071, -0.0010071993, 0.9126619)
            quatf mujoco:geom:quat = (0, 0.70710677, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (3.1415927, -1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.0010071993, 0.9126619)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-3.9968028886505635e-15, 0, 1.000000000000004, 0), (0, -1.000000000000008, 0, 0), (1.000000000000004, 0, -3.9968028886505635e-15, 0), (0.046300708316266544, -0.001007199287414556, 0.912661910057068, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_002.usda@</UCX_Fridge_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_002>
            point3f mujoco:geom:pos = (0.04630071, -0.0010071993, -0.3448381)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.0010071993, -0.3448381)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (0.04630070831626654, -0.0010071992874145486, -0.3448381237685677, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_003.usda@</UCX_Fridge_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_003>
            point3f mujoco:geom:pos = (-0.27307606, -0.0010071993, -0.50257075)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.27307606, -0.0010071993, -0.50257075)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.2730760574340819, -0.001007199287414553, -0.5025707408785821, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_004.usda@</UCX_Fridge_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_004>
            point3f mujoco:geom:pos = (-0.30807057, 0.2917208, -0.19446273)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (-0.30807057, 0.2917208, -0.19446273)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (-0.308070570230484, 0.29172082059085364, -0.1944627314805984, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_005.usda@</UCX_Fridge_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_005>
            point3f mujoco:geom:pos = (-0.3208376, 0.2722111, -0.19446273)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.3208376, 0.2722111, -0.19446273)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.32083758711814886, 0.27221110463142406, -0.19446273148059848, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_006.usda@</UCX_Fridge_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_006>
            point3f mujoco:geom:pos = (0.04630071, 0.27149427, 0.55319417)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, 0.27149427, 0.55319417)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (0.04630070831626644, 0.271494265645742, 0.553194180130957, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_007.usda@</UCX_Fridge_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_007>
            point3f mujoco:geom:pos = (0.04630071, -0.27350575, 0.55319417)
            quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
            point3f urdf:collision:origin:xyz = (0.04630071, -0.27350575, 0.55319417)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (0.04630070831626653, -0.2735057435929775, 0.5531941801309587, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_collision_7" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_Fridge_008.usda@</UCX_Fridge_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_Fridge_008>
            point3f mujoco:geom:pos = (0.23129928, -0.0010042787, 0.55319417)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.23129928, -0.0010042787, 0.55319417)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_Fridge_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.23129928484559056, -0.0010042786598205614, 0.5531941801309586, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "fridge_door_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI", "PhysxJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 0, 1)
            point3f mujoco:joint:pos = (5.5509927e-17, -3.3306712e-16, 5.551115e-17)
            float2 mujoco:joint:range = (0, 1.5708001)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </dlr_kitchen/fridge>
            rel physics:body1 = </dlr_kitchen/fridge_door>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.255, -0.298, 0.411)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = 0
            float physics:upperLimit = 90.00021
            float physxJoint:jointFriction = 100
            vector3f urdf:joint:axis = (0, 0, 1)
            prepend rel urdf:joint:child = </dlr_kitchen/fridge_door>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0
            float urdf:joint:limit:upper = 1.5708001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.255, -0.298, 0.411)
            prepend rel urdf:joint:parent = </dlr_kitchen/fridge>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "fridge_door" (
        prepend apiSchemas = ["MujocoBodyAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
    )
    {
        point3f mujoco:body:pos = (-0.255, -0.298, 0.411)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.018694345, 0.29774404, -0.00002462171)
        float3 physics:diagonalInertia = (1.8229358, 2.608146, 4.4221373)
        float physics:mass = 22.043718
        quatf physics:principalAxes = (0.5, 0.5, -0.5, -0.5)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 1.8229358
        float urdf:link:inertial:inertia:iyy = 2.608146
        float urdf:link:inertial:inertia:izz = 4.4221373
        float urdf:link:inertial:mass = 22.043718
        float3 urdf:link:inertial:origin:rpy = (1.5707964, 0, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-0.018694345, 0.29774404, -0.00002462171)
        matrix4d xformOp:transform = ( (-0.000003708922732492681, 0.999999999993122, 0, 0), (-0.999999999993122, -0.000003708922732492681, 0, 0), (0, 0, 1, 0), (1.494500897374258, 3.648701223325638, 1.337805986404419, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SM_fridge_door_visual_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/FridgeDoor.usda@</FridgeDoor>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/FridgeDoor>
            point3f mujoco:geom:pos = (-0.018724488, 0.29720324, -0.00044529708)
            quatf mujoco:geom:quat = (0.99999994, 0.0004143744, 0.000033384902, 0.00004115947)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/FridgeDoor.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.0008287516, 0.00006673569, 0.000082346596)
            point3f urdf:visual:origin:xyz = (-0.018724488, 0.29720324, -0.00044529708)
            matrix4d xformOp:transform = ( (0.9999999943826929, 0.0000823465981535445, -0.00006673568650849574, 0), (-0.00008229126275846368, 0.9999996531994995, 0.0008287514879707819, 0), (0.00006680390823027533, -0.0008287459915515164, 0.9999996543585999, 0), (-0.018724487327786355, 0.29720322927726933, -0.00044529707280746003, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "SM_fridge_door_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./dlr_kitchen/meshes/usd/UCX_FridgeDoor_001.usda@</UCX_FridgeDoor_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_FridgeDoor_001>
            point3f mujoco:geom:pos = (-0.018694345, 0.29774404, -0.000024616718)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [1]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.018694345, 0.29774404, -0.000024616718)
            asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_FridgeDoor_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.018694345373660333, 0.2977440333925187, -0.000024616718292242752, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "fridge_door_handle" (
            prepend apiSchemas = ["MujocoBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI"]
        )
        {
            point3f mujoco:body:pos = (-0.065515, 0.576221, -0.393906)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (0.0066252495, 0.0042432663, 0.000022690358)
            float3 physics:diagonalInertia = (0.000019355486, 0.00020893302, 0.00022138169)
            float physics:mass = 0.07344738
            quatf physics:principalAxes = (0.654325, -0.2681185, -0.65429753, -0.2680782)
            float urdf:link:inertial:inertia:ixx = 0.000019355486
            float urdf:link:inertial:inertia:iyy = 0.00020893302
            float urdf:link:inertial:inertia:izz = 0.00022138169
            float urdf:link:inertial:mass = 0.07344738
            float3 urdf:link:inertial:origin:rpy = (-1.3611614, -1.5707273, 0.5834099)
            point3f urdf:link:inertial:origin:xyz = (0.0066252495, 0.0042432663, 0.000022690358)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.06551499664783478, 0.5762209892272949, -0.39390599727630615, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "SM_fridge_door_handle_visual_0" (
                prepend apiSchemas = ["MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/FridgeDoorHandle.usda@</FridgeDoorHandle>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/FridgeDoorHandle>
                point3f mujoco:geom:pos = (0.007367717, 0.0034592717, -0.000018390923)
                quatf mujoco:geom:quat = (0.94272965, -0.000055459936, 0.000016518767, -0.33355778)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/FridgeDoorHandle.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (-0.000115587376, -0.000005852724, -0.68015)
                point3f urdf:visual:origin:xyz = (0.007367717, 0.0034592717, -0.000018390923)
                matrix4d xformOp:transform = ( (0.7774784247859182, -0.6289096111192395, 0.000005852723866254729, 0), (0.6289096074547206, 0.7774784191800485, -0.0001155873783826391, 0), (0.00006814364668948487, 0.00009354752713933527, 0.9999999933026518, 0), (0.007367716990313351, 0.0034592717569846363, -0.00001839092413268191, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_fridge_door_handle_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_FridgeDoorHandle_001.usda@</UCX_FridgeDoorHandle_001>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_FridgeDoorHandle_001>
                point3f mujoco:geom:pos = (0.012037085, 0.012078096, 0.00002268888)
                quatf mujoco:geom:quat = (0.70710677, 0, 0, 0.70710677)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5707964)
                point3f urdf:collision:origin:xyz = (0.012037085, 0.012078096, 0.00002268888)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_001.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-1.3322676295501878e-15, 1.0000000000000013, 0, 0), (-1.0000000000000013, -1.3322676295501878e-15, 0, 0), (0, 0, 1, 0), (0.012037085718475282, 0.012078096158802506, 0.00002268888056278252, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def Mesh "SM_fridge_door_handle_collision_1" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./dlr_kitchen/meshes/usd/UCX_FridgeDoorHandle_002.usda@</UCX_FridgeDoorHandle_002>
            )
            {
                rel mujoco:geom:mesh = </mujoco/asset/meshes/UCX_FridgeDoorHandle_002>
                point3f mujoco:geom:pos = (-0.0006018296, -0.0062195305, 0.00002268888)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                uniform token physics:approximation = "convexHull"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [1]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-0.0006018296, -0.0062195305, 0.00002268888)
                asset urdf:geometry:mesh:filename = @./dlr_kitchen/meshes/stl/UCX_FridgeDoorHandle_002.stl@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0006018296044203452, -0.00621953024528921, 0.000022688880562755565, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "dlr_kitchen"
}

