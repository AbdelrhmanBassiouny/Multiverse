#usda 1.0
(
    defaultPrim = "SM_Lobby_Stairbase"
    doc = "Blender v3.6.8"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "SM_Lobby_Stairbase"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "SM_Lobby_Stairbase" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-4.1599426, -1.9284219, -2.0348828), (4.1599426, 1.9284222, 2.0348828)]
        int[] faceVertexCounts = [3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 1, 0, 3, 4, 5, 6, 4, 6, 7]
        rel material:binding = </_materials/WorldGridMaterial>
        normal3f[] normals = [(9.9865254e-8, -0.44225097, 0.8968914), (1.5648502e-7, -0.44225088, 0.89689136), (0, -0.44225106, 0.8968913), (1.5648502e-7, -0.44225088, 0.89689136), (9.9865254e-8, -0.44225097, 0.8968914), (2.563502e-7, -0.44225076, 0.8968914), (9.543329e-8, 0.5633514, 0.8262175), (0, 0.56335145, 0.82621735), (1.8810697e-7, 0.5633513, 0.8262174), (9.543329e-8, 0.5633514, 0.8262175), (1.8810697e-7, 0.5633513, 0.8262174), (2.8354026e-7, 0.5633513, 0.8262175)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-4.1599426, 0.9919195, 2.0348828), (-1.8748562, -1.9284204, 0.5948829), (-1.8748564, 0.9919195, 2.0348828), (-4.1599426, -1.9284219, 0.5948829), (4.1599426, 1.9284222, -2.0348828), (1.4330178, 1.9284222, -2.0348828), (1.4330178, -1.9284204, 0.5948829), (4.1599426, -1.9284219, 0.5948829)]
        texCoord2f[] primvars:st = [(-2.765625, 4.59375), (-0.48046875, 1.6733398), (-0.48046875, 4.59375), (-0.48046875, 1.6733398), (-2.765625, 4.59375), (-2.765625, 1.6733398), (5.5507812, 5.5273438), (2.8261719, 5.5273438), (2.8261719, 1.6733398), (5.5507812, 5.5273438), (2.8261719, 1.6733398), (5.5507812, 1.6733398)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st1 = [(0.98095703, 0.0009765625), (0.69677734, 0.49902344), (0.69677734, 0.0009765625), (0.69677734, 0.49902344), (0.98095703, 0.0009765625), (0.98095703, 0.49902344), (0.00049972534, 0.0009765625), (0.33618164, 0.0009765625), (0.33618164, 0.49902344), (0.00049972534, 0.0009765625), (0.33618164, 0.49902344), (0.00049972534, 0.49902344)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st2 = [(0.55615234, 0.99193573), (0.99072266, 0.37353516), (0.99072266, 0.99193573), (0.99072266, 0.37353516), (0.55615234, 0.99193573), (0.55615234, 0.37353516), (0.5258789, 0.99193573), (0.00806427, 0.99193573), (0.00806427, 0.10498047), (0.5258789, 0.99193573), (0.00806427, 0.10498047), (0.5258789, 0.10498047)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }

    def Xform "Materials"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def "_materials"
{
    def Material "WorldGridMaterial"
    {
        token outputs:surface.connect = </_materials/WorldGridMaterial/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor.connect = </_materials/WorldGridMaterial/Image_Texture.outputs:rgb>
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/WorldGridMaterial/Image_Texture_002.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness.connect = </_materials/WorldGridMaterial/Image_Texture_001.outputs:r>
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Engine_EngineMaterials_WorldGridMaterial_BaseColor.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }

        def Shader "UV_Map"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "st"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Roughness.png@
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float outputs:r
        }

        def Shader "Image_Texture_002"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:bias = (-1, -1, -1, -1)
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Normal.png@
            float4 inputs:scale = (2, 2, 2, 2)
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }
    }
}

