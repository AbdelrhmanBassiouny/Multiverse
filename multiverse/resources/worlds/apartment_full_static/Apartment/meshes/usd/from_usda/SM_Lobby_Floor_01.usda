#usda 1.0
(
    defaultPrim = "SM_Lobby_Floor_01"
    doc = "Blender v3.6.8"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "SM_Lobby_Floor_01"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "SM_Lobby_Floor_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-5.3074546, -3.8409514, -5e-7), (5.3074546, 3.8409517, -4.959106e-7)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 3, 2, 5, 4, 2, 5, 6, 7, 5, 7, 8, 8, 4, 5, 9, 8, 7, 8, 9, 10, 4, 11, 12, 13, 4, 12, 4, 14, 3, 14, 4, 13, 14, 15, 3, 16, 17, 14, 14, 18, 16, 15, 14, 19, 18, 14, 20, 14, 13, 20, 20, 21, 18, 20, 13, 22, 20, 22, 23, 15, 19, 24, 15, 24, 25, 24, 19, 26, 26, 27, 24]
        rel material:binding = </_materials/WorldGridMaterial>
        normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 1), (6.3324984e-10, -6.0895844e-10, 1), (0, 0, 0.99999994), (6.3324984e-10, -6.0895844e-10, 1), (0, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (0, 0, 1), (6.3324984e-10, -6.0895844e-10, 1), (1.9655226e-9, -2.4354216e-9, 1), (-6.863474e-11, -1.4410555e-10, 1), (6.3324984e-10, -6.0895844e-10, 1), (1.9655226e-9, -2.4354216e-9, 1), (-1.7896045e-9, 0, 1), (-1.1930826e-9, 0, 1), (1.9655226e-9, -2.4354216e-9, 1), (-1.1930826e-9, 0, 1), (-1.1929979e-9, 0, 1), (-1.1929979e-9, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (1.9655226e-9, -2.4354216e-9, 1), (0, 0, 1), (-1.1929979e-9, 0, 1), (-1.1930826e-9, 0, 1), (-1.1929979e-9, 0, 1), (0, 0, 1), (0, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (0, 0, 1), (0, 0, 1), (-4.8326495e-15, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (0, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (2.118655e-14, 0, 1), (0, 0, 1), (2.118655e-14, 0, 1), (-6.863474e-11, -1.4410555e-10, 1), (-4.8326495e-15, 0, 1), (2.118655e-14, 0, 1), (-6.6272425e-15, 1.8478077e-15, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.118655e-14, 0, 1), (2.118655e-14, 0, 1), (4.6373275e-14, 0, 1), (0, 0, 1), (-6.6272425e-15, 1.8478077e-15, 1), (2.118655e-14, 0, 1), (3.9942465e-14, -1.3039078e-14, 1), (4.6373275e-14, 0, 1), (2.118655e-14, 0, 1), (6.8837144e-15, 0, 1), (2.118655e-14, 0, 1), (-4.8326495e-15, 0, 1), (6.8837144e-15, 0, 1), (6.8837144e-15, 0, 1), (0, 0, 1), (4.6373275e-14, 0, 1), (6.8837144e-15, 0, 1), (-4.8326495e-15, 0, 1), (0, 0, 1), (6.8837144e-15, 0, 1), (0, 0, 1), (0, 0, 1), (-6.6272425e-15, 1.8478077e-15, 1), (3.9942465e-14, -1.3039078e-14, 1), (-1.5651314e-14, 4.1852833e-14, 1), (-6.6272425e-15, 1.8478077e-15, 1), (-1.5651314e-14, 4.1852833e-14, 1), (0, 1.9496568e-13, 1), (-1.5651314e-14, 4.1852833e-14, 1), (3.9942465e-14, -1.3039078e-14, 1), (0, -2.6207193e-14, 1), (0, -2.6207193e-14, 1), (0, -2.6207201e-14, 1), (-1.5651314e-14, 4.1852833e-14, 1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(1.7243272, 3.8409517, -5e-7), (0.24805084, 3.8409517, -5e-7), (0.24805084, 3.5833044, -5e-7), (1.7243272, 3.5833044, -5e-7), (-3.140126, 0.05999847, -5e-7), (-0.85503936, 3.5833044, -4.959106e-7), (-3.140126, 3.5833027, -5e-7), (-3.140126, 2.6722846, -5e-7), (-3.140126, 0.5032832, -5e-7), (-3.3586211, 2.6722846, -5e-7), (-3.3586211, 0.5032832, -5e-7), (-5.3074546, 0.05999847, -5e-7), (-5.3074546, -3.5834856, -5e-7), (0.92411286, -3.5834868, -5e-7), (5.1797595, 0.6183008, -5e-7), (2.7756405, 3.5833044, -5e-7), (5.3074546, -1.5507002, -5e-7), (5.3074546, 0.6183008, -5e-7), (5.1797595, -1.5507002, -5e-7), (5.1797595, 1.122746, -5e-7), (2.9611287, -3.5834868, -5e-7), (5.1797595, -3.5834868, -5e-7), (0.92411286, -3.8409514, -5e-7), (2.9611287, -3.8409514, -5e-7), (5.1797595, 3.2917464, -4.9999994e-7), (5.1797595, 3.5833027, -5e-7), (5.3074546, 1.122746, -5e-7), (5.3074546, 3.2917464, -4.9999994e-7)]
        texCoord2f[] primvars:st = [(2.2382812, 1.8608398), (0.76220703, 1.8608398), (0.76220703, 1.6030273), (2.2382812, 1.8608398), (0.76220703, 1.6030273), (2.2382812, 1.6030273), (-2.625, -1.9179688), (2.2382812, 1.6030273), (0.76220703, 1.6030273), (-0.34057617, 1.6030273), (-2.625, -1.9179688), (0.76220703, 1.6030273), (-0.34057617, 1.6030273), (-2.625, 1.6030273), (-2.625, 0.69262695), (-0.34057617, 1.6030273), (-2.625, 0.69262695), (-2.625, -1.4765625), (-2.625, -1.4765625), (-2.625, -1.9179688), (-0.34057617, 1.6030273), (-2.84375, 0.69262695), (-2.625, -1.4765625), (-2.625, 0.69262695), (-2.625, -1.4765625), (-2.84375, 0.69262695), (-2.84375, -1.4765625), (-2.625, -1.9179688), (-4.7929688, -1.9179688), (-4.7929688, -5.5625), (1.4384766, -5.5625), (-2.625, -1.9179688), (-4.7929688, -5.5625), (-2.625, -1.9179688), (5.6914062, -1.3613281), (2.2382812, 1.6030273), (5.6914062, -1.3613281), (-2.625, -1.9179688), (1.4384766, -5.5625), (5.6914062, -1.3613281), (3.2890625, 1.6030273), (2.2382812, 1.6030273), (5.8203125, -3.5273438), (5.8203125, -1.3613281), (5.6914062, -1.3613281), (5.6914062, -1.3613281), (5.6914062, -3.5273438), (5.8203125, -3.5273438), (3.2890625, 1.6030273), (5.6914062, -1.3613281), (5.6914062, -0.8564453), (5.6914062, -3.5273438), (5.6914062, -1.3613281), (3.4746094, -5.5625), (5.6914062, -1.3613281), (1.4384766, -5.5625), (3.4746094, -5.5625), (3.4746094, -5.5625), (5.6914062, -5.5625), (5.6914062, -3.5273438), (3.4746094, -5.5625), (1.4384766, -5.5625), (1.4384766, -5.8203125), (3.4746094, -5.5625), (1.4384766, -5.8203125), (3.4746094, -5.8203125), (3.2890625, 1.6030273), (5.6914062, -0.8564453), (5.6914062, 1.3117676), (3.2890625, 1.6030273), (5.6914062, 1.3117676), (5.6914062, 1.6030273), (5.6914062, 1.3117676), (5.6914062, -0.8564453), (5.8203125, -0.8564453), (5.8203125, -0.8564453), (5.8203125, 1.3117676), (5.6914062, 1.3117676)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st1 = [(0.7348633, 0.3310547), (0.7348633, 0.47216797), (0.70996094, 0.47216797), (0.7348633, 0.3310547), (0.70996094, 0.47216797), (0.70996094, 0.3310547), (0.37329102, 0.7961426), (0.70996094, 0.3310547), (0.70996094, 0.47216797), (0.4243164, 0.7631836), (0.37329102, 0.7961426), (0.70996094, 0.47216797), (0.4243164, 0.7631836), (0.70996094, 0.7961426), (0.6230469, 0.7961426), (0.4243164, 0.7631836), (0.6230469, 0.7961426), (0.41577148, 0.7961426), (0.41577148, 0.7961426), (0.37329102, 0.7961426), (0.4243164, 0.7631836), (0.6230469, 0.7961426), (0.41577148, 0.7961426), (0.6230469, 0.7961426), (0.41577148, 0.7961426), (0.6230469, 0.7961426), (0.41577148, 0.7961426), (0.37329102, 0.7961426), (0.37329102, 0.9995003), (0.30932617, 0.9995003), (0.025115967, 0.40771484), (0.37329102, 0.7961426), (0.30932617, 0.9995003), (0.37329102, 0.7961426), (0.30810547, 0.0009765625), (0.70996094, 0.3310547), (0.30810547, 0.0009765625), (0.37329102, 0.7961426), (0.025115967, 0.40771484), (0.30810547, 0.0009765625), (0.44018555, 0.08642578), (0.70996094, 0.3310547), (0.16210938, 0.0009765625), (0.30810547, 0.0009765625), (0.30810547, 0.0009765625), (0.30810547, 0.0009765625), (0.16210938, 0.0009765625), (0.16210938, 0.0009765625), (0.44018555, 0.08642578), (0.30810547, 0.0009765625), (0.37670898, 0.0009765625), (0.16210938, 0.0009765625), (0.30810547, 0.0009765625), (0.025115967, 0.21289062), (0.30810547, 0.0009765625), (0.025115967, 0.40771484), (0.025115967, 0.21289062), (0.025115967, 0.21289062), (0.025115967, 0.0009765625), (0.16210938, 0.0009765625), (0.025115967, 0.21289062), (0.025115967, 0.40771484), (0.00049972534, 0.40771484), (0.025115967, 0.21289062), (0.00049972534, 0.40771484), (0.00049972534, 0.21289062), (0.44018555, 0.08642578), (0.37670898, 0.0009765625), (0.67041016, 0.0009765625), (0.44018555, 0.08642578), (0.67041016, 0.0009765625), (0.70996094, 0.0009765625), (0.67041016, 0.0009765625), (0.37670898, 0.0009765625), (0.37670898, 0.0009765625), (0.37670898, 0.0009765625), (0.67041016, 0.0009765625), (0.67041016, 0.0009765625)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }

    def Xform "Materials"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def "_materials"
{
    def Material "WorldGridMaterial"
    {
        token outputs:surface.connect = </_materials/WorldGridMaterial/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor.connect = </_materials/WorldGridMaterial/Image_Texture.outputs:rgb>
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/WorldGridMaterial/Image_Texture_002.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness.connect = </_materials/WorldGridMaterial/Image_Texture_001.outputs:r>
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Engine_EngineMaterials_WorldGridMaterial_BaseColor.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }

        def Shader "UV_Map"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "st"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Roughness.png@
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float outputs:r
        }

        def Shader "Image_Texture_002"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:bias = (-1, -1, -1, -1)
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Normal.png@
            float4 inputs:scale = (2, 2, 2, 2)
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }
    }
}

