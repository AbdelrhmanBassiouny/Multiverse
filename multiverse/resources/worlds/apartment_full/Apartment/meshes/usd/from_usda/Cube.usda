#usda 1.0
(
    defaultPrim = "Cube"
    doc = "Blender v3.6.8"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Cube"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Cube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 1, 3, 2, 1, 4, 3, 2, 3, 5, 4, 6, 3, 3, 7, 5, 3, 6, 7, 6, 8, 7, 9, 10, 11, 9, 12, 10, 13, 12, 9, 12, 14, 10, 13, 15, 12, 12, 16, 14, 15, 16, 12, 15, 17, 16, 18, 19, 20, 18, 21, 19, 22, 21, 18, 21, 23, 19, 22, 24, 21, 21, 25, 23, 24, 25, 21, 24, 26, 25, 27, 28, 29, 27, 30, 28, 31, 30, 27, 30, 32, 28, 31, 33, 30, 30, 34, 32, 33, 34, 30, 33, 35, 34, 36, 37, 38, 36, 39, 37, 40, 39, 36, 39, 41, 37, 40, 42, 39, 39, 43, 41, 42, 43, 39, 42, 44, 43, 45, 46, 47, 45, 48, 46, 49, 48, 45, 48, 50, 46, 49, 51, 48, 48, 52, 50, 51, 52, 48, 51, 53, 52]
        rel material:binding = </_materials/WorldGridMaterial>
        normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, -6.1232336e-17, 0), (1, 0, 0), (1, 0, 0), (1, -6.1232336e-17, 0), (1, -4.592425e-17, 0), (1, 0, 0), (1, -6.1232336e-17, 0), (1, -4.592425e-17, 0), (1, -6.1232336e-17, 0), (1, -4.592425e-17, 0), (1, 0, 0), (1, 0, 0), (1, -6.1232336e-17, 0), (1, -3.0616168e-17, 0), (1, -4.592425e-17, 0), (1, -4.592425e-17, 0), (1, -3.0616168e-17, 0), (1, 0, 0), (1, -3.0616168e-17, 0), (1, -3.0616168e-17, 0), (1, -4.592425e-17, 0), (1, -3.0616168e-17, 0), (1, 0, 0), (1, -3.0616168e-17, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, -6.1232336e-17, 0), (-1, 0, 0), (-1, 0, 0), (-1, -6.1232336e-17, 0), (-1, -4.592425e-17, 0), (-1, 0, 0), (-1, -6.1232336e-17, 0), (-1, -4.592425e-17, 0), (-1, -6.1232336e-17, 0), (-1, -4.592425e-17, 0), (-1, 0, 0), (-1, 0, 0), (-1, -6.1232336e-17, 0), (-1, -3.0616168e-17, 0), (-1, -4.592425e-17, 0), (-1, -4.592425e-17, 0), (-1, -3.0616168e-17, 0), (-1, 0, 0), (-1, -3.0616168e-17, 0), (-1, -3.0616168e-17, 0), (-1, -4.592425e-17, 0), (-1, -3.0616168e-17, 0), (-1, 0, 0), (-1, -3.0616168e-17, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.5, -0.5, -0.5), (0, -0.5, -0.5), (0.5, 0, -0.5), (0, 0, -0.5), (-0.5, -0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, 0, -0.5), (0, 0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, -1.2246467e-16, 0.5), (0, -0.5, 0.5), (0.5, -0.5, 0.5), (0, -1.2246467e-16, 0.5), (0.5, 0.5, 0.5), (-0.5, -0.5, 0.5), (0, 0.5, 0.5), (-0.5, -1.2246467e-16, 0.5), (-0.5, 0.5, 0.5), (0.5, -0.5, -3.0616168e-17), (0, -0.5, -0.5), (0.5, -0.5, -0.5), (0, -0.5, -3.0616168e-17), (0.5, -0.5, 0.5), (-0.5, -0.5, -0.5), (0, -0.5, 0.5), (-0.5, -0.5, -3.0616168e-17), (-0.5, -0.5, 0.5), (0.5, 0.5, 3.0616168e-17), (0.5, 0, -0.5), (0.5, 0.5, -0.5), (0.5, -6.1232336e-17, -1.8746997e-33), (0.5, 0.5, 0.5), (0.5, -0.5, -0.5), (0.5, -1.2246467e-16, 0.5), (0.5, -0.5, -3.0616168e-17), (0.5, -0.5, 0.5), (-0.5, 0.5, 3.0616168e-17), (0, 0.5, -0.5), (-0.5, 0.5, -0.5), (0, 0.5, 3.0616168e-17), (-0.5, 0.5, 0.5), (0.5, 0.5, -0.5), (0, 0.5, 0.5), (0.5, 0.5, 3.0616168e-17), (0.5, 0.5, 0.5), (-0.5, -0.5, -3.0616168e-17), (-0.5, 0, -0.5), (-0.5, -0.5, -0.5), (-0.5, -6.1232336e-17, -1.8746997e-33), (-0.5, -0.5, 0.5), (-0.5, 0.5, -0.5), (-0.5, -1.2246467e-16, 0.5), (-0.5, 0.5, 3.0616168e-17), (-0.5, 0.5, 0.5)]
        texCoord2f[] primvars:st = [(0, 0), (0.5, 0), (0, 0.5), (0.5, 0), (0.5, 0.5), (0, 0.5), (0.5, 0), (1, 0), (0.5, 0.5), (0, 0.5), (0.5, 0.5), (0, 1), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0.5, 0.5), (1, 0.5), (0.5, 1), (1, 0.5), (1, 1), (0.5, 1), (1, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0), (1, 1), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0, 0), (0.5, 0), (1, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0), (0.5, 1), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0, 0.5), (1, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0), (1, 1), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0, 0), (0.5, 0), (1, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0), (0.5, 1), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0, 0.5), (1, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0), (1, 1), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0, 0), (0.5, 0), (1, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0), (0.5, 1), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0, 0.5), (1, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0), (1, 1), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0, 0), (0.5, 0), (1, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0), (0.5, 1), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0, 0.5), (1, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0.5, 0), (1, 1), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0, 0), (0.5, 0), (1, 1), (0.5, 1), (0.5, 0.5), (0.5, 0.5), (0, 0.5), (0, 0), (0.5, 1), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0, 0.5)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st1 = [(0.35961914, 0.99520874), (0.35961914, 0.8548584), (0.49975586, 0.99520874), (0.35961914, 0.8548584), (0.49975586, 0.8548584), (0.49975586, 0.99520874), (0.35961914, 0.8548584), (0.35961914, 0.7145996), (0.49975586, 0.8548584), (0.49975586, 0.99520874), (0.49975586, 0.8548584), (0.6401367, 0.99520874), (0.35961914, 0.7145996), (0.49975586, 0.7145996), (0.49975586, 0.8548584), (0.49975586, 0.8548584), (0.6401367, 0.8548584), (0.6401367, 0.99520874), (0.49975586, 0.8548584), (0.49975586, 0.7145996), (0.6401367, 0.8548584), (0.49975586, 0.7145996), (0.6401367, 0.7145996), (0.6401367, 0.8548584), (0.49975586, 0.0048828125), (0.35961914, 0.14550781), (0.35961914, 0.0048828125), (0.49975586, 0.0048828125), (0.49975586, 0.14550781), (0.35961914, 0.14550781), (0.6401367, 0.0048828125), (0.49975586, 0.14550781), (0.49975586, 0.0048828125), (0.49975586, 0.14550781), (0.35961914, 0.28564453), (0.35961914, 0.14550781), (0.6401367, 0.0048828125), (0.6401367, 0.14550781), (0.49975586, 0.14550781), (0.49975586, 0.14550781), (0.49975586, 0.28564453), (0.35961914, 0.28564453), (0.6401367, 0.14550781), (0.49975586, 0.28564453), (0.49975586, 0.14550781), (0.6401367, 0.14550781), (0.6401367, 0.28564453), (0.49975586, 0.28564453), (0.49975586, 0.35986328), (0.35961914, 0.50024414), (0.35961914, 0.35986328), (0.49975586, 0.35986328), (0.49975586, 0.50024414), (0.35961914, 0.50024414), (0.6401367, 0.35986328), (0.49975586, 0.50024414), (0.49975586, 0.35986328), (0.49975586, 0.50024414), (0.35961914, 0.64038086), (0.35961914, 0.50024414), (0.6401367, 0.35986328), (0.6401367, 0.50024414), (0.49975586, 0.50024414), (0.49975586, 0.50024414), (0.49975586, 0.64038086), (0.35961914, 0.64038086), (0.6401367, 0.50024414), (0.49975586, 0.64038086), (0.49975586, 0.50024414), (0.6401367, 0.50024414), (0.6401367, 0.64038086), (0.49975586, 0.64038086), (0.1451416, 0.35986328), (0.0047912598, 0.50024414), (0.0047912598, 0.35986328), (0.1451416, 0.35986328), (0.1451416, 0.50024414), (0.0047912598, 0.50024414), (0.2854004, 0.35986328), (0.1451416, 0.50024414), (0.1451416, 0.35986328), (0.1451416, 0.50024414), (0.0047912598, 0.64038086), (0.0047912598, 0.50024414), (0.2854004, 0.35986328), (0.2854004, 0.50024414), (0.1451416, 0.50024414), (0.1451416, 0.50024414), (0.1451416, 0.64038086), (0.0047912598, 0.64038086), (0.2854004, 0.50024414), (0.1451416, 0.64038086), (0.1451416, 0.50024414), (0.2854004, 0.50024414), (0.2854004, 0.64038086), (0.1451416, 0.64038086), (0.2854004, 0.14550781), (0.1451416, 0.0048828125), (0.2854004, 0.0048828125), (0.2854004, 0.14550781), (0.1451416, 0.14550781), (0.1451416, 0.0048828125), (0.2854004, 0.28564453), (0.1451416, 0.14550781), (0.2854004, 0.14550781), (0.1451416, 0.14550781), (0.0047912598, 0.0048828125), (0.1451416, 0.0048828125), (0.2854004, 0.28564453), (0.1451416, 0.28564453), (0.1451416, 0.14550781), (0.1451416, 0.14550781), (0.0047912598, 0.14550781), (0.0047912598, 0.0048828125), (0.1451416, 0.28564453), (0.0047912598, 0.14550781), (0.1451416, 0.14550781), (0.1451416, 0.28564453), (0.0047912598, 0.28564453), (0.0047912598, 0.14550781), (0.1451416, 0.7145996), (0.0047912598, 0.8548584), (0.0047912598, 0.7145996), (0.1451416, 0.7145996), (0.1451416, 0.8548584), (0.0047912598, 0.8548584), (0.2854004, 0.7145996), (0.1451416, 0.8548584), (0.1451416, 0.7145996), (0.1451416, 0.8548584), (0.0047912598, 0.99520874), (0.0047912598, 0.8548584), (0.2854004, 0.7145996), (0.2854004, 0.8548584), (0.1451416, 0.8548584), (0.1451416, 0.8548584), (0.1451416, 0.99520874), (0.0047912598, 0.99520874), (0.2854004, 0.8548584), (0.1451416, 0.99520874), (0.1451416, 0.8548584), (0.2854004, 0.8548584), (0.2854004, 0.99520874), (0.1451416, 0.99520874)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }

    def Xform "Materials"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def "_materials"
{
    def Material "WorldGridMaterial"
    {
        token outputs:surface.connect = </_materials/WorldGridMaterial/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor.connect = </_materials/WorldGridMaterial/Image_Texture.outputs:rgb>
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/WorldGridMaterial/Image_Texture_002.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness.connect = </_materials/WorldGridMaterial/Image_Texture_001.outputs:r>
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Engine_EngineMaterials_WorldGridMaterial_BaseColor.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }

        def Shader "UV_Map"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "st"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Roughness.png@
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float outputs:r
        }

        def Shader "Image_Texture_002"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:bias = (-1, -1, -1, -1)
            asset inputs:file = @./textures/Engine_EngineMaterials_WorldGridMaterial_Normal.png@
            float4 inputs:scale = (2, 2, 2, 2)
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </_materials/WorldGridMaterial/UV_Map.outputs:result>
            float3 outputs:rgb
        }
    }
}

