#usda 1.0
(
    defaultPrim = "SM_Living_Wall_06"
    doc = "Blender v3.6.8"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "SM_Living_Wall_06"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "SM_Living_Wall_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-9.380225, -0.0000028607938, -1.5258502), (9.380225, 0.0000031659697, 1.5258502)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 1, 0, 3, 4, 5, 6, 7, 6, 5, 7, 8, 6, 8, 7, 9, 10, 11, 12, 11, 10, 13, 13, 14, 11, 14, 13, 15]
        rel material:binding = </_materials/M_Basic_Wall>
        normal3f[] normals = [(7.684295e-9, -1, -2.4420107e-14), (7.684292e-9, -1, -1.03123354e-13), (7.68429e-9, -0.99999994, -1.3022874e-13), (7.684292e-9, -1, -1.03123354e-13), (7.684295e-9, -1, -2.4420107e-14), (7.684296e-9, -0.99999994, 2.6852914e-15), (-3.5582264e-7, -1, 0), (-3.5582275e-7, -1, 0), (-3.558227e-7, -1, -3.2879867e-15), (-3.558227e-7, -1, -6.026933e-16), (-3.558227e-7, -1, -3.2879867e-15), (-3.5582275e-7, -1, 0), (-3.558227e-7, -1, -6.026933e-16), (-3.558227e-7, -1, -5.370586e-15), (-3.558227e-7, -1, -3.2879867e-15), (-3.558227e-7, -1, -5.370586e-15), (-3.558227e-7, -1, -6.026933e-16), (-3.5582266e-7, -1, 0), (-3.511012e-7, -1, 1.233577e-15), (-3.5110122e-7, -1, 9.489859e-15), (-3.5110122e-7, -1, 6.900353e-15), (-3.5110122e-7, -1, 9.489859e-15), (-3.511012e-7, -1, 1.233577e-15), (-3.5110125e-7, -1, 2.7114578e-16), (-3.5110125e-7, -1, 2.7114578e-16), (-3.5110125e-7, -1, 1.2770652e-14), (-3.5110122e-7, -1, 9.489859e-15), (-3.5110125e-7, -1, 1.2770652e-14), (-3.5110125e-7, -1, 2.7114578e-16), (-3.5110122e-7, -1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.9488893, 1.6590907e-7, 1.5258502), (0.7230331, 1.7875666e-7, 0.9711703), (0.72303325, 1.7875661e-7, 1.5258502), (-0.9488895, 1.6590911e-7, 0.9711703), (-0.9488893, 1.6590907e-7, 1.5258502), (-9.380225, 0.0000031659697, 1.5258502), (-0.9488895, 1.6590911e-7, 0.9711703), (-9.380225, 0.0000031659697, 0.9711703), (-0.9488899, 1.6590919e-7, -1.5258502), (-9.380225, 0.0000031659697, -1.5258502), (9.380225, -0.0000028607938, -1.5258502), (0.7230331, 1.7875666e-7, 0.9711703), (0.72303265, 1.7875672e-7, -1.5258502), (9.380225, -0.0000028607938, 0.9711703), (0.72303325, 1.7875661e-7, 1.5258502), (9.380225, -0.0000028607938, 1.5258502)]
        texCoord2f[] primvars:st = [(-0.6411133, 2.0253906), (1.640625, 0.50024414), (1.640625, 2.0253906), (1.640625, 0.50024414), (-0.6411133, 2.0253906), (-0.6411133, 0.5), (-0.6411133, 2.0253906), (-8.875, 2.0253906), (-0.6411133, 0.5), (-8.875, 0.5), (-0.6411133, 0.5), (-8.875, 2.0253906), (-8.875, 0.5), (-0.6411133, -1.0253906), (-0.6411133, 0.5), (-0.6411133, -1.0253906), (-8.875, 0.5), (-8.875, -1.0253906), (9.875, -1.0253906), (1.640625, 0.50024414), (1.640625, -1.0253906), (1.640625, 0.50024414), (9.875, -1.0253906), (9.875, 0.50024414), (9.875, 0.50024414), (1.640625, 2.0253906), (1.640625, 0.50024414), (1.640625, 2.0253906), (9.875, 0.50024414), (9.875, 2.0253906)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st1 = [(0.72998047, 0.00048828125), (0.7939453, 0.19335938), (0.72998047, 0.19335938), (0.7939453, 0.19335938), (0.72998047, 0.00048828125), (0.7939453, 0), (0.36499023, 0.9739227), (0.36499023, 0), (0.42895508, 0.9739227), (0.42895508, 0), (0.42895508, 0.9739227), (0.36499023, 0), (0.42895508, 0), (0.71728516, 0.9739227), (0.42895508, 0.9739227), (0.71728516, 0.9739227), (0.42895508, 0), (0.71728516, 0), (0.35229492, 1), (0.06402588, 0), (0.35229492, 0), (0.06402588, 0), (0.35229492, 1), (0.06402588, 1), (0.06402588, 1), (5.9604645e-8, 0), (0.06402588, 0), (5.9604645e-8, 0), (0.06402588, 1), (-0, 1)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }

    def Xform "Materials"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def "_materials"
{
    def Material "M_Basic_Wall"
    {
        token outputs:surface.connect = </_materials/M_Basic_Wall/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor = (1, 1, 1)
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.6392157
            float inputs:specular = 0.5
            token outputs:surface
        }
    }
}

