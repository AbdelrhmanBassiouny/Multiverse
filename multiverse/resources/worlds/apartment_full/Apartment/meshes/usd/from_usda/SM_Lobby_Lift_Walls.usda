#usda 1.0
(
    defaultPrim = "SM_Lobby_Lift_Walls"
    doc = "Blender v3.6.8"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "SM_Lobby_Lift_Walls"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "SM_Lobby_Lift_Walls" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-1.8177902, -1.470171, -2.693568), (1.8277901, 1.4601704, 2.626463)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 2, 3, 0, 4, 5, 6, 5, 4, 7, 8, 9, 10, 10, 11, 8, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 19, 18, 20, 19, 20, 21, 22, 23, 24, 23, 25, 24, 25, 23, 26, 25, 26, 27, 25, 27, 28, 29, 30, 31, 30, 29, 32, 30, 32, 33, 33, 32, 34, 33, 34, 35, 36, 37, 38, 36, 39, 37, 39, 40, 37, 39, 41, 40, 41, 42, 40, 40, 42, 43, 44, 45, 46, 44, 46, 47, 48, 49, 50, 49, 48, 51, 52, 53, 54, 53, 52, 55, 56, 57, 58, 57, 56, 59, 60, 61, 62, 62, 63, 60, 64, 63, 62, 63, 64, 65, 66, 67, 68, 66, 68, 69, 66, 69, 70, 71, 66, 70, 72, 73, 74, 72, 74, 75, 72, 75, 76, 77, 72, 76]
        rel material:binding = </_materials/M_Basic_Wall>
        normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, -2.9368273e-8), (0, -1, 0), (0, -0.99999994, -2.9368273e-8), (0, -1, -3.5521268e-8), (0, -1, 0), (0, -0.99999994, -2.9368273e-8), (0, -1, -5.719662e-8), (0, -1, -3.5521268e-8), (0, -1, -5.719662e-8), (0, -1, 0), (0, -1, -3.5521268e-8), (0, -1, -3.5521268e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.82275206, -1.470171, -1.253568), (0.82275206, -1.470171, -1.1535681), (0.82275206, -1.460171, -1.1535681), (0.82275206, -1.460171, -1.253568), (-0.8056936, -1.470171, -1.1535681), (-0.8056936, -1.460171, -1.253568), (-0.8056936, -1.460171, -1.1535681), (-0.8056936, -1.470171, -1.253568), (-1.8177902, -1.470171, -1.253568), (-1.8177902, -1.470171, -1.1535681), (-1.8177902, -1.460171, -1.1535681), (-1.8177902, -1.460171, -1.253568), (-0.8056936, -1.470171, -1.253568), (-1.8177902, -1.470171, -1.253568), (-1.8177902, -1.460171, -1.253568), (-0.8056936, -1.460171, -1.253568), (-1.8177902, 1.4601704, 2.626463), (1.8177902, 1.4601704, 2.626463), (1.8177902, 1.4601704, -1.253568), (-1.8177902, 1.4601704, -1.253568), (1.8177902, 1.4601704, -2.693568), (-1.8177902, 1.4601704, -2.693568), (1.8177902, -1.460171, 2.626463), (1.8177902, -1.460171, -1.1535681), (1.8177902, 1.4601704, 2.626463), (1.8177902, 1.4601704, -1.253568), (1.8177902, -1.460171, -1.253568), (1.8177902, -1.460171, -2.693568), (1.8177902, 1.4601704, -2.693568), (-1.8177902, 1.4601704, 2.626463), (-1.8177902, -1.460171, -1.1535681), (-1.8177902, -1.460171, 2.626463), (-1.8177902, 1.4601704, -1.253568), (-1.8177902, -1.460171, -1.253568), (-1.8177902, 1.4601704, -2.693568), (-1.8177902, -1.460171, -2.693568), (1.8177902, -1.460171, -1.1535681), (0.82275206, -1.460171, 1.2682134), (0.82275206, -1.460171, -1.1535681), (1.8177902, -1.460171, 2.626463), (-0.8056936, -1.460171, 1.2682134), (-1.8177902, -1.460171, 2.626463), (-1.8177902, -1.460171, -1.1535681), (-0.8056936, -1.460171, -1.1535681), (-0.8056936, -1.470171, -1.1535681), (-1.8177902, -1.470171, -1.1535681), (-1.8177902, -1.470171, -1.253568), (-0.8056936, -1.470171, -1.253568), (1.8277901, -1.470171, -1.1535681), (1.8277901, -1.460171, -1.253568), (1.8277901, -1.460171, -1.1535681), (1.8277901, -1.470171, -1.253568), (-1.8177902, -1.470171, -1.1535681), (-0.8056936, -1.460171, -1.1535681), (-1.8177902, -1.460171, -1.1535681), (-0.8056936, -1.470171, -1.1535681), (1.8277901, -1.460171, -1.1535681), (1.8177902, -1.460171, -1.253568), (1.8177902, -1.460171, -1.1535681), (1.8277901, -1.460171, -1.253568), (1.8277901, -1.470171, -1.253568), (1.8277901, -1.470171, -1.1535681), (1.8177902, -1.470171, -1.1535681), (1.8177902, -1.470171, -1.253568), (0.82275206, -1.470171, -1.1535681), (0.82275206, -1.470171, -1.253568), (1.8177902, -1.460171, -1.1535681), (0.82275206, -1.460171, -1.1535681), (0.82275206, -1.470171, -1.1535681), (1.8177902, -1.470171, -1.1535681), (1.8277901, -1.470171, -1.1535681), (1.8277901, -1.460171, -1.1535681), (1.8177902, -1.470171, -1.253568), (0.82275206, -1.470171, -1.253568), (0.82275206, -1.460171, -1.253568), (1.8177902, -1.460171, -1.253568), (1.8277901, -1.460171, -1.253568), (1.8277901, -1.470171, -1.253568)]
        texCoord2f[] primvars:st = [(1.9648438, -0.71972656), (1.9648438, -0.6191406), (1.9550781, -0.6191406), (1.9550781, -0.6191406), (1.9550781, -0.71972656), (1.9648438, -0.71972656), (-0.96484375, -0.6191406), (-0.9550781, -0.71972656), (-0.9550781, -0.6191406), (-0.9550781, -0.71972656), (-0.96484375, -0.6191406), (-0.96484375, -0.71972656), (1.9648438, -0.71972656), (1.9648438, -0.6191406), (1.9550781, -0.6191406), (1.9550781, -0.6191406), (1.9550781, -0.71972656), (1.9648438, -0.71972656), (1.3105469, -0.96484375), (2.3222656, -0.96484375), (2.3222656, -0.9550781), (1.3105469, -0.96484375), (2.3222656, -0.9550781), (1.3105469, -0.9550781), (2.3222656, 3.1582031), (-1.3125, 3.1582031), (-1.3125, -0.71972656), (2.3222656, 3.1582031), (-1.3125, -0.71972656), (2.3222656, -0.71972656), (2.3222656, -0.71972656), (-1.3125, -0.71972656), (-1.3125, -2.1582031), (2.3222656, -0.71972656), (-1.3125, -2.1582031), (2.3222656, -2.1582031), (-0.9550781, 3.1582031), (-0.9550781, -0.6191406), (1.9648438, 3.1582031), (-0.9550781, -0.6191406), (1.9648438, -0.71972656), (1.9648438, 3.1582031), (1.9648438, -0.71972656), (-0.9550781, -0.6191406), (-0.9550781, -0.71972656), (1.9648438, -0.71972656), (-0.9550781, -0.71972656), (-0.9550781, -2.1582031), (1.9648438, -0.71972656), (-0.9550781, -2.1582031), (1.9648438, -2.1582031), (-0.96484375, 3.1582031), (1.9550781, -0.6191406), (1.9550781, 3.1582031), (1.9550781, -0.6191406), (-0.96484375, 3.1582031), (-0.96484375, -0.71972656), (1.9550781, -0.6191406), (-0.96484375, -0.71972656), (1.9550781, -0.71972656), (1.9550781, -0.71972656), (-0.96484375, -0.71972656), (-0.96484375, -2.1582031), (1.9550781, -0.71972656), (-0.96484375, -2.1582031), (1.9550781, -2.1582031), (2.3125, -0.6191406), (1.3173828, 1.8017578), (1.3173828, -0.6191406), (2.3125, -0.6191406), (2.3125, 3.1582031), (1.3173828, 1.8017578), (2.3125, 3.1582031), (-0.31054688, 1.8017578), (1.3173828, 1.8017578), (2.3125, 3.1582031), (-1.3222656, 3.1582031), (-0.31054688, 1.8017578), (-1.3222656, 3.1582031), (-1.3222656, -0.6191406), (-0.31054688, 1.8017578), (-0.31054688, 1.8017578), (-1.3222656, -0.6191406), (-0.31054688, -0.6191406), (-0.31054688, -0.6191406), (-1.3222656, -0.6191406), (-1.3222656, -0.71972656), (-0.31054688, -0.6191406), (-1.3222656, -0.71972656), (-0.31054688, -0.71972656), (-0.96484375, -0.6191406), (-0.9550781, -0.71972656), (-0.9550781, -0.6191406), (-0.9550781, -0.71972656), (-0.96484375, -0.6191406), (-0.96484375, -0.71972656), (-1.3222656, -0.96484375), (-0.31054688, -0.9550781), (-1.3222656, -0.9550781), (-0.31054688, -0.9550781), (-1.3222656, -0.96484375), (-0.31054688, -0.96484375), (-1.3222656, -0.6191406), (-1.3125, -0.71972656), (-1.3125, -0.6191406), (-1.3125, -0.71972656), (-1.3222656, -0.6191406), (-1.3222656, -0.71972656), (2.3222656, -0.71972656), (2.3222656, -0.6191406), (2.3125, -0.6191406), (2.3125, -0.6191406), (2.3125, -0.71972656), (2.3222656, -0.71972656), (1.3173828, -0.6191406), (2.3125, -0.71972656), (2.3125, -0.6191406), (2.3125, -0.71972656), (1.3173828, -0.6191406), (1.3173828, -0.71972656), (2.3125, -0.9550781), (1.3173828, -0.9550781), (1.3173828, -0.96484375), (2.3125, -0.9550781), (1.3173828, -0.96484375), (2.3125, -0.96484375), (2.3125, -0.9550781), (2.3125, -0.96484375), (2.3222656, -0.96484375), (2.3222656, -0.9550781), (2.3125, -0.9550781), (2.3222656, -0.96484375), (-1.3125, -0.96484375), (-0.31762695, -0.96484375), (-0.31762695, -0.9550781), (-1.3125, -0.96484375), (-0.31762695, -0.9550781), (-1.3125, -0.9550781), (-1.3125, -0.96484375), (-1.3125, -0.9550781), (-1.3222656, -0.9550781), (-1.3222656, -0.96484375), (-1.3125, -0.96484375), (-1.3222656, -0.9550781)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st1 = [(0.56689453, 0.90301514), (0.39868164, 0.90301514), (0.39868164, 0.90301514), (0.39868164, 0.90301514), (0.56689453, 0.90301514), (0.56689453, 0.90301514), (0.39868164, 0.6694336), (0.56689453, 0.6694336), (0.39868164, 0.6694336), (0.56689453, 0.6694336), (0.39868164, 0.6694336), (0.56689453, 0.6694336), (0.56689453, 0.5751953), (0.2836914, 0.5751953), (0.2836914, 0.5751953), (0.2836914, 0.5751953), (0.56689453, 0.5751953), (0.56689453, 0.5751953), (0.56689453, 0.6694336), (0.56689453, 0.5751953), (0.56689453, 0.5751953), (0.56689453, 0.6694336), (0.56689453, 0.5751953), (0.56689453, 0.6694336), (0.33398438, 0.42529297), (0.33398438, 0.0009765625), (0.9003906, 0.0009765625), (0.33398438, 0.42529297), (0.9003906, 0.0009765625), (0.9003906, 0.42529297), (0.9003906, 0.42529297), (0.9003906, 0.0009765625), (0.9003906, 0.0009765625), (0.9003906, 0.42529297), (0.9003906, 0.0009765625), (0.9003906, 0.42529297), (0.6582031, 0.9934044), (0.6582031, 0.7102051), (0.9902344, 0.9934044), (0.6582031, 0.7102051), (0.9902344, 0.4272461), (0.9902344, 0.9934044), (0.9902344, 0.4272461), (0.6582031, 0.7102051), (0.6582031, 0.4272461), (0.9902344, 0.4272461), (0.6582031, 0.4272461), (0.6582031, 0.4272461), (0.9902344, 0.4272461), (0.6582031, 0.4272461), (0.9902344, 0.4272461), (0.00049972534, 0.57177734), (0.33251953, 0.28857422), (0.33251953, 0.57177734), (0.33251953, 0.28857422), (0.00049972534, 0.57177734), (0.00049972534, 0.0053710938), (0.33251953, 0.28857422), (0.00049972534, 0.0053710938), (0.33251953, 0.0053710938), (0.33251953, 0.0053710938), (0.00049972534, 0.0053710938), (0.00049972534, 0.0053710938), (0.33251953, 0.0053710938), (0.00049972534, 0.0053710938), (0.33251953, 0.0053710938), (0.2836914, 0.9995003), (0.23034668, 0.90301514), (0.39868164, 0.90301514), (0.2836914, 0.9995003), (0.00049972534, 0.9995003), (0.23034668, 0.90301514), (0.00049972534, 0.9995003), (0.23034668, 0.6694336), (0.23034668, 0.90301514), (0.00049972534, 0.9995003), (0.00049972534, 0.5751953), (0.23034668, 0.6694336), (0.00049972534, 0.5751953), (0.2836914, 0.5751953), (0.23034668, 0.6694336), (0.23034668, 0.6694336), (0.2836914, 0.5751953), (0.39868164, 0.6694336), (0.39868164, 0.6694336), (0.2836914, 0.5751953), (0.56689453, 0.5751953), (0.39868164, 0.6694336), (0.56689453, 0.5751953), (0.56689453, 0.6694336), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.5751953), (0.39868164, 0.6694336), (0.2836914, 0.5751953), (0.39868164, 0.6694336), (0.2836914, 0.5751953), (0.39868164, 0.6694336), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.39868164, 0.90301514), (0.56689453, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.39868164, 0.90301514), (0.56689453, 0.90301514), (0.2836914, 0.9995003), (0.39868164, 0.90301514), (0.39868164, 0.90301514), (0.2836914, 0.9995003), (0.39868164, 0.90301514), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.2836914, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.90301514), (0.56689453, 0.90301514), (0.56689453, 0.9995003), (0.56689453, 0.90301514), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003), (0.56689453, 0.9995003)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

        def GeomSubset "M_Basic_Wall" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
            rel material:binding = </_materials/M_Basic_Wall>
        }

        def GeomSubset "M_Granite" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
            rel material:binding = </_materials/M_Granite>
        }
    }

    def Xform "Materials"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def "_materials"
{
    def Material "M_Basic_Wall"
    {
        token outputs:surface.connect = </_materials/M_Basic_Wall/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor = (1, 1, 1)
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.6392157
            float inputs:specular = 0.5
            token outputs:surface
        }
    }

    def Material "M_Granite"
    {
        token outputs:surface.connect = </_materials/M_Granite/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            float3 inputs:diffuseColor.connect = </_materials/M_Granite/Image_Texture.outputs:rgb>
            float3 inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.45
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.019607844
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Game_Materials_M_Granite_BaseColor.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Granite/UV_Map.outputs:result>
            float3 outputs:rgb
        }

        def Shader "UV_Map"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "st"
            float2 outputs:result
        }
    }
}

