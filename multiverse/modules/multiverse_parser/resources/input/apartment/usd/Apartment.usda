#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Root" (
    assetInfo = {
        asset identifier = @../../../../../../Users/giang/Documents/USD/Apartment.usda@
        string name = "Main"
        dictionary unreal = {
            string assetType = "World"
            string contentPath = "/Game/Maps/Main.Main"
            string engineVersion = "5.3.2-29314046+++UE5+Release-5.3"
            string exportTime = "2024.02.22-11.35.41"
        }
        string version = "9892E47E3FD13B78824220960706A111E14351E7"
    }
)
{
    def "Cube7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (-0.06828551616626566, -7.714018382265749, 1.4128619068966373, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Island_Cover_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.583981786430286, -5.292297244989186, 0.37774779429105365, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (8.171871765586616, -7.714008616640967, 1.4128619068966373, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "Cube8" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube8/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (-2.830820859577784, -7.714028147890531, 1.4128619068966373, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube8/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Floor_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Floor_01.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Floor_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-1.9635799732004102, 3.5823799858455345, 4.577639890612699e-7, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Granite.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Floor_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.02604552926021375, -7.674095287454975, 1.0235479507547325, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle23" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.475181152034224, -7.675025463215434, 2.622899721647059, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Oven" (
        prepend references = @Assets/Game/Meshes/Oven/SM_Oven.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000037284255260949806, -0.9999999999930496, 0, 0), (0.9999999999930496, -0.0000037284255260949806, 0, 0), (0, 0, 1, 0), (8.893639327578853, -4.051805634532741, 0.6991638027318459, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Oven_Door" (
            prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Door.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.999999999993167, 0.0000015978966570142984, 0.000003333578855774208, 0), (0.0000033335688553825852, 0.000006258433891792592, -0.9999999999748594, 0), (-0.0000015979175199570182, 0.9999999999791391, 0.000006258428565053542, 0), (0, -0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Oven_Tray" (
            prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Tray.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0002590928365896118, 0.2459277298458045, 0.292200005675852, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Oven_Grid" (
            prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Grid.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0007271664871028844, 0.22748046095581034, 0.2197953747258623, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Kitchen_01_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.16759439958048, -4.039442353559082, 1.0418363719768138, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_Wandboard" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (4.910231823841514, -2.5762798496422192, 1.347023895672919, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.666118714821664, -5.3265062285995555, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Lamp_5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.6546538713279233, -4.196173307087122, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-3.4662126910787947, -3.4326567836257027, 0.9643714689231331, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_08_Sink_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (7.0104222065860995, -5.945148792896816, 0.4251116848339507, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        def "SM_Kitchen_Handle13" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000005858954398751948, 0.9999999999828366, 0, 0), (-0.9999999999828366, -0.000005858954398751948, 0, 0), (0, -0, 1, 0), (0.0033080390812205607, -0.2490032912137731, 0.35071746042257246, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Lamp_3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.411406129045645, -6.439355324819189, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_04_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.269991858229218, -5.866569693090696, 1.7545452488687943, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_04_Door_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.008373536580911292, -0.17226558547100423, 0.19916778119278433, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_04_Door_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.009312164239663162, -0.1504345272717215, -0.19994903117532203, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle6" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.014146553346126143, -0.041035215612446004, -0.1335714691824137, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Couchtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (-6.72261520618315, -5.2266356253630875, 0.12160582270609233, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_ShadowBox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Shadow.usda@
    )
    {
        rel material:binding = </Root/SM_Window_ShadowBox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.09330750256834541, -7.72429181953612, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/MI_Basic_Wall_Dark.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Window_ShadowBox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Basic_Wall_Dark.MI_Basic_Wall_Dark@
                token outputs:out
            }
        }
    }

    def "SM_Schreibtischstuhl_Unten2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752199146993, 0.9848078686252575, 0, 0), (-0.9848078686252575, 0.17364752199146993, 0, 0), (0, 0, 1, 0), (2.3611973044008607, -6.516109473494225, 0.04246506119225035, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Unten2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Unten2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }
    }

    def "Plane2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Plane.usda@
    )
    {
        rel material:binding = </Root/Plane2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.7499999999844588, 5.992112453686145e-7, -0.00000479092870423543, 0), (-0.000004790930060648288, -0.000001697761367491779, 0.7499999999827764, 0), (7.98933866955506e-7, 0.9999999999971187, 0.0000022636869267955717, 0), (-1.631775018458626, 0.01716621360556303, 1.9408570428001042, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Logo_KnowledgeLabs.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Plane2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Logo_KnowledgeLabs.M_Logo_KnowledgeLabs@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Lamp_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-3.86040945961156, -0.016708984001525096, 2.3259066252580283, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.06886658037752103, -7.695446605337111, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Window_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Window_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_014" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_014.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.8662017181619603, -2.5646312903322723, 0.22076278193080157, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents_Short" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents_Short.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.194625648976285, -2.5782271762588493, 2.5311538130532085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.77882130431783, -2.57828302342557, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.010148769092211, -5.343630251654304, 0.7535824416522132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle15" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.0034528339046001723, -0.25118591482842734, 0.022246703604309914, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Socket_038" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_038.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-3.7576225966746506, -2.5699386022253634, 0.22457122300778565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08528019714474233, -2.5341900068330006, 1.4576800211292493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_018" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_018.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.613434933123699, -2.5646215247074906, 0.2284123178926336, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_LG" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_LG.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999636868, 0.000008522115488150407, 0, 0), (-0.000008522115488150407, 0.9999999999636868, 0, 0), (0, 0, 1, 0), (-4.240288601511224, -2.779551634649522, 1.4125320118844797, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_LG/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_LG/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_08_Sink_Base" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Base.usda@
    )
    {
        rel material:binding = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (6.959555508504309, -5.945012074149872, 0.4219116116632904, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Living_Ceiling_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527950096250692, -1.4138699024795756, 2.987799921010435, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Window_05" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.8292412697693408, -7.695461253774283, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_021" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_021.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (7.888185248490004, -2.564613284961581, 0.22712188213046147, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Door_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Door_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (8.88799967926741, -3.7652812879097155, 1.719297446922269, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle4" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.46315513560202637, -0.015595234901132229, -0.38983428083730587, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Lamp_11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.568302487843425, -6.439393166615218, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.846082089705419, -4.196194059039783, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle22" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.666936518841908, -7.672989330448445, 1.0233474502709328, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube9" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube9/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814006328582764, -0, 0, 0), (0, 0.025548312813043594, -0, 0), (0, 0, 1.8233492374420166, 0), (-6.250126203072227, -2.5401163677845204, 1.1979234809147528, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube9/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Window_Corridor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1.0903066396713257, 0), (9.614094023389498, -1.3673728637239435, 1.443949400098262, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Esstischstuhl" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstischstuhl.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.8660223411329397, -0.5000053046304848, 0, 0), (0.5000053046304848, -0.8660223411329397, 0, 0), (0, 0, 1, 0), (2.134192762355667, -3.9913219322713758, 0.34112517548072674, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.M_Fabric_Esstischstuhl@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Esstisch.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Esstisch.M_Esstisch@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Shadowbox" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Shadowbox.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-1.70296993263878, 6.144219833369107, 1.9003300051317353, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_013" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_013.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.709719788065854, -2.569753970881834, 0.2212656353131166, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_1_Retail" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_1_Retail.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144149687644472, 8.354189876745863, 1.2946099564147744, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_1_Retail/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_1_Retail/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_1_Retail/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_1_Retail/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.02019347860976728, -7.684687328233849, 2.6231841454688265, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.568312253468207, -4.196203824664565, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Milchbehaelter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Milchbehaelter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (9.085513712938564, -5.423364746942411, 0.9194504341605949, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.120807291251253, -4.050665497839475, 0.5552511472571382, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle2" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.0009132501774890634, -0.2479296858520022, 0.08401428034869696, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Retail_Door_Part1" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-1.8810787543413312, -2.604934023806436, 1.0736080692647079, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_002" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.283936128528353, -7.441805253584562, 1.1139414729042016, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Sink" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.9883567773918, -5.947266712771352, 0.7754640024424191, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (7.010099940968303, -5.344728884442247, 0.5564427060683954, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle16" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003861583581121764, 0.9999999999925443, 0, 0), (-0.9999999999925443, -0.000003861583581121764, 0, 0), (0, -0, 1, 0), (0.004551433134581721, -0.25123474589906686, 0.08721404834358282, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Kitchen_10_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.009951015190381, -4.844547316032333, 0.55660185523476, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle19" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.002975543955612692, -0.2488568123011015, 0.0870548991772182, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Esstisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (2.089829512614841, -3.41837211597624, 0.3044723442687314, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.3093999951466913, -5.730739618001735, -0.06925109708492982, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Plant_Big_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.4845139980316162, -0, 0, 0), (0, 1.4845139980316162, -0, 0), (0, 0, 1.4845139980316162, 0), (2.4322155218076205, 0.7513381790070639, 1.469074369019097, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Plant_Big_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Rust.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Plant_Big_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Rust.M_Metal_Rust@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.1706719932554961, -7.6740965081580725, 1.0237771377613285, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.411393922014668, -4.196159879353047, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_03_Fridge" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_03_Fridge.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000013315805451608043, -0.9999999999991136, 0, 0), (0.9999999999991136, -0.0000013315805451608043, 0, 0), (0, 0, 1, 0), (9.177247719677212, -5.052584420757341, 1.0903091186960978, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_03_Fridge/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        def "SM_Fridge_Base" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Base.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999701763, 0.000007723167161186743, -0, 0), (-0.000007723167161186743, 0.9999999999701763, 0, 0), (0, 0, 1, 0), (0.002921168065131669, -0.01918944880632875, -0.08169372375994044, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Fridge_Drawer_01" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_01.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0022327431765393575, -0.012080063584464566, 0.11025710813126466, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Drawer_02" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_02.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0019896471481728986, -0.015473645183955513, -0.04961257823677556, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Drawer_03" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_03.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0025136363253676335, -0.0326440261736413, -0.35617644467555465, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Drawer_04" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_04.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00508075065927172, -0.028845181725540507, -0.5329980349615653, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Drawer_05" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_05.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0000459725597616002, -0.06479736212807727, -0.7127872307720651, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Shelf" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.002042242836308595, -0.0010253775489297, 0.4112362578979969, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Shelf2" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.002042242836308595, -0.0010253775489297, 0.5454516479644553, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Door_01" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_01.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (0.9999999999871365, -0.000005072174042259356, 0, 0), (0.000005072174042259356, 0.9999999999871365, 0, 0), (0, 0, 1, 0), (-0.30197076485916013, -0.2780937668434825, 0.3384344406775881, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/SM_Kitchen_03_Fridge/SM_Fridge_Base/SM_Fridge_Door_01/Section2/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/SM_Fridge_Base/SM_Fridge_Door_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                            token outputs:out
                        }
                    }
                }

                def "SM_Kitchen_Handle24" (
                    prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
                )
                {
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (-0.000007723167161133304, 0.9999999999701763, -0, 0), (-0.9999999999701763, -0.000007723167161133304, 0, 0), (0, 0, 1, 0), (0.46534665865198976, -0.007986459311817016, -0.47368758096499164, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def "SM_Fridge_Egg_Tray" (
                    prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Egg_Tray.usda@
                )
                {
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (-0.0000050600060714778294, 0.9999999999871982, -0, 0), (-0.9999999999871982, -0.0000050600060714778294, 0, 0), (0, 0, 1, 0), (0.21315930742582137, 0.09950777057774803, 0.22457091783201122, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def "SM_Fridge_Door_Tray_02" (
                    prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_02.usda@
                )
                {
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (-0.0000050600060714778294, 0.9999999999871982, -0, 0), (-0.9999999999871982, -0.0000050600060714778294, 0, 0), (0, 0, 1, 0), (0.2984644843220149, 0.10177694404568859, 0.22387237048434372, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }

                def "SM_Fridge_Door_Tray_01" (
                    prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_01.usda@
                )
                {
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (-0.0000050600060714778294, 0.9999999999871982, -0, 0), (-0.9999999999871982, -0.0000050600060714778294, 0, 0), (0, 0, 1, 0), (0.29725110812652905, 0.10379232647572627, -0.015652465470452626, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }

            def "SM_Fridge_Door_02" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_02.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (0.9999999999871365, -0.000005072174042259356, 0, 0), (0.000005072174042259356, 0.9999999999871365, 0, 0), (0, 0, 1, 0), (-0.30201226837287515, -0.27803273142229784, -0.5563140744794737, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                over "Section1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </Root/SM_Kitchen_03_Fridge/SM_Fridge_Base/SM_Fridge_Door_02/Section1/UnrealMaterial>

                    def Material "UnrealMaterial" (
                        prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
                    )
                    {
                        token outputs:unreal:surface.connect = </Root/SM_Kitchen_03_Fridge/SM_Fridge_Base/SM_Fridge_Door_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                        def Shader "UnrealShader"
                        {
                            uniform token info:implementationSource = "sourceAsset"
                            uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                            token outputs:out
                        }
                    }
                }

                def "SM_Kitchen_Handle25" (
                    prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
                )
                {
                    token visibility = "inherited"
                    matrix4d xformOp:transform = ( (-0.000007723167161133304, 0.9999999999701763, -0, 0), (-0.9999999999701763, -0.000007723167161133304, 0, 0), (0, 0, 1, 0), (0.46538816247603887, -0.008047494521968514, 0.28486831028308757, 1) )
                    uniform token[] xformOpOrder = ["xformOp:transform"]
                }
            }
        }
    }

    def "SM_Vents2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.278013142987788, -2.5782906528199305, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_3_CitizenScience" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_3_CitizenScience.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144149687644472, 8.447139703769835, 1.433919950859547, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_3_CitizenScience/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_3_CitizenScience/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_3_CitizenScience/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_3_CitizenScience/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_06.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Wall_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527959632993642, -0.25856898683527874, 1.461950040565057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Wall_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Steckdosenbox_03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_03.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_03/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.2931914994152294, -7.494998611770598, 0.049492720451368655, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_03/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Socket_015" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_015.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (3.058118217778542, -2.56463251103537, 0.22082847101624736, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.068419619461451, -7.675073070636245, 2.622681215792568, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_026" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_026.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.468302400671632, -4.813443801102551, 0.22307464100998686, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_026/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_026/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Stairs_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairs_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (2.014119980615675, 9.6543497597944, -0.669999985024333, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_02.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (4.046862702514318, -7.494991287552011, 0.049492720451368655, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.510847044791717, -7.67419416440589, 2.6236895165512806, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (3.7123021631173287, -5.734794793692345, -0.06925109708492982, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle28" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.448528863895035, -7.674125805032418, 2.6229693017236286, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_11_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.010114589405475, -4.194895230943814, 0.75544340352468, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle21" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.01083565307951934, -0.24797548141073855, 0.020385741731843154, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Window_Handle11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.7635747673308515, -7.676609935836268, 2.6227135644246573, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-9.382219638923857, -5.052609750346619, 1.4576800211292493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ledersessel" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledersessel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.6336749125940742, -6.700746920539132, 0.28885825465191317, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Interior_Ceiling" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Interior_Ceiling.usda@
    )
    {
        rel material:binding = </Root/SM_Lift_Interior_Ceiling/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9773859949994232, 8.242389952486974, 2.3618299337812516, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lift_Interior_Ceiling/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                token outputs:out
            }
        }
    }

    def "SM_Handle_Door_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-3.429338302254564, -3.446086348755216, 0.9637673734776513, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle21" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.469238769354547, -7.672989330448445, 1.0225414810506663, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Floor_Number_EG2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Floor_Number_EG.usda@
    )
    {
        rel material:binding = </Root/SM_Floor_Number_EG2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.7819882035245028, -0.000001275568340874176, 0, 0), (0.000001275568340874176, 0.7819882035245028, 0, 0), (0, 0, 0.7819882035255432, 0), (-0.043417347891240965, 8.419623835244238, 2.2625228376122664, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Emissive_Red.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Floor_Number_EG2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Emissive_Red.M_Emissive_Red@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.72972467043121, -7.677134838168286, 1.0230825576987286, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Base" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9773859949994232, 7.249810018618177, 1.2097799412210293, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_027" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_027.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.466500642899405, -5.623604610630764, 0.22941558325106826, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Window_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-5.289681888602331, 5.170170172523626, 1.6628699884667242, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_025" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_025.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.468307283484023, -4.693834428776029, 0.22307464100998686, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_025/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_025/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_05" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-9.419439486724741, -1.4138699024795756, 1.461950040565057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Bodenspot_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.590308124937678, -5.725051141566382, -0.06925109708492982, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle20" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.9226128497135733, -7.675457592112025, 2.622756899384626, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_028" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_028.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.4688541584718, -6.025235461028615, 0.22992362462154858, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (4.1909960000739375, -2.5782473178599616, 2.5256136520442283, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schlafsofa_Kissen_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_01.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.138555205347643, -6.887102507194072, 0.5385710023662966, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Wall_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.008038939653956745, -7.611222974407156, 1.4574026163502936, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_06_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.124745279444483, -6.157220321359773, 0.22507453415376233, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle10" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.004023605124226019, -0.247119152248514, 0.15116584439950032, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Ceiling_Panel_6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.418185914050355, -5.326495242271676, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.573272037209449, -7.675268383131879, 1.023185401934711, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schlafsofa_geschossen" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_geschossen.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.556396992883151, -6.706893770987676, 0.3432849044363593, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Heater_001" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_001.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (4.0470824290719065, -7.441796708662878, 1.1139414729042016, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_001/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_001/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Heater_004" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_004.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.9505998202279216, -7.441835771162005, 1.1139414729042016, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "Cube11" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube11/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814011096954346, -0, 0, 0), (0, 0.025547999888658524, -0, 0), (0, 0, 1.8233489990234375, 0), (3.0798577192457515, -2.540119724718039, 1.1979234809147528, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube11/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Bodenspot_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-1.6411773314808897, -5.735527215550974, -0.06925109708492982, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Hexagon_Sign5" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.6790209362129644, -0.0011059599867621062, 1.633108178829218, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.319904666247112, -7.676146068659136, 1.022780433682044, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_10_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.009638515197366, -4.8442458023671975, 0.2245825145114395, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle20" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.0026740296246874347, -0.24916931165173226, 0.1602816736635191, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Vents8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.0457354279070614, -2.578271121570367, 2.5128835497897057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.846073544783735, -6.439384621693534, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Ceiling_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Ceiling_02.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Ceiling_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9437589815908893, 9.508119904664454, 2.743049865445869, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Ceiling_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_010" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_010.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.633611436032993, -2.5646428870117006, 0.22335151173133738, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_06" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_06.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.567820310119828, -7.695471019399065, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_035" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_035.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-1.509060635215178, -7.467687821365416, 0.10683456182104578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_11_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.009597011292044, -4.194708463369864, 0.5564532346326132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle22" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.010648884402854225, -0.24849305912625488, 0.08720351977936502, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Steckdosenbox_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_06.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.95310104087514, -7.495030350051138, 0.0508937109061991, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle26" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.451563531795955, -7.6759519768666, 1.0233474502709328, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_022" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.468822420191259, -3.358727647094554, 0.58467466954869, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_022/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_022/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_011" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_011.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.8494390679276194, -2.564640445605505, 0.22325911976562907, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_039" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_039.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-3.605920939909197, -2.565117130165163, 0.22223578910002573, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schreibtisch_Unten" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839374995958, -0.7660475244346887, 0, 0), (0.7660475244346887, -0.6427839374995958, 0, 0), (0, 0, 1, 0), (2.8505327731996886, -6.738046114041367, 0.12419944485576195, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Railings" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Railings.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9431249789195135, 9.531149689305948, 1.0777899691956492, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.319698910719922, -5.326545291098682, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_06_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.12424479117442, -6.1568504483211655, 0.7529809402008141, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle9" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.0012489491053511211, -0.2466210935616722, 0.017203826519761378, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Counter_Wall" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Wall.usda@
    )
    {
        rel material:binding = </Root/SM_Counter_Wall/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000004527373853147054, 0.9999999999897518, 0, 0), (-0.9999999999897518, -0.000004527373853147054, 0, 0), (0, 0, 1, 0), (9.17079996591508, -5.867626821973317, 0.8363512996654663, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Counter.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Counter_Wall/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Counter.M_Wood_Counter@
                token outputs:out
            }
        }
    }

    def "SM_Vents3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.646716770379612, -2.578288211413735, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_009" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_009.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.726014209255254, -2.569955997244506, 0.22205985526606753, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kaffeemaschine" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.17364083409737363, -0.9848090478534245, 0, 0), (0.9848090478534245, -0.17364083409737363, 0, 0), (0, 0, 1, 0), (9.108317057155432, -5.78189257095994, 1.0545821144897758, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kaffeemaschine_WasserbehaelterDeckel" (
            prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_WasserbehaelterDeckel.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.11118394866502081, 0.05289949607207909, 0.18963004642061776, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kaffeemaschine_BohnenDeckel" (
            prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_BohnenDeckel.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.047300229265381216, 0.07816902214720407, 0.18995399050517392, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kaffeemaschine_Gitter" (
            prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Gitter.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0000010343210116751844, -0.16572163183369856, -0.1560703242703454, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kaffeemaschine_Metallteil" (
            prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Metallteil.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00025477489870533854, -0.14598565205064246, 0.04030403047120501, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kaffeemaschine_Wasserbehaelter" (
            prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Wasserbehaelter.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.11810481402366521, 0.052656585589560996, 0.06197799544085569, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kaffeemaschine/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Coffeemachine_Plastic.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kaffeemaschine/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Coffeemachine_Plastic.M_Coffeemachine_Plastic@
                        token outputs:out
                    }
                }
            }
        }
    }

    def "SM_Socket_005" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_005.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.41970682070314, -4.005457979318692, 0.20353858492809707, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle24" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.6634367630607585, -7.6750266839185315, 2.6225188622805717, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Ceiling_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_01.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.009495540049026752, -5.139160041380819, 2.973550043399257, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_TV_Samsung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Samsung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (5.040349008433168, -2.784597716079702, 1.3930260919103148, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Plant_Big_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (8.673136402819978, -0.8524750328255806, 1.0144269335025484, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube12" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube12/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.0814011096954346, -0, 0, 0), (0, 0.025547999888658524, -0, 0), (0, 0, 1.8233489990234375, 0), (7.117386925874939, -2.540119724718039, 1.1979234809147528, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube12/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Handle_Door_3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396923703006035, -0.3420208315276037, 0, 0), (0.3420208315276037, 0.9396923703006035, 0, 0), (0, 0, 1, 0), (1.1037685910515052, -2.8963036462000673, 0.9463318422511549, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_8_Education" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_8_Education.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.614769704905825, 1.7858500272218123, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_8_Education/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_8_Education/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_8_Education/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_8_Education/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Doorelement_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Doorelement_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.5636263149166183, -0.14016845389824084, 1.1840127298829088, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Doorelement_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Doorelement_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Doorelement_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Glass.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Doorelement_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Glass.M_Glass@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_019" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_019.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (7.507618850746326, -2.5697536657060596, 0.2252215525830934, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_031" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_031.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.469860017824317, -7.419481035333547, 0.22401259875269375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_04" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (9.458010042503247, -5.049630014085096, 1.4576800211292493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.187125671495664, -6.439339455678919, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_06_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.124488931793962, -6.157266708077486, 0.554952074998198, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle8" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.003977219498825405, -0.2468628044003397, 0.08541778373529496, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Vents18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.575812186245344, -2.5782323642470146, 2.5311538130532085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Hexagon_Sign6" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1.3147159814834595, -0, 0, 0), (0, 1.3147159814834595, -0, 0), (0, 0, 1.3147159814834595, 0), (1.4139175099003864, -0.0011065699657819422, 2.0061770181467296, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign6/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Vive_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign6/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Vive_Blue.M_Vive_Blue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.167198914128562, -5.326484255943797, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Vents4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.031814440373751, -2.5782879062379607, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Island_Cover_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (6.913930509524107, -6.849991301968885, 0.3791902075888913, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_030" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_030.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.469855135011926, -7.229507895048528, 0.23044158420469785, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (3.5854344901717923, -2.5782479282115105, 2.5256136520442283, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.009797206600069, -5.34370715594946, 0.2253846690345256, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle17" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.0035297374507420247, -0.2515374774844153, 0.159479519140433, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Lobby_Stairs_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairs_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-3.9611598846057063, 9.583889556291183, 0.7699999827891588, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Stairs_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Stairs_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Stairs_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Rubber_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Stairs_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Rubber_Dark.M_Rubber_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.5767339511945693, -7.676609935836268, 2.623027895472319, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_01.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (6.785632172548048, -7.494977859817936, 0.05142547969314126, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_06_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.177540688420663, -6.156526962000271, 0.42198317538239394, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Akustiktrennwand2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Akustiktrennwand.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998581, -5.326322180158224e-7, 0, 0), (5.326322180158224e-7, 0.9999999999998581, 0, 0), (0, 0, 1, 0), (-6.165574203008987, -3.1025756142457794, 0.9080523478675104, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Panel_Grau.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Panel_Grau.M_Fabric_Panel_Grau@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Black.M_Fabric_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_10_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.0101951558099245, -4.84523823398564, 0.7542022536500781, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle18" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.00366646242906655, -0.24861267315357963, 0.021626891606445042, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Hexagon_Sign3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.2949349462627993, -0.0011059599867621062, 2.2973214208188324, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Button_9Floor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Button_9Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.038444289301835965, 8.762840990658674, 1.853497578200006, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_029" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_029.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.466505525711796, -7.077177576187751, 0.22941459142980136, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_11_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (7.010065761281567, -4.195715543425479, 0.22396689868047304, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle23" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000003994741635704457, 0.9999999999920212, 0, 0), (-0.9999999999920212, -0.000003994741635704457, 0, 0), (0, -0, 1, 0), (0.011655965457152301, -0.24802431128234645, 0.16089728949448556, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Retail_Door_Part3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.34202252074975714, -0.9396917554709, 0, 0), (0.9396917554709, -0.34202252074975714, 0, 0), (0, 0, 1, 0), (-3.302161181073757, -3.0409560477519904, 1.0752747867567507, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.16724425895711192, -7.684687328233849, 2.6230309472300632, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Wall_03" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (3.3805999000236397, 6.07095994731128, 2.369399971453845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_002" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.419697055078359, -6.62123886567565, 0.20175857092979754, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Sink_Stove" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.799489594113311, -5.281734501084657, 0.39305953100935653, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Sofa" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sofa.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.11783004109941, -6.606627049596, 0.28476012547105256, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Sofa/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Sofa/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.M_Fabric_Sofa_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_Halterung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (4.879909558894269, -2.670225160042378, 1.4073156423721684, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.339197201299726, -6.439404152943098, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.1566448939596512, -2.5782641025275552, 2.5128835497897057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.07635680981672976, -6.439372414662557, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Lamp_4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (2.1831469238591126, -0.016708984001525096, 2.3259066252580283, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.7156646345034687, -2.5782579990120666, 2.5239937790335603, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.187120788683274, -4.196156217243754, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_Wandboard2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-4.206926785850669, -2.5762047764017098, 1.399136321265928, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Base_Board_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Base_Board_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000004559762630841167, 1.0071539878742, 0, 0), (-0.9999999999897518, -0.000004527373853147054, 0, 0), (0, 0, 1, 0), (8.892469894011242, -5.050943795794012, -0.020885388384340953, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_040" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_040.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-3.4242229459235887, -2.5651180456924862, 0.2218485973362192, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_001" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_001.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_001/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.416895541469103, -6.82542831423666, 0.1994705918549613, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_001/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Window_07" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.35267925666244, -7.695482005726944, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.6546660783589004, -6.439361428334678, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_EG_Apartment" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_EG_Apartment.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144149687644472, 8.510109673065472, 1.222779971448034, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_EG_Apartment/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_EG_Apartment/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_EG_Apartment/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_EG_Apartment/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_003" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.419695834375261, -6.329267436654845, 0.20175857092979754, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_023" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_023.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.468812654566477, -4.617749225398541, 1.0713416813759125, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_023/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_023/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Island_Cover_5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (6.914733732162404, -3.733583290571346, 0.37344390034428443, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtischstuhl_Oben2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752199146993, 0.9848078686252575, 0, 0), (-0.9848078686252575, 0.17364752199146993, 0, 0), (0, 0, 1, 0), (2.3468041467635885, -6.514136817288318, 0.5532696409537721, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Grey_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Grey_2.M_Fabric_Grey_2@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.M_Fabric_YellowGreen_Mesh_2@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ledercouch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledercouch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.4895269218937983, -6.800079193709507, 0.3561918941991351, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_05_Base_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.124838052879909, -5.657802607913254, 0.7534152053278262, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle12" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (-0.0014231835514025913, -0.24980711726062615, 0.01676956139274921, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Kitchen_10_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.9592356842927074, -4.8446144547027075, 0.4285497951086654, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_05_Base_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.124430338045272, -5.65759630908974, 0.5553614682995942, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle7" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (-0.001067962788667632, -0.2507079976603643, 0.08500839043389874, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Retail_Door_Part4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396937138067949, -0.3420171402605331, -0, 0), (-0.3420171402605331, -0.9396937138067949, 0, 0), (0, 0, 1, 0), (0.7035229334937867, -2.7626729729174144, 1.0628796912086074, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Interior_Walls" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Interior_Walls.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9773859949994232, 8.20851971398622, 1.1809100077842913, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_016" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_016.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.265038944817206, -2.569741763850857, 0.22376632190272971, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_007" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_007.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.071214396851929, -2.5651394079966963, 0.2219938610048473, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle19" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.7356755980325715, -7.6768906975487425, 2.623040712854845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.255904966833327, -7.675076732745538, 2.6226830468472144, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Sessel" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sessel.usda@
    )
    {
        rel material:binding = </Root/SM_Sessel/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396897060166244, 0.34202815148228655, 0, 0), (-0.34202815148228655, 0.9396897060166244, 0, 0), (0, 0, 1, 0), (-6.887961882174864, -3.817961950794711, 0.2833731015762737, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Sessel.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Sessel/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Sessel.M_Sessel@
                token outputs:out
            }
        }
    }

    def "SM_Socket_034" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_034.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.2305181609723377, -7.467675614334439, 0.10683456182104578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_7_Competition" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_7_Competition.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.595759695565107, 1.7121699141225974, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_7_Competition/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_7_Competition/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_7_Competition/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_7_Competition/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Pillar_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Pillar_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.196089886216299, 3.905479954209625, 1.940019945650846, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Pillar_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Pillar_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Pillar_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Pillar_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_05" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_05.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_05/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.205101834719585, -7.495018143020161, 0.0508937109061991, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_05/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Wall_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.380805454385154, -5.054441110168966, 1.4574026163502936, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Retail_Door_Part2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1, 0, -0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9923184745240547, -2.594729556261086, 1.0614469672416078, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Couchtisch_Schublade" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch_Schublade.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991132, -0.0000013315805450608307, 0, 0), (0.0000013315805450608307, -0.9999999999991132, 0, 0), (0, 0, 1, 0), (-6.722617647589345, -5.162863654132252, 0.14112991017557874, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Handle_Door2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396924386148275, -0.34202064383618513, 0, 0), (0.34202064383618513, 0.9396924386148275, 0, 0), (0, 0, 1, 0), (1.096958746233014, -2.927025996587588, 0.952844522159296, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_Corridor2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.0000037726618131112347, -1.0897003412181394, 0, 0), (0, 0, 1.1382540464401245, 0), (-9.507293488667301, -1.417065092837845, 1.484979062267115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (7.959786809389584, -2.578233279774338, 2.5311538130532085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.419811890576511, -7.695431956899938, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.7696636343822547, -7.675267162428781, 1.023330513015452, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.3212237029994185, -2.5782549472543224, 2.5239937790335603, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Stairbase" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Stairbase.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9437589815908893, 9.094109904152674, -0.594882989938192, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kabelkanal" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Kabelkanal.usda@
    )
    {
        rel material:binding = </Root/SM_Kabelkanal/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.447801302497055, -5.131542854051077, 1.4662923866594042, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kabelkanal/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                token outputs:out
            }
        }
    }

    def "SM_Socket_020" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_020.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (7.687975292027545, -2.564614810840453, 0.22715453593832535, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_03" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00949569978947118, -7.609429761556612, 1.4576800211292493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (6.075388047798242, -2.578243960926443, 2.5311538130532085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_003" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.200204373891552, -7.441827226240321, 1.1139414729042016, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.0840496807385307, -5.326513552818142, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_02_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.172325844787224, -4.549736531606243, 1.0898194641660268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }

        def "SM_Kitchen_02_Door" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Door.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -9.611015416734894e-16, 0, 0), (9.611015416734894e-16, 1, 0, 0), (0, 0, 1, 0), (-0.17997504860252264, -0.2985315578510099, 0.0010586547614934716, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Door/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Door/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                        token outputs:out
                    }
                }
            }

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Door/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Door/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                        token outputs:out
                    }
                }
            }

            def "SM_Kitchen_Handle5" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000010652644359954166, 0.9999999999994327, -0, 0), (-0.9999999999994327, -0.0000010652644359954166, 0, 0), (0, 0, 1, 0), (0.258856183599334, -0.0018449161793061492, -0.051188658523813046, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_02_Shelf" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00043337122746042966, -0.0033837862170058024, 0.7903617682227093, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Shelf/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Shelf/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/SM_Kitchen_02_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kitchen_02_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0013440238214471843, -0.004648428805749607, 0.580462786097911, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_02_Drawer_3" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0009620014883690458, -0.01368163417075513, 0.4227500821035335, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_02_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0009620014883690458, -0.01368163417075513, 0.1428964201458598, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_02_Drawer_4" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.000964442972586723, -0.013693841186127573, -0.2424372809580575, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_02_Drawer_5" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.000964442972586723, -0.013693841186127573, -0.518095996720433, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_02_Drawer_6" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.000964442972586723, -0.013693841186127573, -0.9551920868040895, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Nachttisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Nachttisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-6.130179916690736, -4.067467255276426, 0.1573348963856347, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Halterung2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987623710573e-7, 0, 0), (-5.235987623710573e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-4.236234646523712, -2.667854554626615, 1.3980041191427972, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_05_Base_Drawer_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.124015298992049, -5.657559687996809, 0.22596999616988, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle11" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (-0.0010325546174105608, -0.2488818259770421, 0.15027038238338264, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Lobby_Lamp_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001997370817630184, -0.9999999999980055, 0, 0), (0.9999999999980055, -0.000001997370817630184, 0, 0), (0, 0, 1, 0), (0.8120702943488141, 8.458478204492963, 1.431703611797758, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.164357117317081, -7.695422191275156, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Exterior_Plane_VertexColor" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Exterior_Plane_VertexColor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0, -17.999999597668648, -0.6999999843537807, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Wall_05" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-7.287039632043843, 1.8206399129188071, 3.089399955360591, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_05/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/StarterContent/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/StarterContent/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_05/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Glass.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Glass.M_Glass@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_01_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004261057743981667, -0.9999999999909218, 0, 0), (0.9999999999909218, 0.000004261057743981667, 0, 0), (0, 0, 1, 0), (9.121969400600278, -4.0501271677733826, 0.22633399457482994, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle3" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031957933082082945, 0.9999999999948935, -0, 0), (-0.9999999999948935, -0.0000031957933082082945, 0, 0), (0, 0, 1, 0), (0.0014515752917615206, -0.24909179749487198, 0.1506059994413107, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Metaltraeger" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Metaltraeger.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.10071471942853805, -5.324451785286101, 2.822849668349704, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.339206356572959, -4.1962135902893465, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Dishwasher_Base" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.663161091653876e-7, 0.9999999999999648, 0, 0), (-0.9999999999999648, -2.663161091653876e-7, 0, 0), (0, 0, 1, 0), (7.128046715675737, -6.53624863320033, 0.08969466962602723, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                    token outputs:out
                }
            }
        }

        def "SM_Dishwasher_Tray_03" (
            prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.013126167711521473, 0.1978784170415397, 0.6113136154864662, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Dishwasher_Tray_02" (
            prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.007355909617179134, 0.1774194315871202, 0.4023278718666461, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Dishwasher_Tray_01" (
            prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00736200871270464, 0.1940161109052804, 0.2271359202160852, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Dishwasher_Base/SM_Dishwasher_Tray_01/Section3/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_Orange.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/SM_Dishwasher_Tray_01/Section3/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_Orange.M_Plastic_Orange@
                        token outputs:out
                    }
                }
            }

            over "Section2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Dishwasher_Base/SM_Dishwasher_Tray_01/Section2/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/SM_Dishwasher_Tray_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Dishwasher_Front" (
            prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Front.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999987625, -0.000001331580553255745, -8.377580676130839e-7, 0), (0.0000013315817376074222, 0.9999999999981142, 0.000001413716664006344, 0), (8.377561851338864e-7, -0.0000014137177795479381, 0.9999999999986497, 0), (0.000313700424619965, -0.07611816244467264, 0.007286529378148998, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section5/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section5/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                        token outputs:out
                    }
                }
            }

            over "Section4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section4/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Oven_Door.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/SM_Dishwasher_Front/Section4/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Oven_Door.M_Glass_Oven_Door@
                        token outputs:out
                    }
                }
            }

            def "SM_Kitchen_Handle14" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000007190534943690707, 0.9999999999731489, -0.0000014137226886430528, 0), (-0.9999999999737973, -0.000007190536127854585, -8.377479051878256e-7, 0), (-8.377580705893987e-7, 0.0000014137166647504231, 0.9999999999986497, 0), (-0.016945089885840325, -0.054937411615957284, 0.678848009723312, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Window_Handle5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.516100950924283, -7.676142406549843, 1.0227819595609162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.323102908363126, -7.674197826515183, 2.622988222621643, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Shadowbox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Shadowbox.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Shadowbox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.008899869719895648, -4.005599886053801, 2.150339917756469, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Shadowbox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Island_Cover_4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.8736609816372756, 0.000005584079837341262, 0, 0), (0, 0, 1, 0), (9.179650063373515, -6.367841654542644, 0.3734469521020287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.065738955458869, -7.672988109745347, 1.0237115249698263, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_04" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_04.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_04/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-1.4559869059327184, -7.495007156692282, 0.0508937109061991, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_04/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "Cube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (-6.328215800936164, -2.490183660160369, 1.225197573933059, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Lamp_3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001997370817630184, -0.9999999999980055, 0, 0), (0.9999999999980055, -0.000001997370817630184, 0, 0), (0, 0, 1, 0), (-5.104844856600948, 7.43562483380083, 2.358606209488073, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (2.6922588509561365, -7.714004954531674, 1.4128619068966373, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_05_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.1774674462348, -5.6568028520762255, 0.4216369534663045, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.571106442858877, -5.326534304770803, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_Base_Board_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Base_Board_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.0000022750053504122945, 1.0049999952290536, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (7.241290731699223, -4.982369578576765, -0.022933270418645346, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Wall_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9437589815908893, 12.173000216193486, 2.369399971453845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.925425349650709, -7.677137279574481, 1.0229446182486868, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Floor_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Floor_02.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Floor_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9437589815908893, 9.60857949714557, -1.4399999678134918, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Granite.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Floor_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                token outputs:out
            }
        }
    }

    def "SM_Vents" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.900111517754681, -2.578294620104998, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Shelf2" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (9.278331701792808, -5.856398794880533, 1.879551959941864, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_11_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.959289395229007, -4.1942506997082205, 0.4372747704995845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kleiderschrank" (
        prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (-8.627356984897915, -3.563966900319599, 0.8238512999448631, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_TurRechts" (
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_TurRechts.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999980655, -0.0000019669534235674804, 0, 0), (0.0000019669534235674804, 0.9999999999980655, 0, 0), (0, 0, 1, 0), (0.25012523092049577, -0.23387494518142304, 0.0742657454103437, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }

            def "SM_Kleiderschrank_GriffRechts" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffRechts.usda@
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/SM_Kleiderschrank_GriffRechts/UnrealMaterial>
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000019669534236932407, 0.9999999999980659, -0, 0), (-0.9999999999980659, -0.0000019669534236932407, 0, 0), (0, 0, 1, 0), (-0.20161342791887255, -0.035627455704488095, 0.002994079522920856, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/SM_Kleiderschrank_GriffRechts/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kleiderschrank_TurLinks" (
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_TurLinks.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.2495319882884921, -0.2346027131094921, 0.07427146745611424, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }

            def "SM_Kleiderschrank_GriffLinks" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffLinks.usda@
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/SM_Kleiderschrank_GriffLinks/UnrealMaterial>
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (4.440892098500626e-16, 0.9999999999999998, -0, 0), (-0.9999999999999998, 4.440892098500626e-16, 0, 0), (0, 0, 1, 0), (0.20377614519500434, -0.03764324104093266, 0.004029693513444954, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/SM_Kleiderschrank_GriffLinks/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                        token outputs:out
                    }
                }
            }
        }
    }

    def "SM_Socket_012" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_012.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (1.0079815448526688, -2.570210819016154, 0.22133574944729162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtisch_Oben" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839374995958, -0.7660475244346887, 0, 0), (0.7660475244346887, -0.6427839374995958, 0, 0), (0, 0, 1, 0), (2.8443413670880773, -6.732852022360589, 0.44232817614835085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_037" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_037.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-7.013501430150086, -7.46770735261498, 0.10608657599792082, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_08_Sink_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (7.032546229529089, -5.946436634664906, 0.5862887442196438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.8276909768352425, -5.326525759849119, 2.822564023824839, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Socket_024" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_024.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.46649820149321, -4.57624287867003, 0.22712661235496512, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Window_2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.000003462109417045141, -0.9999999999940066, 0, 0), (0, 0, 1, 0), (3.3402989976041226, 5.7912877123515045, 1.662870598818273, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-2.742959533416638, -2.5782750888554347, 2.5128835497897057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.7760499715663336, -0.000007094860767974271, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 2.8326780796051025, 0), (5.443027222088858, -7.713990306094502, 1.4128619068966373, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "Cube2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (2.9438774976757713, -2.4901476494189865, 1.225197573933059, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lamp_8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.07636413880368753, -4.196184293415001, 2.822744077531752, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Hexagon_Sign2" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.295605112263445, -0.0011059599867621062, 1.8577161755178224, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Plastic_Darkblue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Plastic_Darkblue.M_Plastic_Darkblue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_6_Challenges" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_6_Challenges.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.60692973926075, 1.6448899473647032, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_6_Challenges/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_6_Challenges/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_6_Challenges/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_6_Challenges/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_036" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_036.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.2463994412183865, -7.467697586990198, 0.10608657599792082, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Floor_Number_EG" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Floor_Number_EG.usda@
    )
    {
        rel material:binding = </Root/SM_Floor_Number_EG/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000001065264436106439, 0.4999999999988653, 0, 0), (-0.4999999999988653, -0.000001065264436106439, 0, 0), (0, 0, 0.5, 0), (-0.9969198385569484, 7.276643514112152, 2.286490122232806, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Emissive_Red.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Floor_Number_EG/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Emissive_Red.M_Emissive_Red@
                token outputs:out
            }
        }
    }

    def "SM_Living_Floor_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Floor_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Floor_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527950096250692, -1.4138699024795756, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Carpet.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Floor_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Carpet.M_Carpet@
                token outputs:out
            }
        }
    }

    def "Cube3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088833093626521, -0.000008344348528519779, 0, 0), (-1.7924405478738468e-8, 0.0044869999400913305, -0, 0), (0, 0, 1.6306040287017822, 0), (6.981469570514491, -2.490100957525499, 1.225197573933059, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Socket_23" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (9.465030916369756, -5.8034031905963275, 1.1211958062381484, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_23/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_23/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (2.669431703028863, -7.695440501821622, 1.4488824139040162, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-5.393818849165314, -2.5782854648317652, 2.540343876324357, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Wall_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.08670959278845203, -2.526713200359495, 1.4574026163502936, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_01_Shelf" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.168461098779858, -4.048857636551759, 1.7998199060599518, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_09_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.959347988977697, -5.345383181302623, 0.4214980984889394, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_9_Exhibition" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_9_Exhibition.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.035907134207178615, 8.619048879614866, 1.838787190345215, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_9_Exhibition/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_9_Exhibition/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_9_Exhibition/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_9_Exhibition/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.008048710047109942, -5.140958137043754, 2.973274469674948, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_006" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_006.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.419705600000043, -3.7084087305871662, 0.20353858492809707, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle25" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.255568052778358, -7.675950756163502, 1.023378883375699, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle27" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.26156658780053, -7.674125805032418, 2.62292047359972, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Wall_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.459454744619393, -5.051389352424678, 1.4574026163502936, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Watertab" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Watertab.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.91159408379508, -5.9276500139910695, 1.0144515764463335, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Counter_Sink_Tap" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Tap.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.9999999999909219, -0.000004261057745304263, 2.447673501738442e-15, 0), (0.000004261057745304263, -0.9999999999909219, 1.5191605013548719e-15, 0), (2.4476670284856004e-15, 1.5191709310192128e-15, 1, 0), (0.04055444057663099, 0.11371084855621404, -0.07370452716116915, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Vents9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.8398419001733828, -2.578265933582202, 2.5128835497897057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.459355346723896, -2.578241214344473, 2.5311538130532085, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Shelf3" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002263686926573527, 0.999999999997438, 0, 0), (-0.999999999997438, -0.000002263686926573527, 0, 0), (0, 0, 1, 0), (9.278331701792808, -5.856398794880533, 1.656143456634652, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_5_Bookstore" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_5_Bookstore.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.557179984513368, 1.5745699721298365, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_5_Bookstore/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_5_Bookstore/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_5_Bookstore/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_5_Bookstore/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Stove" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002130528872212878, 0.9999999999977306, 0, 0), (-0.9999999999977306, -0.000002130528872212878, 0, 0), (0, 0, 1, 0), (6.956042324989085, -4.20027731090164, 0.8646656606048566, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Stove.M_Stove@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Stove.M_Glass_Stove@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_033" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_033.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (3.9865795007367524, -7.467667069412755, 0.10683456182104578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Window_3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940066, 0.000003462109417045141, 0, 0), (-0.000003462109417045141, -0.9999999999940066, 0, 0), (0, 0, 1, 0), (3.339105760326106, 3.1183876866462583, 1.6628701410546114, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Window_3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Window_3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Text_4_RobotGarage" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_4_RobotGarage.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.520449638654668, 1.5045798919071274, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_4_RobotGarage/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_4_RobotGarage/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_4_RobotGarage/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_4_RobotGarage/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schiene" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Schiene.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (0.4780181777920234, -3.127987906158239, 2.8519817477766765, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Ceiling" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Ceiling.usda@
    )
    {
        rel material:binding = </Root/SM_Lobby_Ceiling/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.007419999075978, 6.07095994731128, 5.029409982798768, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Lobby_Ceiling/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_004" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_004.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_004/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-9.416605014131846, -4.217600308561316, 0.2021226456286911, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_004/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Hexagon_Sign4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Hexagon_Sign.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.6792345592550646, -0.0011059599867621062, 2.074463607196577, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Hexagon_Sign4/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Plastic_Darkblue.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Hexagon_Sign4/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Plastic_Darkblue.M_Plastic_Darkblue@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lift_Floor" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9773859949994232, 8.224559752690197, 0.00149702992669426, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/StarterContent/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/StarterContent/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Floor/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Granite_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Floor/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Granite_02.M_Granite_02@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Plant_Big_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Plant_Big_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.6401116847893644, 0.000005678246108949062, 0, 0), (-0.000005678246108949062, -1.6401116847893644, 0, 0), (0, 0, 1.6401116847991943, 0), (-4.8183116598804645, 0.965782754291979, 1.0100423968573864, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Plant_Big_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Rust.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Plant_Big_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Rust.M_Metal_Rust@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Wall_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-4.86428974723168, 7.892700018896903, 2.369399971453845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schlafsofa_Kissen_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_02.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-4.944103283045365, -6.8750199879328875, 0.5443604919829852, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (8.261110044841985, -7.672990551151543, 1.0232378921679128, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Shelf2" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000006391586616083522, -0.9999999999795741, 0, 0), (0.9999999999795741, 0.000006391586616083522, 0, 0), (0, 0, 1, 0), (9.168461098779858, -4.048857636551759, 1.585907862501415, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Wall_04" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-2.007419999075978, -0.11422899944568421, 3.089399955360591, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Granite.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Granite.M_Granite@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Wall_04/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Wall_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Stehtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stehtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (3.0824834516089368, -3.19548332701288, 0.4527169698614557, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_032" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_032.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (6.7246141075056585, -7.467656083084876, 0.10683456182104578, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lift_Text_2_BioSignals" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lift_Text_2_BioSignals.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.04144139674064373, 8.5148496631939, 1.3652099304226795, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_2_BioSignals/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_2_BioSignals/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lift_Text_2_BioSignals/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lift_Text_2_BioSignals/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Exterior_Lawn" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Living_Exterior_Lawn.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08193119819616079, 3.1601598414742966, -0.7199999839067459, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_008" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_008.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-8.878910934353371, -2.5651375769420497, 0.2215517376016436, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Floor" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (-0.008048710047109942, -5.140958137043754, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lobby_Lift_Walls" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Lift_Walls.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-1.0057199634823206, 8.625859792548567, 1.2535699945635344, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lobby_Lift_Walls/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lobby_Lift_Walls/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_07" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (9.571329742118792, -1.3688999632991852, 1.461950040565057, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_017" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_017.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920206, -0.000003994741635372208, 0, 0), (0.000003994741635372208, -0.9999999999920206, 0, 0), (0, 0, 1, 0), (5.421518433507117, -2.5646230505863628, 0.2284706064655495, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

