#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Root" (
    assetInfo = {
        asset identifier = @../../../../../../ApartmentECAI/ApartmentECAI2024.usda@
        string name = "DemoECAI"
        dictionary unreal = {
            string assetType = "World"
            string contentPath = "/Game/Demos/Maps/DemoECAI.DemoECAI"
            string engineVersion = "5.3.2-29314046+++UE5+Release-5.3"
            string exportTime = "2024.03.27-09.57.00"
        }
        string version = "D07D19BF5E59990E09D0B9BE14AD8C744B7F649F"
    }
)
{
    def "SM_Retail_Door_Part6" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1, 0, -0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.9923184778199531, -2.594729552003274, 1.061446966274811, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "RecastNavMesh_Default"
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0, -0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.16435711986545, -7.695422187993906, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_06_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004258603375051351, -0.9999999999909323, 0, 0), (0.9999999999909323, 0.000004258603375051351, 0, 0), (0, 0, 1, 0), (9.177540687219032, -6.156526962390895, 0.49353190022411586, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_06_Base_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -1.1102230246251562e-16, 0, 0), (1.1102230246251562e-16, 1, 0, 0), (0, 0, 1, 0), (0.0006931351497899318, -0.05279541177219701, -0.19690863559874894, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle10" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.004023607527625258, -0.24711915161364603, 0.15116584662118, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_06_Base_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -1.1102230246251562e-16, 0, 0), (1.1102230246251562e-16, 1, 0, 0), (0, 0, 1, 0), (0.0007395240571022275, -0.053051751964022474, 0.13296890702791328, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle8" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.00397721862031298, -0.24686281142182057, 0.08541777809076377, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_06_Base_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_06_Base_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -1.1102230246251562e-16, 0, 0), (1.1102230246251562e-16, 1, 0, 0), (0, 0, 1, 0), (0.0003232630267152187, -0.05329589018587688, 0.3309977726016231, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle9" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.0012489497106236331, -0.24662109980860647, 0.017203819615464664, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Kaffeemaschine_Metallteil" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Metallteil.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (8.964593311978776, -5.756292591336831, 1.166434875183562, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Ceiling_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_01.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.009495537434702134, -5.1391600451308195, 3.0450987731921506, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_011" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_011.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.8494390733666128, -2.5646404426758176, 0.2948078446659448, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.4181859212471615, -5.326495240943551, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Kaffeemaschine_WasserbehaelterDeckel" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_WasserbehaelterDeckel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (9.179719037170342, -5.681583123006718, 1.3157608918458654, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_019" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_019.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (7.507618854544694, -2.5697536625615283, 0.29677028462208077, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schlafsofa_Kissen_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_02.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.944103277137621, -6.875019986331325, 0.6159092174887696, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Fridge_Base" (
        prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158058267654498, -5.055505567000642, 1.0801641271118636, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_03_Fridge" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_03_Fridge.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999702444, -0.000007714355293506957, 0, 0), (0.000007714355293506957, 0.9999999999702444, 0, 0), (0, 0, 1, 0), (-0.002921027354265802, 0.019189468230719393, 0.08169371817400302, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                        token outputs:out
                    }
                }
            }

            over "Section2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section2/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Fridge_Base/SM_Kitchen_03_Fridge/Section2/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Fridge_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0022327471164530514, -0.012080065467658531, 0.11025710753556156, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.0019896411114082675, -0.015473642364091836, -0.04961257889107243, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0025136384707930763, -0.032644023214131096, -0.3561764520388357, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Drawer_04" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_04.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.00508075414679569, -0.028845176900472207, -0.5329980380865652, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Drawer_05" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Drawer_05.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.00004596607958768546, -0.06479735884661518, -0.7127872340679635, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Shelf" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0020422465044046432, -0.0010253769314246734, 0.4112362508081532, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Shelf2" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0020422465044046432, -0.0010253769314246734, 0.5454516478082054, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Fridge_Door_02" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999795973, -0.000006387905061878309, 0, 0), (0.000006387905061878309, 0.9999999999795973, 0, 0), (0, 0, 1, 0), (-0.30201226930241376, -0.2780327345654092, -0.5563140775654111, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Fridge_Base/SM_Fridge_Door_02/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Fridge_Base/SM_Fridge_Door_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                        token outputs:out
                    }
                }
            }

            def "SM_Kitchen_Handle25" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.00000773180858670841, 0.9999999999701098, 0, 0), (-0.9999999999701098, -0.00000773180858670841, 0, 0), (0, 0, 1, 0), (0.465388159597764, -0.008047499820124414, 0.2848683136326969, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Fridge_Door_01" (
            prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999795973, -0.000006387905061878309, 0, 0), (0.000006387905061878309, 0.9999999999795973, 0, 0), (0, 0, 1, 0), (-0.30207330956614625, -0.2780742341745629, 0.33843444243540044, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Fridge_Base/SM_Fridge_Door_01/Section2/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Fridge_Base/SM_Fridge_Door_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                        token outputs:out
                    }
                }
            }

            def "SM_Fridge_Door_Tray_01" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_01.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.00000506145483125664, 0.9999999999871911, 0, 0), (-0.9999999999871911, -0.00000506145483125664, 0, 0), (0, 0, 1, 0), (0.2972511133559201, 0.10379233768006045, -0.015652469650140027, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Door_Tray_02" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Door_Tray_02.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.00000506145483125664, 0.9999999999871911, 0, 0), (-0.9999999999871911, -0.00000506145483125664, 0, 0), (0, 0, 1, 0), (0.29846449332879876, 0.10177694772510774, 0.22387236499606258, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Fridge_Egg_Tray" (
                prepend references = @Assets/Game/Meshes/Fridge/SM_Fridge_Egg_Tray.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.00000506145483125664, 0.9999999999871911, 0, 0), (-0.9999999999871911, -0.00000506145483125664, 0, 0), (0, 0, 1, 0), (0.213159305235518, 0.09950777777582796, 0.22457091498044895, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Kitchen_Handle24" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.00000773180858670841, 0.9999999999701098, 0, 0), (-0.9999999999701098, -0.00000773180858670841, 0, 0), (0, 0, 1, 0), (0.46534665959869126, -0.007986459821489328, -0.473687589412257, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Lamp_3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.411406131398701, -6.439355326069189, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_001" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_001.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_001/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.416895537162922, -6.825428317439786, 0.2710193251976596, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_001/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Steckdosenbox_04" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_04.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_04/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-1.4559869051030998, -7.495007152473532, 0.12244243851861188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_04/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Kitchen_10_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.959235686802013, -4.844614451714426, 0.5000985200773405, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_10_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0003685426689303649, -0.050402829658262205, -0.20396727544097598, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle20" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.002674029383592687, -0.24916931012501187, 0.16028167641742527, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_10_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.00006703201026366495, -0.050715329009270844, 0.12805206713781322, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle19" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.002975540042259405, -0.24885681077400323, 0.0870548980541714, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_10_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_10_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0006238884941393256, -0.050959467532636034, 0.32565246272110004, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle18" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.0036664605466623507, -0.24861267225063807, 0.02162688951660134, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Kitchen_01_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004258603374718284, -0.9999999999909324, 0, 0), (0.9999999999909324, 0.000004258603374718284, 0, 0), (0, 0, 1, 0), (9.121969398461147, -4.050127169472601, 0.2978827245972158, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle3" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.0014515791844039796, -0.2490917906163234, 0.1506059966336936, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def SphereLight "PointLight8"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (5.452868530471944, -4.184762176463274, 2.8663197871881727, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_Island_Cover_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.583981785189592, -5.292297241707936, 0.4492965212128537, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Floor" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Floor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.008048709820097312, -5.1409581345233, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_005" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_005.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.419706817100085, -4.005457980471036, 0.27508731510673295, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_005/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_005/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Bodenspot_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.59030812504556, -5.725051142035133, 0.002297631204057652, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_04/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_04/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "Cube13" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube13/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.081401, -0, 0, 0), (0, 0.025548, -0, 0), (0, 0, 1.823349, 0), (3.0798577211598137, -2.5401197232238983, 1.197923483224323, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube13/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Couchtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991198, -0.0000013264502315534843, 0, 0), (0.0000013264502315534843, -0.9999999999991198, 0, 0), (0, 0, 1, 0), (-6.722615207384781, -5.2266356231755875, 0.19315455693807285, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_BohnenDeckel" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_BohnenDeckel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (9.177085367229209, -5.8420475994200585, 1.316084831838625, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.15664489414565763, -2.578264102371305, 2.5844322834888493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.778821300831962, -2.5782830223708824, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_ShadowBox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Shadow.usda@
    )
    {
        rel material:binding = </Root/SM_Window_ShadowBox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.09330749556135884, -7.72429181734862, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/MI_Basic_Wall_Dark.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Window_ShadowBox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Basic_Wall_Dark.MI_Basic_Wall_Dark@
                token outputs:out
            }
        }
    }

    def "Cube14" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube14/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.081401, -0, 0, 0), (0, 0.025548, -0, 0), (0, 0, 1.823349, 0), (7.117386920914002, -2.5401197232238983, 1.197923483224323, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube14/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Ceiling_Panel_3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.8276909744431244, -5.326525760942869, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Socket_034" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_034.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.230518164848831, -7.467675613084439, 0.17838328726823643, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.026045531770893048, -7.6740952884706, 1.095096676778095, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.6694317026866066, -7.695440497993498, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Shadowbox" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Shadowbox.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Shadowbox/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.008899867448016395, -4.005599890467864, 2.221888651592331, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Shadowbox/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Heater_004" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_004.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-6.950599822288927, -7.441835773662004, 1.185490204757642, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_004/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_004/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_Wandboard" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987752684199e-7, 0, 0), (-5.235987752684199e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (4.91023182260082, -2.5762798524156567, 1.4185726295478438, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_006" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_006.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.419705597100112, -3.708408727110604, 0.27508731510673295, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_006/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_006/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.172325847335593, -4.549736528305462, 1.1613681952968111, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Milchbehaelter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Milchbehaelter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (9.085513719275994, -5.423364748778349, 0.9909991591048558, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_03" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.009495697434698558, -7.6094297599159875, 1.5292287470744867, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.167198919801931, -5.326484260943797, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle22" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.666936520981039, -7.67298932849532, 1.0948961767825764, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.510847049176022, -7.67419416846839, 2.6952382510121433, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_036" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_036.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.246399442732518, -7.467697583083948, 0.17763530728495508, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Samsung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Samsung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987752684199e-7, 0, 0), (-5.235987752684199e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (5.040349009692474, -2.784597717759389, 1.464574818519615, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_Samsung/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_Samsung/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.261110047702854, -7.672990548495293, 1.0947866267850253, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (7.959786814437953, -2.578233282371994, 2.6027025430804778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-1.6411773309637712, -5.7355272118009735, 0.002297631204057652, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_03/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_03/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_004" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_004.usda@
    )
    {
        rel material:binding = </Root/SM_Socket_004/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.416605007169416, -4.217600305729285, 0.27367137513838163, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Socket_004/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle24" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.663436761059265, -7.6750266884497815, 2.6940675910383094, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_09_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.959347986799503, -5.345383180521372, 0.49304683023495804, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_09_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0016759125409271994, -0.05044922244101027, -0.19611343561652303, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle17" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.003529744321915226, -0.25153748189415953, 0.15947952643535473, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_09_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999999902, 1.396263398070233e-7, 0, 0), (-1.396263398070233e-7, 0.9999999999999902, 0, 0), (0, 0, 1, 0), (0.0006541919191420051, -0.050751960258692365, 0.13494460698375293, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle16" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000038571776470597285, 0.9999999999925613, 0, 0), (-0.9999999999925613, -0.0000038571776470597285, 0, 0), (0, 0, 1, 0), (0.004551429864712655, -0.2512347447119793, 0.08721404805061411, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_09_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_09_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.0017528217906096037, -0.050800792596916125, 0.3320843425773363, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle15" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.0034528350722328213, -0.25118591173825366, 0.02224669950274754, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Wall_03" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.00803893746725968, -7.6112229698759055, 1.5289513470806873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_03/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_03/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.763574770582345, -7.676609938414393, 2.694262291033958, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight12"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-0.12169616492682263, -4.184752406463493, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.6546538730169167, -4.196173306208216, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_5/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_5/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Stehtisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stehtisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (3.082483463693225, -3.1954833288625433, 0.5286415732364665, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_White.M_Metal_White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stehtisch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stehtisch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_01" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.085280200446895, -2.534190003356438, 1.5292287470744867, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight15"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-5.554104483503032, -6.404952246838158, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_07" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (9.57132974841716, -1.3688999594027007, 1.5334987669790445, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_07/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_07/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-6.646716769081244, -2.5782882123707664, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.1706719938321275, -7.674096508470573, 1.0953258667729724, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Halterung2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987752684199e-7, 0, 0), (-5.235987752684199e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-4.236234642959719, -2.6678545503688027, 1.469552848408347, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_DiningTable" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (4.059035468329589, -6.57453813671817, 0.37744309672918996, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.8398418988750141, -2.5782659323712642, 2.5844322834888493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Retail_Door_Part5" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part1.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-1.8810787579546122, -2.6049340217751857, 1.0736080660029892, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_04_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004258603375051351, -0.9999999999909323, 0, 0), (0.9999999999909323, 0.000004258603375051351, 0, 0), (0, 0, 1, 0), (9.269991865152587, -5.866569688871946, 1.8260939804390317, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_04_Shelf2" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.9999999999980203, 0.000001989675347268265, 0, 0), (-0.000001989675347268265, -0.9999999999980203, 0, 0), (0, 0, 1, 0), (-0.010170854256500108, 0.008339883127300942, 0.1250067072058821, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kitchen_04_Shelf3" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.9999999999980203, 0.000001989675347268265, 0, 0), (-0.000001989675347268265, -0.9999999999980203, 0, 0), (0, 0, 1, 0), (-0.010170854256500108, 0.008339883127300942, -0.09840179780054842, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Blue.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf3/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Blue.M_Glass_Blue@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Inst.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_04_Base/SM_Kitchen_04_Shelf3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Inst.M_Glass_Inst@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kitchen_04_Door_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -1.1102230246251562e-16, 0, 0), (1.1102230246251562e-16, 1, 0, 0), (0, 0, 1, 0), (-0.008373533423753982, -0.17226559049156695, 0.19916777554825316, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_04_Door_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_04_Door_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -1.1102230246251562e-16, 0, 0), (1.1102230246251562e-16, 1, 0, 0), (0, 0, 1, 0), (-0.009312160432940043, -0.1504345269820915, -0.19994903553079088, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def "SM_Kitchen_Handle6" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.004834394498260611, -0.19146974630982305, -0.33352050254523585, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Wall_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.08670959041494564, -2.5267132035235575, 1.5289513470806873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (3.585434492212348, -2.5782479323716667, 2.5971623832043096, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Counter_Sink" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.9883567761511065, -5.947266717068227, 0.8470127323232034, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Tray_01" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.617993883902159e-7, 0.9999999999999659, 0, 0), (-0.9999999999999659, -2.617993883902159e-7, 0, 0), (0, 0, 1, 0), (6.934030607365392, -6.5436106937389, 0.3883793225744592, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Tray_01/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_Orange.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Tray_01/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_Orange.M_Plastic_Orange@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Tray_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Tray_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_11_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.959289396800813, -4.194250696251189, 0.508823499882322, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_11_Base_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0014649580854630812, -0.050776365745836896, -0.21330787523219732, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle23" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.011655971620903201, -0.24802430927586822, 0.16089729640366512, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_11_Base_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0004578771098652412, -0.05030761790069244, 0.11917846733615363, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle22" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.010648890645305335, -0.2484930571210127, 0.0872035180508495, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_11_Base_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_11_Base_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.0006446382077740579, -0.050825197491454706, 0.3181686328883767, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle21" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000003996803987105224, 0.999999999992013, 0, 0), (-0.999999999992013, -0.000003996803987105224, 0, 0), (0, 0, 1, 0), (0.010835651743214186, -0.24797547753025034, 0.020385739544343175, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Schreibtisch_Unten" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839329297538, -0.7660475282692036, 0, 0), (0.7660475282692036, -0.6427839329297538, 0, 0), (0, 0, 1, 0), (2.2724768248150378, -6.73804610939293, 0.19574818240069525, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Unten/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.7156646340049622, -2.5782580023714416, 2.5955425132405168, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.08404967576828724, -5.326513550943142, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.16724425390874348, -7.684687328233849, 2.694579681026864, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Handle_Door_5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396923700717963, -0.3420208321562448, 0, 0), (0.3420208321562448, 0.9396923700717963, 0, 0), (0, 0, 1, 0), (1.1037685953288487, -2.8963036452625674, 0.9463318388478346, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-6.031814442825382, -2.578287902370773, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schlafsofa_Kissen_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_Kissen_01.usda@
    )
    {
        rel material:binding = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.1385552051430246, -6.88710250606126, 0.6101197276181748, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_Kissen_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                token outputs:out
            }
        }
    }

    def "SM_Lamp_8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.07636413594007245, -4.19618429620797, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_8/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_8/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Island_Cover_03" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (6.913930507814663, -6.849991306890759, 0.45073894118061303, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.5732720348359424, -7.675268378444379, 1.0947341267861985, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Base" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.617993883902159e-7, 0.9999999999999659, 0, 0), (-0.9999999999999659, -2.617993883902159e-7, 0, 0), (0, 0, 1, 0), (7.128046723028794, -6.536248633903455, 0.16124339765134285, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Base/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_Island_Cover_4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.8736609999821753, 0.000005580863524197136, 0, 0), (0, 0, 1, 0), (9.179650067171883, -6.367841657667644, 0.4449956813089849, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_013" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_013.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.709719791786098, -2.569753972561521, 0.29281436471050254, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.187120789356642, -4.196156216208598, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_4" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158631997641674, -4.548772178327017, 0.9189309107157068, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight6"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (8.291859557015549, -4.1847499664635475, 2.8663197871881727, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_06" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_06.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.56782030319646, -7.695471017992815, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube7" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube7/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.776049999985813, -0.000007098523721102473, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 2.832678, 0), (-0.06828551612064368, -7.714018377578249, 1.4844106380762496, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube7/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Vents15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.459355350326953, -2.578241212371817, 2.6027025430804778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_06.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Wall_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527960044690841, -0.2585689842205327, 1.5334987669790445, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Wall_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.769663640446248, -7.675267158444407, 1.094879246782955, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.065738962069737, -7.672988108495347, 1.0952602567744387, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_04" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (9.458010040950052, -5.049630017131971, 1.5292287470744867, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-7.900111511065687, -2.578294622370623, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Counter_Watertab" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Watertab.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.911594087866885, -5.927650017506694, 1.0860003069814148, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Counter_Sink_Tap" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Tap.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.9999999999977329, 0.000002129301687979598, 0, 0), (-0.000002129301687979598, -0.9999999999977329, 0, 0), (0, 0, 1, 0), (0.04055444121834127, 0.11371085110597977, -0.07370452835257535, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Steckdosenbox_06" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_06.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_06/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-6.953101042233021, -7.495030352473013, 0.12244243851861188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_06/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def DistantLight "DirectionalLight2"
    {
        float inputs:angle = 5
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 7000
        bool inputs:enableColorTemperature = 1
        float inputs:exposure = 0
        float inputs:intensity = 5
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.8672646909675069, 2.334681394471315, 0.21705930551468425, 0), (-1.4808340990266182, 0.3659356165980554, 1.9807123707557925, 0), (1.8179610356003413, -0.8156922892944893, 1.50985554349562, 0), (9.040359297932218, -0.5294451781659778, 7.40496504448613, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_05" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.829241264408472, -7.695461257993033, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling_Panel_2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.571106443123008, -5.326534300942678, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_SmallBowl" (
        prepend references = @Assets/Game/Demos/Assets/Istabraq/SmallBowl/SmallBowl.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (7.059035401274364, -5.074538170215289, 0.9675314335396875, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_025" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_025.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.468307290719892, -4.6938344250846225, 0.294623374670068, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_025/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_025/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schlafsofa_geschossen" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schlafsofa_geschossen.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.5563969858035325, -6.706893770089239, 0.41483363198315926, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schlafsofa_geschossen/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Heater_001" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_001.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (4.047082431893712, -7.441796713662878, 1.185490204757642, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_001/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_001/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158631997641674, -4.548772178327017, 0.6432721968771593, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def DomeLight "SkyLight2"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:exposure = 0
        float inputs:intensity = 0.6
        asset inputs:texture:file = @Assets/Game/StarterContent/HDRI/dreifaltigkeitsberg_4k.hdr@
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-4.440892098500626e-16, -1.0000000000000004, 1.1102230246251565e-16, 0), (1.1102230246251565e-16, -4.440892098500626e-16, 1.0000000000000004, 0), (-1.0000000000000004, -1.1102230246251565e-16, -4.440892098500626e-16, 0), (10.626429202480793, 6.9198765553287025, -0.5110572685769796, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Sessel" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sessel.usda@
    )
    {
        rel material:binding = </Root/SM_Sessel/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.939689707695551, 0.3420281468695958, 0, 0), (-0.3420281468695958, 0.939689707695551, 0, 0), (0, 0, 1, 0), (-6.887961883688995, -3.8179619546618984, 0.3549218333222924, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Sessel.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Sessel/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Sessel.M_Sessel@
                token outputs:out
            }
        }
    }

    def "SM_Socket_009" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_009.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.726014202605324, -2.569955992557006, 0.29360858469275025, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_009/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_009/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.06841962200982, -7.675073068448745, 2.694229941034681, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Drawer_02" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158644207641402, -4.548774618326962, 1.3042646121028272, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.575812190668712, -2.5782323623720145, 2.6027025430804778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.654666083016644, -6.439361426069053, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_6/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_6/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_TV_LG" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_LG.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999637286, 0.000008517206749951777, 0, 0), (-0.000008517206749951777, 0.9999999999637286, 0, 0), (0, 0, 1, 0), (-4.240288602869105, -2.7795516378721783, 1.4840807380836236, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_TV_LG/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_TV_LG/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Door" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (8.873793134008318, -4.369763392328175, 1.1624268452731483, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Door/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Door/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Door/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Door/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        def "SM_Kitchen_Handle5" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000010646508441514158, 0.9999999999994336, 0, 0), (-0.9999999999994336, -0.0000010646508441514158, 0, 0), (0, 0, 1, 0), (0.2588561824342618, -0.001844913507555033, -0.05118865885584426, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "Cube" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088832999983315, -0.000008348656062566732, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 1.630604, 0), (-6.328215796200295, -2.4901836643400563, 1.2967463022708747, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def SphereLight "PointLight18"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-8.276120422661233, -4.1848097864622105, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_039" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_039.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-3.6059209370483285, -2.565117132665163, 0.29378451468881794, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_039/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_039/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kabelkanal" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Kabelkanal.usda@
    )
    {
        rel material:binding = </Root/SM_Kabelkanal/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.447801296472125, -5.131542855301077, 1.5378411168819854, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kabelkanal/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                token outputs:out
            }
        }
    }

    def "SM_Vents7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.7429595263370192, -2.57827509237106, 2.5844322834888493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_038" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_038.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-3.757622593657532, -2.5699386025573947, 0.2961199546366168, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_038/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_038/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def SphereLight "PointLight7"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (5.452878300471725, -6.404910746839086, 2.8663197871881727, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.4113939213989735, -4.196159876208516, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_4/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_4/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.3938188470856945, -2.578285462370828, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.0457354219211927, -2.5782711223711483, 2.5844322834888493, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight9"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (2.698923892027405, -6.4049205068388675, 2.8663197871881727, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Retail_Door_Part8" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9396937131772176, -0.34201714199029953, -0, 0), (-0.34201714199029953, -0.9396937131772176, 0, 0), (0, 0, 1, 0), (0.7035229342750366, -2.762672968249446, 1.0628796862427872, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight11"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (0.07797180061025047, -6.404930276838648, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kleiderschrank" (
        prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (-8.627356984810485, -3.5639669003391306, 0.895400031241663, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_GriffLinks" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffLinks.usda@
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffLinks/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.000001867502298913415, -0.9999999999982564, 0, 0), (0.9999999999982564, 0.000001867502298913415, 0, 0), (0, 0, 1, 0), (-0.045755838671168364, -0.272245956487459, 0.07830115824983273, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffLinks/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_GriffRechts" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_GriffRechts.usda@
        )
        {
            rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffRechts/UnrealMaterial>
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.000001867502298913415, -0.9999999999982564, 0, 0), (0.9999999999982564, 0.000001867502298913415, 0, 0), (0, 0, 1, 0), (0.04851173506469677, -0.2695020072728934, 0.07725982827310822, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_GriffRechts/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        def "SM_Kleiderschrank_TurRechts" (
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_TurRechts.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999980552, -0.0000019722220555564015, 0, 0), (0.0000019722220555564015, 0.9999999999980552, 0, 0), (0, 0, 1, 0), (0.2501252264195014, -0.23387494736509606, 0.07426574834003113, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurRechts/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kleiderschrank_TurLinks" (
            prepend references = @Assets/Game/Meshes/Kleiderschrank/SM_Kleiderschrank_TurLinks.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.24953198396305598, -0.23460271342786607, 0.07427146833990333, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Furniture.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kleiderschrank/SM_Kleiderschrank_TurLinks/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Furniture.M_Wood_Furniture@
                        token outputs:out
                    }
                }
            }
        }
    }

    def "SM_Kitchen_Island_Cover_5" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Island_Cover_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (6.914733737796709, -3.733583286547909, 0.4449926313090531, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Handle_Door_4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.3420225214304511, -0.9396917552231459, 0, 0), (0.9396917552231459, -0.3420225214304511, 0, 0), (0, 0, 1, 0), (-3.429338303348314, -3.446086352973966, 0.9637673784581199, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_7" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.07635680594023629, -6.4393724160688075, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_7/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_7/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.187125669356533, -6.439339456069543, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_2/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Wall_02" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-9.382219637937988, -5.052609747065369, 1.5292287470744867, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.319698911687178, -5.326545290942432, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def SphereLight "PointLight14"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-2.821960994571199, -4.184787806462701, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_010" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_010.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.6336114381907365, -2.5646428826757632, 0.29490024466387943, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_23" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.465030920793124, -5.803403190283827, 1.1927445345954952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_23/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_23/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door4" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.939692435735065, -0.3420206517482545, 0, 0), (0.3420206517482545, 0.939692435735065, 0, 0), (0, 0, 1, 0), (1.0969587454810608, -2.927025994575869, 0.9528445187022648, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight16"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-5.554111813502868, -4.184801236462402, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_040" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_040.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-3.424222941109595, -2.565118042665143, 0.2933973246974723, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_040/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_040/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lobby_Window_Corridor3" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1.090307, 0), (9.614094025108248, -1.3673728594368342, 1.4439493977252154, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight13"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-2.821953674571363, -6.404941266838404, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Nachttisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Nachttisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-6.130179910626743, -4.06746725908502, 0.2288836261394659, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_007" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_007.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.071214394889497, -2.5651394126646645, 0.2935425946942253, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_007/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_007/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle26" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.451563528739774, -7.6759519784291, 1.0948961767825764, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Shelf" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Shelf.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.168942057411225, -4.549303178315148, 1.9517299576308487, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Shelf/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_02_Shelf/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_02_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ledersessel" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledersessel.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.6336749134832056, -6.700746920226631, 0.3604069831996897, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledersessel/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledersessel/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_03.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_03/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.2931915034479728, -7.494998612473722, 0.12104144854992646, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_03/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "Cube8" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube8/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.776049999985813, -0.000007098523721102473, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 2.832678, 0), (-2.8308208543731657, -7.714028147578031, 1.4844106380762496, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube8/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def SphereLight "PointLight5"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (8.291861997015495, -6.404903416839249, 2.866319177188187, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle8" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.3231029133724315, -7.674197828468308, 2.694536951027819, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle19" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.735675596499828, -7.676890698408117, 2.694589441026645, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Metaltraeger" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Metaltraeger.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.10071471539579457, -5.324451780989226, 2.894398396560567, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtisch_Oben" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtisch_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.6427839329297538, -0.7660475282692036, 0, 0), (0.7660475282692036, -0.6427839329297538, 0, 0), (0, 0, 1, 0), (2.2662854149534266, -6.732852019509027, 0.5138769152899638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }

        over "Section3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section3/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtisch_Oben/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_13" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.339206351251153, -4.196213586207316, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_13/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_13/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Bodenspot_01" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (3.7123021693766347, -5.734794791817345, 0.002297631204057652, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_01/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_028" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_028.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.468854160707668, -6.02523546532549, 0.3014723545169813, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Cup" (
        prepend references = @Assets/Game/Demos/Assets/Istabraq/Cup/cup.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (6.65903541021506, -5.074538170408799, 0.9769314333295811, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.167594397441349, -4.039442349711426, 1.1133851063693168, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Rubber_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Rubber_Plastic.M_Rubber_Plastic@
                    token outputs:out
                }
            }
        }

        def "SM_Kitchen_01_Shelf" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.009415295325756426, 0.0008666398366330221, 0.7579835330577476, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Kitchen_01_Shelf2" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Shelf.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.009415295325756426, 0.0008666398366330221, 0.5440714878390543, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_01_Base/SM_Kitchen_01_Shelf2/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                        token outputs:out
                    }
                }
            }
        }

        def "SM_Oven" (
            prepend references = @Assets/Game/Meshes/Oven/SM_Oven.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.9999999999487633, -0.00001012290966138441, 0, 0), (0.00001012290966138441, 0.9999999999487633, 0, 0), (0, 0, 1, 0), (0.012361539724466955, -0.27395514284655814, -0.34267257234067094, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Oven_Door" (
                prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Door.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (0.9999999999931545, 0.0000016057029117395807, 0.0000033335788712279127, 0), (0.0000033335688102540378, 0.000006265737367394664, -0.999999999974814, 0), (-0.0000016057237990288408, 0.9999999999790813, 0.000006265732014676395, 0), (0, -0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Oven_Tray" (
                prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Tray.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.00025908145300459183, 0.24592772547247244, 0.2922000034688208, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }

            def "SM_Oven_Grid" (
                prepend references = @Assets/Game/Meshes/Oven/SM_Oven_Grid.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.0007271696243431841, 0.22748046220101945, 0.21979537508719046, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Akustiktrennwand2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Akustiktrennwand.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998537, -5.410520681182158e-7, 0, 0), (5.410520681182158e-7, 0.9999999999998537, 0, 0), (0, 0, 1, 0), (-6.165574199835618, -3.1025756106520292, 0.9796010793596229, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Panel_Grau.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Panel_Grau.M_Fabric_Panel_Grau@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Akustiktrennwand2/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Black.M_Fabric_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_05_Base" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.17746744722067, -5.656802853560601, 0.4931856802318545, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_05_Base_Drawer_03" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_03.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.999999999997733, -0.0000021293016870803787, 0, 0), (0.0000021293016870803787, 0.999999999997733, 0, 0), (0, 0, 1, 0), (0.0007564885358164305, -0.05345215363871826, -0.19566695562650263, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle11" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (-0.0010325498659128052, -0.24888182004209447, 0.15027038664119508, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_05_Base_Drawer_02" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_02.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.999999999997733, -0.0000021293016870803787, 0, 0), (0.0000021293016870803787, 0.999999999997733, 0, 0), (0, 0, 1, 0), (0.000793121186232605, -0.05303711388199337, 0.133724517011024, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle7" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (-0.0010679676420964, -0.25070799985046177, 0.08500838809991441, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def "SM_Kitchen_05_Base_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_05_Base_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (0.999999999997733, -0.0000021293016870803787, 0, 0), (0.0000021293016870803787, 0.999999999997733, 0, 0), (0, 0, 1, 0), (0.0009994137860939016, -0.052629395208875246, 0.331778252584178, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def "SM_Kitchen_Handle12" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (-0.0014231737976633043, -0.24980711835790848, 0.016769559625171165, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Kitchen_08_Sink_Base" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Base.usda@
    )
    {
        rel material:binding = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.617993883902159e-7, 0.9999999999999659, 0, 0), (-0.9999999999999659, -2.617993883902159e-7, 0, 0), (0, 0, 1, 0), (6.959555506794865, -5.945012077118622, 0.49346034022571533, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }

        def "SM_Kitchen_08_Sink_Drawer_01" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_08_Sink_Drawer_01.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-0.00013673331381513468, -0.050866698827245975, 0.003200069928472901, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            over "Section0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section0/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                        token outputs:out
                    }
                }
            }

            over "Section2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section2/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                        token outputs:out
                    }
                }
            }

            over "Section1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial>

                def Material "UnrealMaterial" (
                    prepend references = @Assets/Game/Materials_Laborraum/M_Kitchen_Fronts.usda@
                )
                {
                    token outputs:unreal:surface.connect = </Root/SM_Kitchen_08_Sink_Base/SM_Kitchen_08_Sink_Drawer_01/Section1/UnrealMaterial/UnrealShader.outputs:out>

                    def Shader "UnrealShader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Kitchen_Fronts.M_Kitchen_Fronts@
                        token outputs:out
                    }
                }
            }

            def "SM_Kitchen_Handle13" (
                prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
            )
            {
                token visibility = "inherited"
                matrix4d xformOp:transform = ( (-0.000005864306285907617, 0.9999999999828051, 0, 0), (-0.9999999999828051, -0.000005864306285907617, 0, 0), (0, 0, 1, 0), (0.0033080447371480718, -0.24900329530039578, 0.35071746216085364, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def "SM_Socket_023" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_023.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.468812660708597, -4.617749226785259, 1.1428904157098216, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_023/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_023/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (8.255904967819196, -7.675076728448663, 2.6942317810346395, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_002" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.2839361336548465, -7.441805253662686, 1.185490204757642, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Handle_Door3" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Handle_Door.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.3420225214304511, -0.9396917552231459, 0, 0), (0.9396917552231459, -0.3420225214304511, 0, 0), (0, 0, 1, 0), (-3.4662126925241075, -3.4326567832741404, 0.9643714684446175, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle17" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.7297246666328414, -7.67713483840266, 1.0946312867884973, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Bodenspot_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Bodenspot_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.3093999930856848, -5.730739621907985, 0.002297631204057652, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Floor_Wood.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Floor_Wood.M_Floor_Wood@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Bodenspot_02/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Bodenspot_02/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_012" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_012.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.0079815498229123, -2.57021082255131, 0.2928844747089354, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_035" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_035.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-1.5090606339168096, -7.467687823084166, 0.17838328726823643, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Stove" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.956042326873391, -4.200277306116484, 0.9362143903293909, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Stove.M_Stove@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Stove/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Stove.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Stove/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Stove.M_Glass_Stove@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Kitchen_02_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.167677407439493, -4.548392538335502, 1.7418309823224565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_9" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.84608208403205, -4.1961940562077515, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_9/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_9/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Couchtisch_Schublade" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Couchtisch_Schublade.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999991198, -0.0000013264502315534843, 0, 0), (0.0000013264502315534843, -0.9999999999991198, 0, 0), (0, 0, 1, 0), (-6.722617647384727, -5.1628636546010025, 0.21267863650167565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ceiling" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.008048707467041304, -5.140958135090629, 3.0448232031983102, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube10" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube10/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (2.081401, -0, 0, 0), (0, 0.025548, -0, 0), (0, 0, 1.823349, 0), (-6.250126200298791, -2.540116363223974, 1.197923483224323, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube10/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Models/IAILab/IAIDoors/IAIDoorA/M_IAIDoorAGlass.M_IAIDoorAGlass@
                token outputs:out
            }
        }
    }

    def "SM_Socket_029" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_029.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.466505530760164, -7.077177571812751, 0.30096332452835906, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_029/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_029/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Living_Ceiling_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Ceiling_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Ceiling_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527950044691066, -1.4138698983975444, 3.059348652873641, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Ceiling_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                token outputs:out
            }
        }
    }

    def "SM_Socket_017" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_017.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.4215184311726725, -2.5646230526762066, 0.30001933454945884, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Front" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Front.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.0000010646508443734604, 0.9999999999990821, -8.377580408262543e-7, 0), (-0.9999999999984337, 0.000001064652028759383, 0.00000141371669411444, 0), (0.0000014137175860339401, 8.377565357102704e-7, 0.9999999999986497, 0), (7.2041648813274195, -6.535934913910467, 0.1685299274884762, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }

        over "Section5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section5/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dishwasher.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section5/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dishwasher.M_Metal_Dishwasher@
                    token outputs:out
                }
            }
        }

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Dishwasher_Front/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Glass_Oven_Door.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Dishwasher_Front/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass_Oven_Door.M_Glass_Oven_Door@
                    token outputs:out
                }
            }
        }

        def "SM_Kitchen_Handle14" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.000007190756518671293, 0.999999999973147, -0.0000014137227185745136, 0), (-0.9999999999737954, -0.000007190757702835171, -8.377478747273549e-7, 0), (-8.377580404423878e-7, 0.0000014137166944964766, 0.9999999999986497, 0), (-0.01694508984140785, -0.05493740711335475, 0.6788480082975266, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Kitchen_02_Drawer_3" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158644207641402, -4.548774618326962, 1.5841182758476102, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (4.190995998676994, -2.5782473223716806, 2.5971623832043096, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Door_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Door_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004258603374718284, -0.9999999999909324, 0, 0), (0.9999999999909324, 0.000004258603374718284, 0, 0), (0, 0, 1, 0), (8.887999683690778, -3.765281285839403, 1.7908461812268812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle4" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.4631551332379664, -0.015595232045617712, -0.38983428128652464, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Socket_018" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_018.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.613434936883006, -2.5646215226762403, 0.2999610445507618, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_018/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_018/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "Cube4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube4/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.776049999985813, -0.000007098523721102473, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 2.832678, 0), (2.69225885217638, -7.71400495757855, 1.4844106380762496, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube4/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Socket_008" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_008.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.878910929187816, -2.565137572664706, 0.29310046470410767, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_008/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_008/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_015" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_015.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (3.0581182239987856, -2.564632512675995, 0.2923772047202738, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_07" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_07.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.352679250950011, -7.695482007992569, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (9.1083170587663, -5.781892570764627, 1.1261308460844273, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_TV_Wandboard2" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Wandboard.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987752684199e-7, 0, 0), (-5.235987752684199e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (-4.206926783614801, -2.5762047724173347, 1.4706850483830405, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_024" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_024.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.466498200760329, -4.576242877712999, 0.2986753445794994, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_024/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_024/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Schreibtischstuhl_Unten3" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Unten.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752451765608, 0.9848078681798244, 0, 0), (-0.9848078681798244, 0.17364752451765608, 0, 0), (0, 0, 1, 0), (1.783141353399482, -6.5161094743536, 0.04246506457142629, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Unten3/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black_02.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Unten3/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black_02.M_Basic_Black_02@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_014" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_014.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.866201718288454, -2.5646312926760224, 0.29231151472174205, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle6" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.319904673443919, -7.676146068424762, 1.0943291667952502, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_003" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.41969582710033, -6.329267438529845, 0.2733073051465193, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle5" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.516100949058589, -7.676142408424843, 1.0943306867952163, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_033" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_033.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (3.9865795032460585, -7.4676670730846295, 0.17838328726823643, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_022" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_022.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.468822420708378, -3.358727644926585, 0.6562233965876775, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_022/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_022/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Wall_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.459454750917761, -5.0513893570926465, 1.5289513470806873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_04/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_04/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_027" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_027.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.466500640760273, -5.623604614302638, 0.3009643145283369, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_027/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_027/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_14" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.339197201251357, -6.439404156068098, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_14/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_14/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle23" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.475181145267107, -7.6750254584498085, 2.6944484510297966, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents_Short" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents_Short.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.194625646837153, -2.578227172372131, 2.6027025430804778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Dark.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Dark.M_Metal_Dark@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Vents_Short/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Vents_Short/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_037" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_037.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-7.013501430882967, -7.46770735308373, 0.17763530728495508, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight10"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (2.698906802027787, -4.184768276463138, 2.8663197871881727, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_026" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_026.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.46830240072, -4.813443802411144, 0.294623374670068, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_026/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_026/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/White.White@
                    token outputs:out
                }
            }
        }
    }

    def "Cube3" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube3/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088832999983315, -0.000008348656062566732, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 1.630604, 0), (6.981469576305047, -2.490100954341905, 1.2967463022708747, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube3/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Schiene" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Schiene.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.4780181816685169, -3.12798791008402, 2.9235304759094136, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schiene/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schiene/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Steckdosenbox_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_02.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (4.046862701898624, -7.494991292473886, 0.12104144854992646, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Lobby_Window_Corridor4" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Lobby_Window_Corridor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999940292, 0.000003455751919405738, 0, 0), (-0.000003765732866576432, -1.0896999999934935, 0, 0), (0, 0, 1.138254, 0), (-9.507293487495426, -1.4170650883261264, 1.4849790668081304, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Wall_05" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Wall_05.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (-9.419439487106061, -1.4138698983975444, 1.5334987669790445, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Living_Wall_05/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Living_Wall_05/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Sofa" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Sofa.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-7.117830038551041, -6.606627052330375, 0.35630885329129, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Sofa/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Sofa/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Sofa_Inst.M_Fabric_Sofa_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Vents2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-7.27801314497067, -2.5782906523707116, 2.6118926028750638, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Retail_Door_Part7" (
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Retail_Door_Part2.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.3420225214304511, -0.9396917552231459, 0, 0), (0.9396917552231459, -0.3420225214304511, 0, 0), (0, 0, 1, 0), (-3.302161176190944, -3.040956052029334, 1.075274785965735, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.419811891210818, -7.695431957993688, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle20" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.9226128523214547, -7.675457588440151, 2.694305631032989, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_02_Drawer_6" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_02_Drawer_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.00000638790506179987, -0.9999999999795977, 0, 0), (0.9999999999795977, 0.00000638790506179987, 0, 0), (0, 0, 1, 0), (9.158631997641674, -4.548772178327017, 0.20617610664701852, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle18" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.9254253522585905, -7.677137278402606, 1.0944933467915805, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_04" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_04.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-0.06886657610765598, -7.69544660799336, 1.5204311472711287, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Window_04/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Window_04/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Exterior_Plane_VertexColor2" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Exterior_Plane_VertexColor.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (1.1368683518051719e-15, -17.999999597531758, -0.6596871317912195, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kitchen_01_Drawer_01" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_01_Drawer_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.000004258603374718284, -0.9999999999909324, 0, 0), (0.9999999999909324, 0.000004258603374718284, 0, 0), (0, 0, 1, 0), (9.120807298487122, -4.050665499460568, 0.6267998772453444, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def "SM_Kitchen_Handle2" (
            prepend references = @Assets/Game/Meshes/Kitchen/SM_Kitchen_Handle.usda@
        )
        {
            token visibility = "inherited"
            matrix4d xformOp:transform = ( (-0.0000031939525311219796, 0.9999999999948995, 0, 0), (-0.9999999999948995, -0.0000031939525311219796, 0, 0), (0, 0, 1, 0), (0.0009132541453643895, -0.24792968834977475, 0.08401427812213454, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "SM_Socket_020" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_020.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (7.687975290513414, -2.5646148126763904, 0.29870326457887536, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Heater_003" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Heater_003.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.200204373765058, -7.441827223662195, 1.185490204757642, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Heater_003/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Heater_003/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_MilkBox" (
        prepend references = @Assets/Game/Demos/Assets/Giang/milk_box.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (6.859035405744712, -5.374538163354432, 1.0354314320220044, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Cube6" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube6/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.776049999985813, -0.000007098523721102473, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 2.832678, 0), (8.171871769697484, -7.714008617578467, 1.4844106380762496, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube6/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Socket_030" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_030.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.469855140685295, -7.229507898407902, 0.30199031450540403, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_030/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_030/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Ceiling_Panel_5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Raum/SM_Ceiling_Panel_01.usda@
    )
    {
        rel material:binding = </Root/SM_Ceiling_Panel_5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.6661187127606576, -5.326506230943305, 2.894112756566952, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Ceiling_Panel_5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle27" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.261566582986536, -7.674125808469918, 2.6944692010293325, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Esstischstuhl" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstischstuhl.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.8660223407153511, -0.5000053053537579, 0, 0), (0.5000053053537579, -0.8660223407153511, 0, 0), (0, 0, 1, 0), (2.1341927646501295, -3.991321930787001, 0.412673902031433, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Esstischstuhl.M_Fabric_Esstischstuhl@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Esstischstuhl/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Esstisch.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Esstischstuhl/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Esstisch.M_Esstisch@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Lamp_12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.568312253185463, -4.196203826207533, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_12/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_12/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle21" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.469238765399929, -7.67298932849532, 1.0940902068005913, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_05" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_05.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_05/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-4.205101833655592, -7.4950181424732865, 0.12244243851861188, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_05/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "SM_Window_Handle25" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.255568053120614, -7.675950758429127, 1.0949276167818738, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Socket_021" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_021.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (7.888185246038372, -2.564613282676425, 0.29867061457960503, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.321223700469662, -2.5782549423715095, 2.5955425132405168, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def SphereLight "PointLight17"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:colorTemperature = 6500
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 61.89359
        float inputs:radius = 0.03
        bool treatAsPoint = 0
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000008761552846126008, 0.9999999999616186, 1.57009245866871e-16, 0), (0.9999999999616186, 0.000008761552844016585, 6.878224024224567e-22, 0), (-6.878224024224567e-22, 1.57009245866871e-16, -1.0000000000000022, 0), (-8.276110652661451, -6.404963236837912, 2.866321617188132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Vents16" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Vents.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (6.075388046557548, -2.5782439623717557, 2.6027025430804778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle12" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (2.576733954758563, -7.676609938414393, 2.694576621026932, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Living_Floor_02" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/MeshesVerbindungsraum/SM_Living_Floor_02.usda@
    )
    {
        rel material:binding = </Root/SM_Living_Floor_02/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, -0, 0, 0), (0, 1, -0, 0), (0, 0, 1, 0), (0.08527950027986773, -1.4138698983975444, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials/M_Carpet.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Living_Floor_02/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials/M_Carpet.M_Carpet@
                token outputs:out
            }
        }
    }

    def "SM_Socket_031" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_031.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (9.469860020685186, -7.419481034161672, 0.2955613246491032, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_031/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_031/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Black.M_Basic_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Wall_02" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Wall_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.380805447969598, -5.054441107024435, 1.5289513470806873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall.M_Basic_Wall@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Wall_02/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Plastic_White.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Wall_02/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Plastic_White.M_Plastic_White@
                    token outputs:out
                }
            }
        }
    }

    def "Cube5" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube5/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-1.776049999985813, -0.000007098523721102473, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 2.832678, 0), (5.443027220691914, -7.713990307578877, 1.4844106380762496, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube5/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Lamp_10" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.846073544032242, -6.439384626068534, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_10/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_10/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_002" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_002.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-9.419697057100302, -6.621238862003776, 0.2733073051465193, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Basic_Wall_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Basic_Wall_Inst.M_Basic_Wall_Inst@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Socket_002/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Socket_002/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Sink_Stove" (
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Sink_Stove.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (6.799489600372617, -5.281734501944031, 0.4646082608706096, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Lamp_11" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Lamp_01.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-5.568302483185682, -6.439393166068344, 2.8942928065629268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/MI_Light.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/MI_Light.MI_Light@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Lamp_11/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed_Inst.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Lamp_11/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed_Inst.M_Metal_Brushed_Inst@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Socket_016" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_016.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (5.265038944670263, -2.569741762561794, 0.2953150546546077, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Esstisch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Esstisch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000002129301688080787, 0.9999999999977333, 0, 0), (-0.9999999999977333, -0.000002129301688080787, 0, 0), (0, 0, 1, 0), (2.0898295156417253, -3.4183721135934273, 0.3760210728506876, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Steckdosenbox_01" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Steckdosenbox_01.usda@
    )
    {
        rel material:binding = </Root/SM_Steckdosenbox_01/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (6.785632170682354, -7.494977862474186, 0.1229742085067259, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Brushed.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Steckdosenbox_01/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Brushed.M_Metal_Brushed@
                token outputs:out
            }
        }
    }

    def "Cube2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Engine/BasicShapes/Cube.usda@
    )
    {
        rel material:binding = </Root/Cube2/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.088832999983315, -0.000008348656062566732, 0, 0), (-1.7933659489646573e-8, 0.0044869999999641585, -0, 0), (0, 0, 1.630604, 0), (2.943877496552265, -2.4901476543408614, 1.2967463022708747, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Glass.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/Cube2/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Glass.M_Glass@
                token outputs:out
            }
        }
    }

    def "SM_Socket_032" (
        prepend references = @Assets/Game/Meshes/Steckdosen/SM_Socket_032.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (6.724614112046214, -7.467656083084876, 0.17838328726823643, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Schreibtischstuhl_Oben3" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Schreibtischstuhl_Oben.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.17364752451765608, 0.9848078681798244, 0, 0), (-0.9848078681798244, 0.17364752451765608, 0, 0), (0, 0, 1, 0), (1.7687481937211942, -6.514136814397692, 0.553269643154054, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben3/Section4/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Schlafsofa.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben3/Section4/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Schlafsofa.M_Fabric_Schlafsofa@
                    token outputs:out
                }
            }
        }

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben3/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_Grey_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben3/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_Grey_2.M_Fabric_Grey_2@
                    token outputs:out
                }
            }
        }

        over "Section2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Schreibtischstuhl_Oben3/Section2/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Schreibtischstuhl_Oben3/Section2/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Fabric_YellowGreen_Mesh_2.M_Fabric_YellowGreen_Mesh_2@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Counter_Wall" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Assets/Game/Meshes/Kitchen/SM_Counter_Wall.usda@
    )
    {
        rel material:binding = </Root/SM_Counter_Wall/UnrealMaterial>
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.000004520402763219522, 0.9999999999897832, 0, 0), (-0.9999999999897832, -0.000004520402763219522, 0, 0), (0, 0, 1, 0), (9.170799967369698, -5.867626818848318, 0.9079000309622662, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Material "UnrealMaterial" (
            prepend references = @Assets/Game/Materials_Laborraum/M_Wood_Counter.usda@
        )
        {
            token outputs:unreal:surface.connect = </Root/SM_Counter_Wall/UnrealMaterial/UnrealShader.outputs:out>

            def Shader "UnrealShader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Wood_Counter.M_Wood_Counter@
                token outputs:out
            }
        }
    }

    def "SM_TV_Halterung" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_TV_Halterung.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (0.9999999999998629, 5.235987752684199e-7, 0, 0), (-5.235987752684199e-7, 0.9999999999998629, 0, 0), (0, 0, 1, 0), (4.879909563278575, -2.670225160315815, 1.4788643682002185, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Window_Handle15" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (0.020193481901696557, -7.684687328233849, 2.6947328710234397, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Dishwasher_Tray_03" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_03.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.617993883902159e-7, 0.9999999999999659, 0, 0), (-0.9999999999999659, -2.617993883902159e-7, 0, 0), (0, 0, 1, 0), (6.93016830745172, -6.549374853610061, 0.7725570139874185, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_Gitter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Gitter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (8.945112722414201, -5.753117551407799, 0.970060519572871, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Ledercouch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/SM_Ledercouch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-2.4895269220016796, -6.800079198006382, 0.4277406216946656, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Ledercouch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Ledercouch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Dishwasher_Tray_02" (
        prepend references = @Assets/Game/Meshes/Dishwasher/SM_Dishwasher_Tray_02.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-2.617993883902159e-7, 0.9999999999999659, 0, 0), (-0.9999999999999659, -2.617993883902159e-7, 0, 0), (0, 0, 1, 0), (6.9506272869944254, -6.543604593739036, 0.563571268658614, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "SM_Kaffeemaschine_Wasserbehaelter" (
        prepend references = @Assets/Game/Meshes/Kaffeemaschine/SM_Kaffeemaschine_Wasserbehaelter.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.1736408383272725, -0.9848090471076119, 0, 0), (0.9848090471076119, -0.1736408383272725, 0, 0), (0, 0, 1, 0), (9.180681557148828, -5.674725213160005, 1.1881088346991113, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Coffeemachine_Plastic.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/SM_Kaffeemaschine_Wasserbehaelter/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Coffeemachine_Plastic.M_Coffeemachine_Plastic@
                    token outputs:out
                }
            }
        }
    }

    def "SM_Window_Handle28" (
        prepend references = @Assets/Game/Meshes/Raum/SM_Window_Handle.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (-0.9999999999920122, -0.000003996803986995002, 0, 0), (0.000003996803986995002, -0.9999999999920122, 0, 0), (0, 0, 1, 0), (-8.448528858807604, -7.674125808469918, 2.6945180310282417, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

