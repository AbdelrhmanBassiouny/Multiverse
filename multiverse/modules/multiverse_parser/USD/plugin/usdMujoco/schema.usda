#usda 1.0
(
    """ This file contains the API schema for MuJoCo.
    """
    subLayers = [
        @usd/schema.usda@
    ]
)

over "GLOBAL" 
(
    customData = {
        string libraryName       = "UsdMujoco"
        string libraryPath       = "."
        string libraryPrefix     = "UsdMujoco"
    }
)
{
}

class Mujoco "Mujoco" 
(
    customData = {
        string className = "Mujoco"
    }
    doc = """Mujoco"""
    inherits = </Typed>
    prepend apiSchemas = ["MujocoOptionAPI"]
)
{
    string mujoco:model (
        customData = {
            string apiName = "mjModel"
        }
        displayName = "MuJoCo Model"
        doc = """The name of the model."""
    )
}

class "MujocoOptionAPI" (
    customData = {
        string className = "MujocoOptionAPI"
    }

    doc = """This element is in one-to-one correspondence with the low level structure mjOption contained in the field mjModel.opt of mjModel."""

    inherits = </APISchemaBase>
)
{
    float mujoco:option:timestep = 0.002 (
        customData = {
            string apiName = "mjTimeStep"
        }
        displayName = "Time Step"
        doc = "Simulation time step in seconds."
    )
}

class MujocoEquality "MujocoEquality" 
(
    customData = {
        string className = "MujocoEquality"
    }
    doc = """This is a grouping element for equality constraints."""
    inherits = </Typed>
)
{
}

class "MujocoEqualityJointAPI" (
    customData = {
        string className = "MujocoEqualityJointAPI"
        token apiSchemaType = "multipleApply"
        token propertyNamespacePrefix = "mujoco"
    }

    doc = """This element constrains the position or angle of one joint to be a quartic polynomial of another joint."""

    inherits = </APISchemaBase>
)
{
    rel joint1 (
        customData = {
            string apiName = "mjEqualityJointJoint1"
        }
        displayName = "Equality Joint1 Name"
        doc = "Name of the first joint."
    )

    rel joint2 (
        customData = {
            string apiName = "mjEqualityJointJoint2"
        }
        displayName = "Equality Joint2 Name"
        doc = "Name of the second joint."
    )

    float[] polycoef (
        customData = {
            string apiName = "mjEqualityJointPolycoef"
        }
        displayName = "Equality Joint Polycoef"
        doc = "Coefficients a0 â€¦ a4 of the quartic polynomial."
    )
}

class "MujocoBodyAPI" (
    customData = {
        string className = "MujocoBodyAPI"
    }

    doc = """This element creates a body."""

    inherits = </APISchemaBase>
)
{
    point3f mujoco:body:pos (
        customData = {
            string apiName = "mjBodyPos"
        }
        displayName = "Body Position"
        doc = "The 3D position (x, y, z) of the body frame, in the parent coordinate frame."
    )

    quatf mujoco:body:quat = (1, 0, 0, 0) (
        customData = {
            string apiName = "mjBodyQuat"
        }
        displayName = "Body Quaternion"
        doc = "The quaternion (w, x, y, z) of the body frame, in the parent coordinate frame."
    )
}

class "MujocoJointAPI" (
    customData = {
        string className = "MujocoJointAPI"
    }

    doc = """This element creates a joint."""

    inherits = </APISchemaBase>
)
{
    uniform token mujoco:joint:type = "hinge" (
        customData = {
            string apiName = "mjJointType"
        }
        allowedTokens = ["ball", "slide", "hinge"]
        displayName = "Joint Type"
        doc = """Type of the joint."""
    )

    point3f mujoco:joint:pos (
        customData = {
            string apiName = "mjJointPos"
        }
        displayName = "Joint Position"
        doc = "The 3D position (x, y, z) of the joint, specified in the frame of the body where the joint is defined."
    )

    vector3f mujoco:joint:axis = (0, 0, 1) (
        customData = {
            string apiName = "mjJointAxis"
        }
        displayName = "Joint Axis"
        doc = "This attribute specifies the axis of rotation for hinge joints and the direction of translation for slide joints."
    )
}

class "MujocoGeomAPI" (
    customData = {
        string className = "MujocoGeomAPI"
    }

    doc = """This element creates a geom, and attaches it rigidly to the body within which the geom is defined."""

    inherits = </APISchemaBase>
)
{
    uniform token mujoco:geom:type = "sphere" (
        customData = {
            string apiName = "mjGeomType"
        }
        allowedTokens = ["plane", "hfield", "sphere", "capsule", "ellipsoid", "cylinder", "box", "mesh", "sdf"]
        displayName = "Geom Type"
        doc = """Type of geometric shape."""
    )

    vector3f mujoco:geom:size (
        customData = {
            string apiName = "mjGeomSize"
        }
        displayName = "Geom Size"
        doc = "Geom size parameters. The number of required parameters and their meaning depends on the geom type as documented under the type attribute."
    )

    point3f mujoco:geom:pos (
        customData = {
            string apiName = "mjGeomPos"
        }
        displayName = "Geom Position"
        doc = "The 3D position (x, y, z) of the geom, specified in the frame of the body where the geom is defined."
    )

    quatf mujoco:geom:quat = (1, 0, 0, 0) (
        customData = {
            string apiName = "mjGeomQuat"
        }
        displayName = "Geom Quaternion"
        doc = "The quaternion (w, x, y, z) of the geom frame, specified in the frame of the body where the geom is defined."
    )
}