#!/usr/bin/env python3.10

import argparse
import os
import numpy

from multiverse_parser import UrdfImporter, MjcfImporter


def main():
    parser = argparse.ArgumentParser(description="Multiverse parser")
    parser.add_argument(
        "--input",
        type=str,
        required=True,
        help="Import scene description as (URDF, MJCF, WORLD or USD)",
    )
    parser.add_argument(
        "--output",
        type=str,
        required=True,
        help="Export scene description as (URDF, MJCF, WORLD or USD)",
    )
    parser.add_argument(
        "--physics",
        action=argparse.BooleanOptionalAction,
        help="Whether to include physics properties or not",
    )
    parser.set_defaults(physics=True)
    parser.add_argument(
        "--visual",
        action=argparse.BooleanOptionalAction,
        help="Whether to include visual meshes or not",
    )
    parser.set_defaults(visual=True)
    parser.add_argument(
        "--collision",
        action=argparse.BooleanOptionalAction,
        help="Whether to include collision meshes or not",
    )
    parser.set_defaults(collision=True)
    parser.add_argument(
        "--keepusd",
        action=argparse.BooleanOptionalAction,
        help="Whether to keep the USD file or not",
    )
    parser.set_defaults(keepusd=False)
    parser.add_argument(
        "--defaultrgba",
        nargs="+",
        type=float,
        help="The default color of the meshes",
    )
    parser.set_defaults(collisionrgba=numpy.array([1.0, 0.0, 0.0, 0.1]))

    args = parser.parse_args()

    in_extension = os.path.splitext(args.input)[1]
    out_extension = os.path.splitext(args.output)[1]

    if in_extension in [".usd", ".usda", ".usdc"]:
        raise NotImplementedError("Importing from USD is not supported yet.")
    elif in_extension == ".urdf":
        importer = UrdfImporter(file_path=args.input,
                                with_physics=True,
                                with_visual=True,
                                with_collision=False)
    elif in_extension == ".xml":
        importer = MjcfImporter(file_path=args.input,
                                with_physics=True,
                                with_visual=True,
                                with_collision=False)
    else:
        raise NotImplementedError(f"Importing from {in_extension} is not supported yet.")

    importer.import_model()

    if args.keepusd:
        output_usd_path = os.path.join(os.path.dirname(args.output), os.path.splitext(args.output)[0] + ".usda")
        importer.save_tmp_model(file_path=str(output_usd_path))


if __name__ == "__main__":
    main()
